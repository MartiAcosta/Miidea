/* Minification failed. Returning unminified contents.
(8410,49-50): run-time error JS1003: Expected ':': ,
(8410,62-63): run-time error JS1003: Expected ':': ,
(8410,72-73): run-time error JS1003: Expected ':': ,
(8410,84-85): run-time error JS1003: Expected ':': ,
(8410,95-96): run-time error JS1003: Expected ':': ,
(8410,102-103): run-time error JS1003: Expected ':': }
 */
/*! jQuery v2.2.0 | (c) jQuery Foundation | jquery.org/license */
!function(n,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=n.document?t(n,!0):function(n){if(!n.document)throw new Error("jQuery requires a window with a document");return t(n)}:t(n)}("undefined"!=typeof window?window:this,function(n,t){function ii(n){var t=!!n&&"length"in n&&n.length,r=i.type(n);return"function"===r||i.isWindow(n)?!1:"array"===r||0===t||"number"==typeof t&&t>0&&t-1 in n}function ri(n,t,r){if(i.isFunction(t))return i.grep(n,function(n,i){return!!t.call(n,i,n)!==r});if(t.nodeType)return i.grep(n,function(n){return n===t!==r});if("string"==typeof t){if(wf.test(t))return i.filter(t,n,r);t=i.filter(t,n)}return i.grep(n,function(n){return ct.call(t,n)>-1!==r})}function hr(n,t){while((n=n[t])&&1!==n.nodeType);return n}function bf(n){var t={};return i.each(n.match(h)||[],function(n,i){t[i]=!0}),t}function vt(){u.removeEventListener("DOMContentLoaded",vt);n.removeEventListener("load",vt);i.ready()}function ft(){this.expando=i.expando+ft.uid++}function lr(n,t,r){var u;if(void 0===r&&1===n.nodeType)if(u="data-"+t.replace(cr,"-$&").toLowerCase(),r=n.getAttribute(u),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:kf.test(r)?i.parseJSON(r):r}catch(f){}e.set(n,t,r)}else r=void 0;return r}function vr(n,t,r,u){var h,e=1,l=20,c=u?function(){return u.cur()}:function(){return i.css(n,t,"")},s=c(),o=r&&r[3]||(i.cssNumber[t]?"":"px"),f=(i.cssNumber[t]||"px"!==o&&+s)&&et.exec(i.css(n,t));if(f&&f[3]!==o){o=o||f[3];r=r||[];f=+s||1;do e=e||".5",f/=e,i.style(n,t,f+o);while(e!==(e=c()/s)&&1!==e&&--l)}return r&&(f=+f||+s||0,h=r[1]?f+(r[1]+1)*r[2]:+r[2],u&&(u.unit=o,u.start=f,u.end=h)),h}function o(n,t){var r="undefined"!=typeof n.getElementsByTagName?n.getElementsByTagName(t||"*"):"undefined"!=typeof n.querySelectorAll?n.querySelectorAll(t||"*"):[];return void 0===t||t&&i.nodeName(n,t)?i.merge([n],r):r}function ui(n,t){for(var i=0,u=n.length;u>i;i++)r.set(n[i],"globalEval",!t||r.get(t[i],"globalEval"))}function kr(n,t,r,u,f){for(var e,s,p,a,w,v,h=t.createDocumentFragment(),y=[],l=0,b=n.length;b>l;l++)if(e=n[l],e||0===e)if("object"===i.type(e))i.merge(y,e.nodeType?[e]:e);else if(br.test(e)){for(s=s||h.appendChild(t.createElement("div")),p=(pr.exec(e)||["",""])[1].toLowerCase(),a=c[p]||c._default,s.innerHTML=a[1]+i.htmlPrefilter(e)+a[2],v=a[0];v--;)s=s.lastChild;i.merge(y,s.childNodes);s=h.firstChild;s.textContent=""}else y.push(t.createTextNode(e));for(h.textContent="",l=0;e=y[l++];)if(u&&i.inArray(e,u)>-1)f&&f.push(e);else if(w=i.contains(e.ownerDocument,e),s=o(h.appendChild(e),"script"),w&&ui(s),r)for(v=0;e=s[v++];)wr.test(e.type||"")&&r.push(e);return h}function yt(){return!0}function nt(){return!1}function gr(){try{return u.activeElement}catch(n){}}function fi(n,t,r,u,f,e){var o,s;if("object"==typeof t){"string"!=typeof r&&(u=u||r,r=void 0);for(s in t)fi(n,s,r,u,t[s],e);return n}if(null==u&&null==f?(f=r,u=r=void 0):null==f&&("string"==typeof r?(f=u,u=void 0):(f=u,u=r,r=void 0)),f===!1)f=nt;else if(!f)return this;return 1===e&&(o=f,f=function(n){return i().off(n),o.apply(this,arguments)},f.guid=o.guid||(o.guid=i.guid++)),n.each(function(){i.event.add(this,t,f,u,r)})}function nu(n,t){return i.nodeName(n,"table")&&i.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?n.getElementsByTagName("tbody")[0]||n:n}function fe(n){return n.type=(null!==n.getAttribute("type"))+"/"+n.type,n}function ee(n){var t=re.exec(n.type);return t?n.type=t[1]:n.removeAttribute("type"),n}function tu(n,t){var u,c,f,s,h,l,a,o;if(1===t.nodeType){if(r.hasData(n)&&(s=r.access(n),h=r.set(t,s),o=s.events)){delete h.handle;h.events={};for(f in o)for(u=0,c=o[f].length;c>u;u++)i.event.add(t,f,o[f][u])}e.hasData(n)&&(l=e.access(n),a=i.extend({},l),e.set(t,a))}}function oe(n,t){var i=t.nodeName.toLowerCase();"input"===i&&yr.test(n.type)?t.checked=n.checked:("input"===i||"textarea"===i)&&(t.defaultValue=n.defaultValue)}function b(n,t,u,e){t=gi.apply([],t);var l,p,c,a,s,w,h=0,v=n.length,d=v-1,y=t[0],k=i.isFunction(y);if(k||v>1&&"string"==typeof y&&!f.checkClone&&ie.test(y))return n.each(function(i){var r=n.eq(i);k&&(t[0]=y.call(this,i,r.html()));b(r,t,u,e)});if(v&&(l=kr(t,n[0].ownerDocument,!1,n,e),p=l.firstChild,1===l.childNodes.length&&(l=p),p||e)){for(c=i.map(o(l,"script"),fe),a=c.length;v>h;h++)s=l,h!==d&&(s=i.clone(s,!0,!0),a&&i.merge(c,o(s,"script"))),u.call(n[h],s,h);if(a)for(w=c[c.length-1].ownerDocument,i.map(c,ee),h=0;a>h;h++)s=c[h],wr.test(s.type||"")&&!r.access(s,"globalEval")&&i.contains(w,s)&&(s.src?i._evalUrl&&i._evalUrl(s.src):i.globalEval(s.textContent.replace(ue,"")))}return n}function iu(n,t,r){for(var u,e=t?i.filter(t,n):n,f=0;null!=(u=e[f]);f++)r||1!==u.nodeType||i.cleanData(o(u)),u.parentNode&&(r&&i.contains(u.ownerDocument,u)&&ui(o(u,"script")),u.parentNode.removeChild(u));return n}function ru(n,t){var r=i(t.createElement(n)).appendTo(t.body),u=i.css(r[0],"display");return r.detach(),u}function oi(n){var r=u,t=ei[n];return t||(t=ru(n,r),"none"!==t&&t||(pt=(pt||i("<iframe frameborder='0' width='0' height='0'/>")).appendTo(r.documentElement),r=pt[0].contentDocument,r.write(),r.close(),t=ru(n,r),pt.detach()),ei[n]=t),t}function tt(n,t,r){var o,s,h,u,e=n.style;return r=r||wt(n),r&&(u=r.getPropertyValue(t)||r[t],""!==u||i.contains(n.ownerDocument,n)||(u=i.style(n,t)),!f.pixelMarginRight()&&si.test(u)&&uu.test(t)&&(o=e.width,s=e.minWidth,h=e.maxWidth,e.minWidth=e.maxWidth=e.width=u,u=r.width,e.width=o,e.minWidth=s,e.maxWidth=h)),void 0!==u?u+"":u}function ci(n,t){return{get:function(){return n()?void delete this.get:(this.get=t).apply(this,arguments)}}}function su(n){if(n in ou)return n;for(var i=n[0].toUpperCase()+n.slice(1),t=eu.length;t--;)if(n=eu[t]+i,n in ou)return n}function hu(n,t,i){var r=et.exec(t);return r?Math.max(0,r[2]-(i||0))+(r[3]||"px"):t}function cu(n,t,r,u,f){for(var e=r===(u?"border":"content")?4:"width"===t?1:0,o=0;4>e;e+=2)"margin"===r&&(o+=i.css(n,r+w[e],!0,f)),u?("content"===r&&(o-=i.css(n,"padding"+w[e],!0,f)),"margin"!==r&&(o-=i.css(n,"border"+w[e]+"Width",!0,f))):(o+=i.css(n,"padding"+w[e],!0,f),"padding"!==r&&(o+=i.css(n,"border"+w[e]+"Width",!0,f)));return o}function lu(t,r,e){var h=!0,o="width"===r?t.offsetWidth:t.offsetHeight,s=wt(t),c="border-box"===i.css(t,"boxSizing",!1,s);if(u.msFullscreenElement&&n.top!==n&&t.getClientRects().length&&(o=Math.round(100*t.getBoundingClientRect()[r])),0>=o||null==o){if(o=tt(t,r,s),(0>o||null==o)&&(o=t.style[r]),si.test(o))return o;h=c&&(f.boxSizingReliable()||o===t.style[r]);o=parseFloat(o)||0}return o+cu(t,r,e||(c?"border":"content"),h,s)+"px"}function au(n,t){for(var e,u,s,o=[],f=0,h=n.length;h>f;f++)u=n[f],u.style&&(o[f]=r.get(u,"olddisplay"),e=u.style.display,t?(o[f]||"none"!==e||(u.style.display=""),""===u.style.display&&ot(u)&&(o[f]=r.access(u,"olddisplay",oi(u.nodeName)))):(s=ot(u),"none"===e&&s||r.set(u,"olddisplay",s?e:i.css(u,"display"))));for(f=0;h>f;f++)u=n[f],u.style&&(t&&"none"!==u.style.display&&""!==u.style.display||(u.style.display=t?o[f]||"":"none"));return n}function s(n,t,i,r,u){return new s.prototype.init(n,t,i,r,u)}function pu(){return n.setTimeout(function(){it=void 0}),it=i.now()}function kt(n,t){var r,u=0,i={height:n};for(t=t?1:0;4>u;u+=2-t)r=w[u],i["margin"+r]=i["padding"+r]=n;return t&&(i.opacity=i.width=n),i}function wu(n,t,i){for(var u,f=(l.tweeners[t]||[]).concat(l.tweeners["*"]),r=0,e=f.length;e>r;r++)if(u=f[r].call(i,t,n))return u}function ce(n,t,u){var f,a,p,v,o,w,h,b,l=this,y={},s=n.style,c=n.nodeType&&ot(n),e=r.get(n,"fxshow");u.queue||(o=i._queueHooks(n,"fx"),null==o.unqueued&&(o.unqueued=0,w=o.empty.fire,o.empty.fire=function(){o.unqueued||w()}),o.unqueued++,l.always(function(){l.always(function(){o.unqueued--;i.queue(n,"fx").length||o.empty.fire()})}));1===n.nodeType&&("height"in t||"width"in t)&&(u.overflow=[s.overflow,s.overflowX,s.overflowY],h=i.css(n,"display"),b="none"===h?r.get(n,"olddisplay")||oi(n.nodeName):h,"inline"===b&&"none"===i.css(n,"float")&&(s.display="inline-block"));u.overflow&&(s.overflow="hidden",l.always(function(){s.overflow=u.overflow[0];s.overflowX=u.overflow[1];s.overflowY=u.overflow[2]}));for(f in t)if(a=t[f],vu.exec(a)){if(delete t[f],p=p||"toggle"===a,a===(c?"hide":"show")){if("show"!==a||!e||void 0===e[f])continue;c=!0}y[f]=e&&e[f]||i.style(n,f)}else h=void 0;if(i.isEmptyObject(y))"inline"===("none"===h?oi(n.nodeName):h)&&(s.display=h);else{e?"hidden"in e&&(c=e.hidden):e=r.access(n,"fxshow",{});p&&(e.hidden=!c);c?i(n).show():l.done(function(){i(n).hide()});l.done(function(){var t;r.remove(n,"fxshow");for(t in y)i.style(n,t,y[t])});for(f in y)v=wu(c?e[f]:0,f,l),f in e||(e[f]=v.start,c&&(v.end=v.start,v.start="width"===f||"height"===f?1:0))}}function le(n,t){var r,f,e,u,o;for(r in n)if(f=i.camelCase(r),e=t[f],u=n[r],i.isArray(u)&&(e=u[1],u=n[r]=u[0]),r!==f&&(n[f]=u,delete n[r]),o=i.cssHooks[f],o&&"expand"in o){u=o.expand(u);delete n[f];for(r in u)r in n||(n[r]=u[r],t[r]=e)}else t[f]=e}function l(n,t,r){var e,o,s=0,a=l.prefilters.length,f=i.Deferred().always(function(){delete c.elem}),c=function(){if(o)return!1;for(var s=it||pu(),t=Math.max(0,u.startTime+u.duration-s),h=t/u.duration||0,i=1-h,r=0,e=u.tweens.length;e>r;r++)u.tweens[r].run(i);return f.notifyWith(n,[u,i,t]),1>i&&e?t:(f.resolveWith(n,[u]),!1)},u=f.promise({elem:n,props:i.extend({},t),opts:i.extend(!0,{specialEasing:{},easing:i.easing._default},r),originalProperties:t,originalOptions:r,startTime:it||pu(),duration:r.duration,tweens:[],createTween:function(t,r){var f=i.Tween(n,u.opts,t,r,u.opts.specialEasing[t]||u.opts.easing);return u.tweens.push(f),f},stop:function(t){var i=0,r=t?u.tweens.length:0;if(o)return this;for(o=!0;r>i;i++)u.tweens[i].run(1);return t?(f.notifyWith(n,[u,1,0]),f.resolveWith(n,[u,t])):f.rejectWith(n,[u,t]),this}}),h=u.props;for(le(h,u.opts.specialEasing);a>s;s++)if(e=l.prefilters[s].call(u,n,h,u.opts))return i.isFunction(e.stop)&&(i._queueHooks(u.elem,u.opts.queue).stop=i.proxy(e.stop,e)),e;return i.map(h,wu,u),i.isFunction(u.opts.start)&&u.opts.start.call(n,u),i.fx.timer(i.extend(c,{elem:n,anim:u,queue:u.opts.queue})),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always)}function k(n){return n.getAttribute&&n.getAttribute("class")||""}function uf(n){return function(t,r){"string"!=typeof t&&(r=t,t="*");var u,f=0,e=t.toLowerCase().match(h)||[];if(i.isFunction(r))while(u=e[f++])"+"===u[0]?(u=u.slice(1)||"*",(n[u]=n[u]||[]).unshift(r)):(n[u]=n[u]||[]).push(r)}}function ff(n,t,r,u){function e(s){var h;return f[s]=!0,i.each(n[s]||[],function(n,i){var s=i(t,r,u);return"string"!=typeof s||o||f[s]?o?!(h=s):void 0:(t.dataTypes.unshift(s),e(s),!1)}),h}var f={},o=n===yi;return e(t.dataTypes[0])||!f["*"]&&e("*")}function wi(n,t){var r,u,f=i.ajaxSettings.flatOptions||{};for(r in t)void 0!==t[r]&&((f[r]?n:u||(u={}))[r]=t[r]);return u&&i.extend(!0,n,u),n}function we(n,t,i){for(var e,u,f,o,s=n.contents,r=n.dataTypes;"*"===r[0];)r.shift(),void 0===e&&(e=n.mimeType||t.getResponseHeader("Content-Type"));if(e)for(u in s)if(s[u]&&s[u].test(e)){r.unshift(u);break}if(r[0]in i)f=r[0];else{for(u in i){if(!r[0]||n.converters[u+" "+r[0]]){f=u;break}o||(o=u)}f=f||o}if(f)return(f!==r[0]&&r.unshift(f),i[f])}function be(n,t,i,r){var h,u,f,s,e,o={},c=n.dataTypes.slice();if(c[1])for(f in n.converters)o[f.toLowerCase()]=n.converters[f];for(u=c.shift();u;)if(n.responseFields[u]&&(i[n.responseFields[u]]=t),!e&&r&&n.dataFilter&&(t=n.dataFilter(t,n.dataType)),e=u,u=c.shift())if("*"===u)u=e;else if("*"!==e&&e!==u){if(f=o[e+" "+u]||o["* "+u],!f)for(h in o)if(s=h.split(" "),s[1]===u&&(f=o[e+" "+s[0]]||o["* "+s[0]])){f===!0?f=o[h]:o[h]!==!0&&(u=s[0],c.unshift(s[1]));break}if(f!==!0)if(f&&n.throws)t=f(t);else try{t=f(t)}catch(l){return{state:"parsererror",error:f?l:"No conversion from "+e+" to "+u}}}return{state:"success",data:t}}function bi(n,t,r,u){var f;if(i.isArray(t))i.each(t,function(t,i){r||de.test(n)?u(n,i):bi(n+"["+("object"==typeof i&&null!=i?t:"")+"]",i,r,u)});else if(r||"object"!==i.type(t))u(n,t);else for(f in t)bi(n+"["+f+"]",t[f],r,u)}function sf(n){return i.isWindow(n)?n:9===n.nodeType&&n.defaultView}var y=[],u=n.document,v=y.slice,gi=y.concat,ni=y.push,ct=y.indexOf,lt={},lf=lt.toString,ti=lt.hasOwnProperty,f={},nr="2.2.0",i=function(n,t){return new i.fn.init(n,t)},af=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,vf=/^-ms-/,yf=/-([\da-z])/gi,pf=function(n,t){return t.toUpperCase()},p,ur,fr,er,or,sr,h,at,a,g,br,pt,ei,it,bt,vu,yu,bu,rt,ku,du,dt,gu,li,of,ut,ki,gt,di,hf,cf;i.fn=i.prototype={jquery:nr,constructor:i,selector:"",length:0,toArray:function(){return v.call(this)},get:function(n){return null!=n?0>n?this[n+this.length]:this[n]:v.call(this)},pushStack:function(n){var t=i.merge(this.constructor(),n);return t.prevObject=this,t.context=this.context,t},each:function(n){return i.each(this,n)},map:function(n){return this.pushStack(i.map(this,function(t,i){return n.call(t,i,t)}))},slice:function(){return this.pushStack(v.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(n){var i=this.length,t=+n+(0>n?i:0);return this.pushStack(t>=0&&i>t?[this[t]]:[])},end:function(){return this.prevObject||this.constructor()},push:ni,sort:y.sort,splice:y.splice};i.extend=i.fn.extend=function(){var e,f,r,t,o,s,n=arguments[0]||{},u=1,c=arguments.length,h=!1;for("boolean"==typeof n&&(h=n,n=arguments[u]||{},u++),"object"==typeof n||i.isFunction(n)||(n={}),u===c&&(n=this,u--);c>u;u++)if(null!=(e=arguments[u]))for(f in e)r=n[f],t=e[f],n!==t&&(h&&t&&(i.isPlainObject(t)||(o=i.isArray(t)))?(o?(o=!1,s=r&&i.isArray(r)?r:[]):s=r&&i.isPlainObject(r)?r:{},n[f]=i.extend(h,s,t)):void 0!==t&&(n[f]=t));return n};i.extend({expando:"jQuery"+(nr+Math.random()).replace(/\D/g,""),isReady:!0,error:function(n){throw new Error(n);},noop:function(){},isFunction:function(n){return"function"===i.type(n)},isArray:Array.isArray,isWindow:function(n){return null!=n&&n===n.window},isNumeric:function(n){var t=n&&n.toString();return!i.isArray(n)&&t-parseFloat(t)+1>=0},isPlainObject:function(n){return"object"!==i.type(n)||n.nodeType||i.isWindow(n)?!1:n.constructor&&!ti.call(n.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(n){for(var t in n)return!1;return!0},type:function(n){return null==n?n+"":"object"==typeof n||"function"==typeof n?lt[lf.call(n)]||"object":typeof n},globalEval:function(n){var t,r=eval;n=i.trim(n);n&&(1===n.indexOf("use strict")?(t=u.createElement("script"),t.text=n,u.head.appendChild(t).parentNode.removeChild(t)):r(n))},camelCase:function(n){return n.replace(vf,"ms-").replace(yf,pf)},nodeName:function(n,t){return n.nodeName&&n.nodeName.toLowerCase()===t.toLowerCase()},each:function(n,t){var r,i=0;if(ii(n)){for(r=n.length;r>i;i++)if(t.call(n[i],i,n[i])===!1)break}else for(i in n)if(t.call(n[i],i,n[i])===!1)break;return n},trim:function(n){return null==n?"":(n+"").replace(af,"")},makeArray:function(n,t){var r=t||[];return null!=n&&(ii(Object(n))?i.merge(r,"string"==typeof n?[n]:n):ni.call(r,n)),r},inArray:function(n,t,i){return null==t?-1:ct.call(t,n,i)},merge:function(n,t){for(var u=+t.length,i=0,r=n.length;u>i;i++)n[r++]=t[i];return n.length=r,n},grep:function(n,t,i){for(var u,f=[],r=0,e=n.length,o=!i;e>r;r++)u=!t(n[r],r),u!==o&&f.push(n[r]);return f},map:function(n,t,i){var e,u,r=0,f=[];if(ii(n))for(e=n.length;e>r;r++)u=t(n[r],r,i),null!=u&&f.push(u);else for(r in n)u=t(n[r],r,i),null!=u&&f.push(u);return gi.apply([],f)},guid:1,proxy:function(n,t){var u,f,r;return"string"==typeof t&&(u=n[t],t=n,n=u),i.isFunction(n)?(f=v.call(arguments,2),r=function(){return n.apply(t||this,f.concat(v.call(arguments)))},r.guid=n.guid=n.guid||i.guid++,r):void 0},now:Date.now,support:f});"function"==typeof Symbol&&(i.fn[Symbol.iterator]=y[Symbol.iterator]);i.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(n,t){lt["[object "+t+"]"]=t.toLowerCase()});p=function(n){function u(n,t,r,u){var l,w,a,s,nt,d,y,g,p=t&&t.ownerDocument,v=t?t.nodeType:9;if(r=r||[],"string"!=typeof n||!n||1!==v&&9!==v&&11!==v)return r;if(!u&&((t?t.ownerDocument||t:c)!==i&&b(t),t=t||i,h)){if(11!==v&&(d=sr.exec(n)))if(l=d[1]){if(9===v){if(!(a=t.getElementById(l)))return r;if(a.id===l)return r.push(a),r}else if(p&&(a=p.getElementById(l))&&et(t,a)&&a.id===l)return r.push(a),r}else{if(d[2])return k.apply(r,t.getElementsByTagName(n)),r;if((l=d[3])&&f.getElementsByClassName&&t.getElementsByClassName)return k.apply(r,t.getElementsByClassName(l)),r}if(f.qsa&&!lt[n+" "]&&(!o||!o.test(n))){if(1!==v)p=t,g=n;else if("object"!==t.nodeName.toLowerCase()){for((s=t.getAttribute("id"))?s=s.replace(hr,"\\$&"):t.setAttribute("id",s=e),y=ft(n),w=y.length,nt=yi.test(s)?"#"+s:"[id='"+s+"']";w--;)y[w]=nt+" "+yt(y[w]);g=y.join(",");p=gt.test(n)&&ii(t.parentNode)||t}if(g)try{return k.apply(r,p.querySelectorAll(g)),r}catch(tt){}finally{s===e&&t.removeAttribute("id")}}}return si(n.replace(at,"$1"),t,r,u)}function ni(){function n(r,u){return i.push(r+" ")>t.cacheLength&&delete n[i.shift()],n[r+" "]=u}var i=[];return n}function l(n){return n[e]=!0,n}function a(n){var t=i.createElement("div");try{return!!n(t)}catch(r){return!1}finally{t.parentNode&&t.parentNode.removeChild(t);t=null}}function ti(n,i){for(var r=n.split("|"),u=r.length;u--;)t.attrHandle[r[u]]=i}function wi(n,t){var i=t&&n,r=i&&1===n.nodeType&&1===t.nodeType&&(~t.sourceIndex||li)-(~n.sourceIndex||li);if(r)return r;if(i)while(i=i.nextSibling)if(i===t)return-1;return n?1:-1}function cr(n){return function(t){var i=t.nodeName.toLowerCase();return"input"===i&&t.type===n}}function lr(n){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===n}}function it(n){return l(function(t){return t=+t,l(function(i,r){for(var u,f=n([],i.length,t),e=f.length;e--;)i[u=f[e]]&&(i[u]=!(r[u]=i[u]))})})}function ii(n){return n&&"undefined"!=typeof n.getElementsByTagName&&n}function bi(){}function yt(n){for(var t=0,r=n.length,i="";r>t;t++)i+=n[t].value;return i}function ri(n,t,i){var r=t.dir,u=i&&"parentNode"===r,f=ki++;return t.first?function(t,i,f){while(t=t[r])if(1===t.nodeType||u)return n(t,i,f)}:function(t,i,o){var s,h,c,l=[v,f];if(o){while(t=t[r])if((1===t.nodeType||u)&&n(t,i,o))return!0}else while(t=t[r])if(1===t.nodeType||u){if(c=t[e]||(t[e]={}),h=c[t.uniqueID]||(c[t.uniqueID]={}),(s=h[r])&&s[0]===v&&s[1]===f)return l[2]=s[2];if(h[r]=l,l[2]=n(t,i,o))return!0}}}function ui(n){return n.length>1?function(t,i,r){for(var u=n.length;u--;)if(!n[u](t,i,r))return!1;return!0}:n[0]}function ar(n,t,i){for(var r=0,f=t.length;f>r;r++)u(n,t[r],i);return i}function pt(n,t,i,r,u){for(var e,o=[],f=0,s=n.length,h=null!=t;s>f;f++)(e=n[f])&&(!i||i(e,r,u))&&(o.push(e),h&&t.push(f));return o}function fi(n,t,i,r,u,f){return r&&!r[e]&&(r=fi(r)),u&&!u[e]&&(u=fi(u,f)),l(function(f,e,o,s){var l,c,a,p=[],y=[],w=e.length,b=f||ar(t||"*",o.nodeType?[o]:o,[]),v=!n||!f&&t?b:pt(b,p,n,o,s),h=i?u||(f?n:w||r)?[]:e:v;if(i&&i(v,h,o,s),r)for(l=pt(h,y),r(l,[],o,s),c=l.length;c--;)(a=l[c])&&(h[y[c]]=!(v[y[c]]=a));if(f){if(u||n){if(u){for(l=[],c=h.length;c--;)(a=h[c])&&l.push(v[c]=a);u(null,h=[],l,s)}for(c=h.length;c--;)(a=h[c])&&(l=u?nt(f,a):p[c])>-1&&(f[l]=!(e[l]=a))}}else h=pt(h===e?h.splice(w,h.length):h),u?u(null,e,h,s):k.apply(e,h)})}function ei(n){for(var o,u,r,s=n.length,h=t.relative[n[0].type],c=h||t.relative[" "],i=h?1:0,l=ri(function(n){return n===o},c,!0),a=ri(function(n){return nt(o,n)>-1},c,!0),f=[function(n,t,i){var r=!h&&(i||t!==ht)||((o=t).nodeType?l(n,t,i):a(n,t,i));return o=null,r}];s>i;i++)if(u=t.relative[n[i].type])f=[ri(ui(f),u)];else{if(u=t.filter[n[i].type].apply(null,n[i].matches),u[e]){for(r=++i;s>r;r++)if(t.relative[n[r].type])break;return fi(i>1&&ui(f),i>1&&yt(n.slice(0,i-1).concat({value:" "===n[i-2].type?"*":""})).replace(at,"$1"),u,r>i&&ei(n.slice(i,r)),s>r&&ei(n=n.slice(r)),s>r&&yt(n))}f.push(u)}return ui(f)}function vr(n,r){var f=r.length>0,e=n.length>0,o=function(o,s,c,l,a){var y,nt,d,g=0,p="0",tt=o&&[],w=[],it=ht,rt=o||e&&t.find.TAG("*",a),ut=v+=null==it?1:Math.random()||.1,ft=rt.length;for(a&&(ht=s===i||s||a);p!==ft&&null!=(y=rt[p]);p++){if(e&&y){for(nt=0,s||y.ownerDocument===i||(b(y),c=!h);d=n[nt++];)if(d(y,s||i,c)){l.push(y);break}a&&(v=ut)}f&&((y=!d&&y)&&g--,o&&tt.push(y))}if(g+=p,f&&p!==g){for(nt=0;d=r[nt++];)d(tt,w,s,c);if(o){if(g>0)while(p--)tt[p]||w[p]||(w[p]=gi.call(l));w=pt(w)}k.apply(l,w);a&&!o&&w.length>0&&g+r.length>1&&u.uniqueSort(l)}return a&&(v=ut,ht=it),tt};return f?l(o):o}var rt,f,t,st,oi,ft,wt,si,ht,w,ut,b,i,s,h,o,d,ct,et,e="sizzle"+1*new Date,c=n.document,v=0,ki=0,hi=ni(),ci=ni(),lt=ni(),bt=function(n,t){return n===t&&(ut=!0),0},li=-2147483648,di={}.hasOwnProperty,g=[],gi=g.pop,nr=g.push,k=g.push,ai=g.slice,nt=function(n,t){for(var i=0,r=n.length;r>i;i++)if(n[i]===t)return i;return-1},kt="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",r="[\\x20\\t\\r\\n\\f]",tt="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",vi="\\["+r+"*("+tt+")(?:"+r+"*([*^$|!~]?=)"+r+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+tt+"))|)"+r+"*\\]",dt=":("+tt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+vi+")*)|.*)\\)|)",tr=new RegExp(r+"+","g"),at=new RegExp("^"+r+"+|((?:^|[^\\\\])(?:\\\\.)*)"+r+"+$","g"),ir=new RegExp("^"+r+"*,"+r+"*"),rr=new RegExp("^"+r+"*([>+~]|"+r+")"+r+"*"),ur=new RegExp("="+r+"*([^\\]'\"]*?)"+r+"*\\]","g"),fr=new RegExp(dt),yi=new RegExp("^"+tt+"$"),vt={ID:new RegExp("^#("+tt+")"),CLASS:new RegExp("^\\.("+tt+")"),TAG:new RegExp("^("+tt+"|[*])"),ATTR:new RegExp("^"+vi),PSEUDO:new RegExp("^"+dt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+r+"*(even|odd|(([+-]|)(\\d*)n|)"+r+"*(?:([+-]|)"+r+"*(\\d+)|))"+r+"*\\)|)","i"),bool:new RegExp("^(?:"+kt+")$","i"),needsContext:new RegExp("^"+r+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+r+"*((?:-\\d)?\\d*)"+r+"*\\)|)(?=[^-]|$)","i")},er=/^(?:input|select|textarea|button)$/i,or=/^h\d$/i,ot=/^[^{]+\{\s*\[native \w/,sr=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,gt=/[+~]/,hr=/'|\\/g,y=new RegExp("\\\\([\\da-f]{1,6}"+r+"?|("+r+")|.)","ig"),p=function(n,t,i){var r="0x"+t-65536;return r!==r||i?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},pi=function(){b()};try{k.apply(g=ai.call(c.childNodes),c.childNodes);g[c.childNodes.length].nodeType}catch(yr){k={apply:g.length?function(n,t){nr.apply(n,ai.call(t))}:function(n,t){for(var i=n.length,r=0;n[i++]=t[r++];);n.length=i-1}}}f=u.support={};oi=u.isXML=function(n){var t=n&&(n.ownerDocument||n).documentElement;return t?"HTML"!==t.nodeName:!1};b=u.setDocument=function(n){var v,u,l=n?n.ownerDocument||n:c;return l!==i&&9===l.nodeType&&l.documentElement?(i=l,s=i.documentElement,h=!oi(i),(u=i.defaultView)&&u.top!==u&&(u.addEventListener?u.addEventListener("unload",pi,!1):u.attachEvent&&u.attachEvent("onunload",pi)),f.attributes=a(function(n){return n.className="i",!n.getAttribute("className")}),f.getElementsByTagName=a(function(n){return n.appendChild(i.createComment("")),!n.getElementsByTagName("*").length}),f.getElementsByClassName=ot.test(i.getElementsByClassName),f.getById=a(function(n){return s.appendChild(n).id=e,!i.getElementsByName||!i.getElementsByName(e).length}),f.getById?(t.find.ID=function(n,t){if("undefined"!=typeof t.getElementById&&h){var i=t.getElementById(n);return i?[i]:[]}},t.filter.ID=function(n){var t=n.replace(y,p);return function(n){return n.getAttribute("id")===t}}):(delete t.find.ID,t.filter.ID=function(n){var t=n.replace(y,p);return function(n){var i="undefined"!=typeof n.getAttributeNode&&n.getAttributeNode("id");return i&&i.value===t}}),t.find.TAG=f.getElementsByTagName?function(n,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(n):f.qsa?t.querySelectorAll(n):void 0}:function(n,t){var i,r=[],f=0,u=t.getElementsByTagName(n);if("*"===n){while(i=u[f++])1===i.nodeType&&r.push(i);return r}return u},t.find.CLASS=f.getElementsByClassName&&function(n,t){if("undefined"!=typeof t.getElementsByClassName&&h)return t.getElementsByClassName(n)},d=[],o=[],(f.qsa=ot.test(i.querySelectorAll))&&(a(function(n){s.appendChild(n).innerHTML="<a id='"+e+"'><\/a><select id='"+e+"-\r\\' msallowcapture=''><option selected=''><\/option><\/select>";n.querySelectorAll("[msallowcapture^='']").length&&o.push("[*^$]="+r+"*(?:''|\"\")");n.querySelectorAll("[selected]").length||o.push("\\["+r+"*(?:value|"+kt+")");n.querySelectorAll("[id~="+e+"-]").length||o.push("~=");n.querySelectorAll(":checked").length||o.push(":checked");n.querySelectorAll("a#"+e+"+*").length||o.push(".#.+[+~]")}),a(function(n){var t=i.createElement("input");t.setAttribute("type","hidden");n.appendChild(t).setAttribute("name","D");n.querySelectorAll("[name=d]").length&&o.push("name"+r+"*[*^$|!~]?=");n.querySelectorAll(":enabled").length||o.push(":enabled",":disabled");n.querySelectorAll("*,:x");o.push(",.*:")})),(f.matchesSelector=ot.test(ct=s.matches||s.webkitMatchesSelector||s.mozMatchesSelector||s.oMatchesSelector||s.msMatchesSelector))&&a(function(n){f.disconnectedMatch=ct.call(n,"div");ct.call(n,"[s!='']:x");d.push("!=",dt)}),o=o.length&&new RegExp(o.join("|")),d=d.length&&new RegExp(d.join("|")),v=ot.test(s.compareDocumentPosition),et=v||ot.test(s.contains)?function(n,t){var r=9===n.nodeType?n.documentElement:n,i=t&&t.parentNode;return n===i||!(!i||1!==i.nodeType||!(r.contains?r.contains(i):n.compareDocumentPosition&&16&n.compareDocumentPosition(i)))}:function(n,t){if(t)while(t=t.parentNode)if(t===n)return!0;return!1},bt=v?function(n,t){if(n===t)return ut=!0,0;var r=!n.compareDocumentPosition-!t.compareDocumentPosition;return r?r:(r=(n.ownerDocument||n)===(t.ownerDocument||t)?n.compareDocumentPosition(t):1,1&r||!f.sortDetached&&t.compareDocumentPosition(n)===r?n===i||n.ownerDocument===c&&et(c,n)?-1:t===i||t.ownerDocument===c&&et(c,t)?1:w?nt(w,n)-nt(w,t):0:4&r?-1:1)}:function(n,t){if(n===t)return ut=!0,0;var r,u=0,o=n.parentNode,s=t.parentNode,f=[n],e=[t];if(!o||!s)return n===i?-1:t===i?1:o?-1:s?1:w?nt(w,n)-nt(w,t):0;if(o===s)return wi(n,t);for(r=n;r=r.parentNode;)f.unshift(r);for(r=t;r=r.parentNode;)e.unshift(r);while(f[u]===e[u])u++;return u?wi(f[u],e[u]):f[u]===c?-1:e[u]===c?1:0},i):i};u.matches=function(n,t){return u(n,null,null,t)};u.matchesSelector=function(n,t){if((n.ownerDocument||n)!==i&&b(n),t=t.replace(ur,"='$1']"),f.matchesSelector&&h&&!lt[t+" "]&&(!d||!d.test(t))&&(!o||!o.test(t)))try{var r=ct.call(n,t);if(r||f.disconnectedMatch||n.document&&11!==n.document.nodeType)return r}catch(e){}return u(t,i,null,[n]).length>0};u.contains=function(n,t){return(n.ownerDocument||n)!==i&&b(n),et(n,t)};u.attr=function(n,r){(n.ownerDocument||n)!==i&&b(n);var e=t.attrHandle[r.toLowerCase()],u=e&&di.call(t.attrHandle,r.toLowerCase())?e(n,r,!h):void 0;return void 0!==u?u:f.attributes||!h?n.getAttribute(r):(u=n.getAttributeNode(r))&&u.specified?u.value:null};u.error=function(n){throw new Error("Syntax error, unrecognized expression: "+n);};u.uniqueSort=function(n){var r,u=[],t=0,i=0;if(ut=!f.detectDuplicates,w=!f.sortStable&&n.slice(0),n.sort(bt),ut){while(r=n[i++])r===n[i]&&(t=u.push(i));while(t--)n.splice(u[t],1)}return w=null,n};st=u.getText=function(n){var r,i="",u=0,t=n.nodeType;if(t){if(1===t||9===t||11===t){if("string"==typeof n.textContent)return n.textContent;for(n=n.firstChild;n;n=n.nextSibling)i+=st(n)}else if(3===t||4===t)return n.nodeValue}else while(r=n[u++])i+=st(r);return i};t=u.selectors={cacheLength:50,createPseudo:l,match:vt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(n){return n[1]=n[1].replace(y,p),n[3]=(n[3]||n[4]||n[5]||"").replace(y,p),"~="===n[2]&&(n[3]=" "+n[3]+" "),n.slice(0,4)},CHILD:function(n){return n[1]=n[1].toLowerCase(),"nth"===n[1].slice(0,3)?(n[3]||u.error(n[0]),n[4]=+(n[4]?n[5]+(n[6]||1):2*("even"===n[3]||"odd"===n[3])),n[5]=+(n[7]+n[8]||"odd"===n[3])):n[3]&&u.error(n[0]),n},PSEUDO:function(n){var i,t=!n[6]&&n[2];return vt.CHILD.test(n[0])?null:(n[3]?n[2]=n[4]||n[5]||"":t&&fr.test(t)&&(i=ft(t,!0))&&(i=t.indexOf(")",t.length-i)-t.length)&&(n[0]=n[0].slice(0,i),n[2]=t.slice(0,i)),n.slice(0,3))}},filter:{TAG:function(n){var t=n.replace(y,p).toLowerCase();return"*"===n?function(){return!0}:function(n){return n.nodeName&&n.nodeName.toLowerCase()===t}},CLASS:function(n){var t=hi[n+" "];return t||(t=new RegExp("(^|"+r+")"+n+"("+r+"|$)"))&&hi(n,function(n){return t.test("string"==typeof n.className&&n.className||"undefined"!=typeof n.getAttribute&&n.getAttribute("class")||"")})},ATTR:function(n,t,i){return function(r){var f=u.attr(r,n);return null==f?"!="===t:t?(f+="","="===t?f===i:"!="===t?f!==i:"^="===t?i&&0===f.indexOf(i):"*="===t?i&&f.indexOf(i)>-1:"$="===t?i&&f.slice(-i.length)===i:"~="===t?(" "+f.replace(tr," ")+" ").indexOf(i)>-1:"|="===t?f===i||f.slice(0,i.length+1)===i+"-":!1):!0}},CHILD:function(n,t,i,r,u){var s="nth"!==n.slice(0,3),o="last"!==n.slice(-4),f="of-type"===t;return 1===r&&0===u?function(n){return!!n.parentNode}:function(t,i,h){var p,w,y,c,a,b,k=s!==o?"nextSibling":"previousSibling",d=t.parentNode,nt=f&&t.nodeName.toLowerCase(),g=!h&&!f,l=!1;if(d){if(s){while(k){for(c=t;c=c[k];)if(f?c.nodeName.toLowerCase()===nt:1===c.nodeType)return!1;b=k="only"===n&&!b&&"nextSibling"}return!0}if(b=[o?d.firstChild:d.lastChild],o&&g){for(c=d,y=c[e]||(c[e]={}),w=y[c.uniqueID]||(y[c.uniqueID]={}),p=w[n]||[],a=p[0]===v&&p[1],l=a&&p[2],c=a&&d.childNodes[a];c=++a&&c&&c[k]||(l=a=0)||b.pop();)if(1===c.nodeType&&++l&&c===t){w[n]=[v,a,l];break}}else if(g&&(c=t,y=c[e]||(c[e]={}),w=y[c.uniqueID]||(y[c.uniqueID]={}),p=w[n]||[],a=p[0]===v&&p[1],l=a),l===!1)while(c=++a&&c&&c[k]||(l=a=0)||b.pop())if((f?c.nodeName.toLowerCase()===nt:1===c.nodeType)&&++l&&(g&&(y=c[e]||(c[e]={}),w=y[c.uniqueID]||(y[c.uniqueID]={}),w[n]=[v,l]),c===t))break;return l-=u,l===r||l%r==0&&l/r>=0}}},PSEUDO:function(n,i){var f,r=t.pseudos[n]||t.setFilters[n.toLowerCase()]||u.error("unsupported pseudo: "+n);return r[e]?r(i):r.length>1?(f=[n,n,"",i],t.setFilters.hasOwnProperty(n.toLowerCase())?l(function(n,t){for(var u,f=r(n,i),e=f.length;e--;)u=nt(n,f[e]),n[u]=!(t[u]=f[e])}):function(n){return r(n,0,f)}):r}},pseudos:{not:l(function(n){var t=[],r=[],i=wt(n.replace(at,"$1"));return i[e]?l(function(n,t,r,u){for(var e,o=i(n,null,u,[]),f=n.length;f--;)(e=o[f])&&(n[f]=!(t[f]=e))}):function(n,u,f){return t[0]=n,i(t,null,f,r),t[0]=null,!r.pop()}}),has:l(function(n){return function(t){return u(n,t).length>0}}),contains:l(function(n){return n=n.replace(y,p),function(t){return(t.textContent||t.innerText||st(t)).indexOf(n)>-1}}),lang:l(function(n){return yi.test(n||"")||u.error("unsupported lang: "+n),n=n.replace(y,p).toLowerCase(),function(t){var i;do if(i=h?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return i=i.toLowerCase(),i===n||0===i.indexOf(n+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var i=n.location&&n.location.hash;return i&&i.slice(1)===t.id},root:function(n){return n===s},focus:function(n){return n===i.activeElement&&(!i.hasFocus||i.hasFocus())&&!!(n.type||n.href||~n.tabIndex)},enabled:function(n){return n.disabled===!1},disabled:function(n){return n.disabled===!0},checked:function(n){var t=n.nodeName.toLowerCase();return"input"===t&&!!n.checked||"option"===t&&!!n.selected},selected:function(n){return n.parentNode&&n.parentNode.selectedIndex,n.selected===!0},empty:function(n){for(n=n.firstChild;n;n=n.nextSibling)if(n.nodeType<6)return!1;return!0},parent:function(n){return!t.pseudos.empty(n)},header:function(n){return or.test(n.nodeName)},input:function(n){return er.test(n.nodeName)},button:function(n){var t=n.nodeName.toLowerCase();return"input"===t&&"button"===n.type||"button"===t},text:function(n){var t;return"input"===n.nodeName.toLowerCase()&&"text"===n.type&&(null==(t=n.getAttribute("type"))||"text"===t.toLowerCase())},first:it(function(){return[0]}),last:it(function(n,t){return[t-1]}),eq:it(function(n,t,i){return[0>i?i+t:i]}),even:it(function(n,t){for(var i=0;t>i;i+=2)n.push(i);return n}),odd:it(function(n,t){for(var i=1;t>i;i+=2)n.push(i);return n}),lt:it(function(n,t,i){for(var r=0>i?i+t:i;--r>=0;)n.push(r);return n}),gt:it(function(n,t,i){for(var r=0>i?i+t:i;++r<t;)n.push(r);return n})}};t.pseudos.nth=t.pseudos.eq;for(rt in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})t.pseudos[rt]=cr(rt);for(rt in{submit:!0,reset:!0})t.pseudos[rt]=lr(rt);return bi.prototype=t.filters=t.pseudos,t.setFilters=new bi,ft=u.tokenize=function(n,i){var e,f,s,o,r,h,c,l=ci[n+" "];if(l)return i?0:l.slice(0);for(r=n,h=[],c=t.preFilter;r;){(!e||(f=ir.exec(r)))&&(f&&(r=r.slice(f[0].length)||r),h.push(s=[]));e=!1;(f=rr.exec(r))&&(e=f.shift(),s.push({value:e,type:f[0].replace(at," ")}),r=r.slice(e.length));for(o in t.filter)(f=vt[o].exec(r))&&(!c[o]||(f=c[o](f)))&&(e=f.shift(),s.push({value:e,type:o,matches:f}),r=r.slice(e.length));if(!e)break}return i?r.length:r?u.error(n):ci(n,h).slice(0)},wt=u.compile=function(n,t){var r,u=[],f=[],i=lt[n+" "];if(!i){for(t||(t=ft(n)),r=t.length;r--;)i=ei(t[r]),i[e]?u.push(i):f.push(i);i=lt(n,vr(f,u));i.selector=n}return i},si=u.select=function(n,i,r,u){var s,e,o,a,v,l="function"==typeof n&&n,c=!u&&ft(n=l.selector||n);if(r=r||[],1===c.length){if(e=c[0]=c[0].slice(0),e.length>2&&"ID"===(o=e[0]).type&&f.getById&&9===i.nodeType&&h&&t.relative[e[1].type]){if(i=(t.find.ID(o.matches[0].replace(y,p),i)||[])[0],!i)return r;l&&(i=i.parentNode);n=n.slice(e.shift().value.length)}for(s=vt.needsContext.test(n)?0:e.length;s--;){if(o=e[s],t.relative[a=o.type])break;if((v=t.find[a])&&(u=v(o.matches[0].replace(y,p),gt.test(e[0].type)&&ii(i.parentNode)||i))){if(e.splice(s,1),n=u.length&&yt(e),!n)return k.apply(r,u),r;break}}}return(l||wt(n,c))(u,i,!h,r,!i||gt.test(n)&&ii(i.parentNode)||i),r},f.sortStable=e.split("").sort(bt).join("")===e,f.detectDuplicates=!!ut,b(),f.sortDetached=a(function(n){return 1&n.compareDocumentPosition(i.createElement("div"))}),a(function(n){return n.innerHTML="<a href='#'><\/a>","#"===n.firstChild.getAttribute("href")})||ti("type|href|height|width",function(n,t,i){if(!i)return n.getAttribute(t,"type"===t.toLowerCase()?1:2)}),f.attributes&&a(function(n){return n.innerHTML="<input/>",n.firstChild.setAttribute("value",""),""===n.firstChild.getAttribute("value")})||ti("value",function(n,t,i){if(!i&&"input"===n.nodeName.toLowerCase())return n.defaultValue}),a(function(n){return null==n.getAttribute("disabled")})||ti(kt,function(n,t,i){var r;if(!i)return n[t]===!0?t.toLowerCase():(r=n.getAttributeNode(t))&&r.specified?r.value:null}),u}(n);i.find=p;i.expr=p.selectors;i.expr[":"]=i.expr.pseudos;i.uniqueSort=i.unique=p.uniqueSort;i.text=p.getText;i.isXMLDoc=p.isXML;i.contains=p.contains;var d=function(n,t,r){for(var u=[],f=void 0!==r;(n=n[t])&&9!==n.nodeType;)if(1===n.nodeType){if(f&&i(n).is(r))break;u.push(n)}return u},tr=function(n,t){for(var i=[];n;n=n.nextSibling)1===n.nodeType&&n!==t&&i.push(n);return i},ir=i.expr.match.needsContext,rr=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,wf=/^.[^:#\[\.,]*$/;i.filter=function(n,t,r){var u=t[0];return r&&(n=":not("+n+")"),1===t.length&&1===u.nodeType?i.find.matchesSelector(u,n)?[u]:[]:i.find.matches(n,i.grep(t,function(n){return 1===n.nodeType}))};i.fn.extend({find:function(n){var t,u=this.length,r=[],f=this;if("string"!=typeof n)return this.pushStack(i(n).filter(function(){for(t=0;u>t;t++)if(i.contains(f[t],this))return!0}));for(t=0;u>t;t++)i.find(n,f[t],r);return r=this.pushStack(u>1?i.unique(r):r),r.selector=this.selector?this.selector+" "+n:n,r},filter:function(n){return this.pushStack(ri(this,n||[],!1))},not:function(n){return this.pushStack(ri(this,n||[],!0))},is:function(n){return!!ri(this,"string"==typeof n&&ir.test(n)?i(n):n||[],!1).length}});fr=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/;er=i.fn.init=function(n,t,r){var f,e;if(!n)return this;if(r=r||ur,"string"==typeof n){if(f="<"===n[0]&&">"===n[n.length-1]&&n.length>=3?[null,n,null]:fr.exec(n),!f||!f[1]&&t)return!t||t.jquery?(t||r).find(n):this.constructor(t).find(n);if(f[1]){if(t=t instanceof i?t[0]:t,i.merge(this,i.parseHTML(f[1],t&&t.nodeType?t.ownerDocument||t:u,!0)),rr.test(f[1])&&i.isPlainObject(t))for(f in t)i.isFunction(this[f])?this[f](t[f]):this.attr(f,t[f]);return this}return e=u.getElementById(f[2]),e&&e.parentNode&&(this.length=1,this[0]=e),this.context=u,this.selector=n,this}return n.nodeType?(this.context=this[0]=n,this.length=1,this):i.isFunction(n)?void 0!==r.ready?r.ready(n):n(i):(void 0!==n.selector&&(this.selector=n.selector,this.context=n.context),i.makeArray(n,this))};er.prototype=i.fn;ur=i(u);or=/^(?:parents|prev(?:Until|All))/;sr={children:!0,contents:!0,next:!0,prev:!0};i.fn.extend({has:function(n){var t=i(n,this),r=t.length;return this.filter(function(){for(var n=0;r>n;n++)if(i.contains(this,t[n]))return!0})},closest:function(n,t){for(var r,f=0,o=this.length,u=[],e=ir.test(n)||"string"!=typeof n?i(n,t||this.context):0;o>f;f++)for(r=this[f];r&&r!==t;r=r.parentNode)if(r.nodeType<11&&(e?e.index(r)>-1:1===r.nodeType&&i.find.matchesSelector(r,n))){u.push(r);break}return this.pushStack(u.length>1?i.uniqueSort(u):u)},index:function(n){return n?"string"==typeof n?ct.call(i(n),this[0]):ct.call(this,n.jquery?n[0]:n):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(n,t){return this.pushStack(i.uniqueSort(i.merge(this.get(),i(n,t))))},addBack:function(n){return this.add(null==n?this.prevObject:this.prevObject.filter(n))}});i.each({parent:function(n){var t=n.parentNode;return t&&11!==t.nodeType?t:null},parents:function(n){return d(n,"parentNode")},parentsUntil:function(n,t,i){return d(n,"parentNode",i)},next:function(n){return hr(n,"nextSibling")},prev:function(n){return hr(n,"previousSibling")},nextAll:function(n){return d(n,"nextSibling")},prevAll:function(n){return d(n,"previousSibling")},nextUntil:function(n,t,i){return d(n,"nextSibling",i)},prevUntil:function(n,t,i){return d(n,"previousSibling",i)},siblings:function(n){return tr((n.parentNode||{}).firstChild,n)},children:function(n){return tr(n.firstChild)},contents:function(n){return n.contentDocument||i.merge([],n.childNodes)}},function(n,t){i.fn[n]=function(r,u){var f=i.map(this,t,r);return"Until"!==n.slice(-5)&&(u=r),u&&"string"==typeof u&&(f=i.filter(u,f)),this.length>1&&(sr[n]||i.uniqueSort(f),or.test(n)&&f.reverse()),this.pushStack(f)}});h=/\S+/g;i.Callbacks=function(n){n="string"==typeof n?bf(n):i.extend({},n);var o,r,h,f,t=[],e=[],u=-1,c=function(){for(f=n.once,h=o=!0;e.length;u=-1)for(r=e.shift();++u<t.length;)t[u].apply(r[0],r[1])===!1&&n.stopOnFalse&&(u=t.length,r=!1);n.memory||(r=!1);o=!1;f&&(t=r?[]:"")},s={add:function(){return t&&(r&&!o&&(u=t.length-1,e.push(r)),function f(r){i.each(r,function(r,u){i.isFunction(u)?n.unique&&s.has(u)||t.push(u):u&&u.length&&"string"!==i.type(u)&&f(u)})}(arguments),r&&!o&&c()),this},remove:function(){return i.each(arguments,function(n,r){for(var f;(f=i.inArray(r,t,f))>-1;)t.splice(f,1),u>=f&&u--}),this},has:function(n){return n?i.inArray(n,t)>-1:t.length>0},empty:function(){return t&&(t=[]),this},disable:function(){return f=e=[],t=r="",this},disabled:function(){return!t},lock:function(){return f=e=[],r||(t=r=""),this},locked:function(){return!!f},fireWith:function(n,t){return f||(t=t||[],t=[n,t.slice?t.slice():t],e.push(t),o||c()),this},fire:function(){return s.fireWith(this,arguments),this},fired:function(){return!!h}};return s};i.extend({Deferred:function(n){var u=[["resolve","done",i.Callbacks("once memory"),"resolved"],["reject","fail",i.Callbacks("once memory"),"rejected"],["notify","progress",i.Callbacks("memory")]],f="pending",r={state:function(){return f},always:function(){return t.done(arguments).fail(arguments),this},then:function(){var n=arguments;return i.Deferred(function(f){i.each(u,function(u,e){var o=i.isFunction(n[u])&&n[u];t[e[1]](function(){var n=o&&o.apply(this,arguments);n&&i.isFunction(n.promise)?n.promise().progress(f.notify).done(f.resolve).fail(f.reject):f[e[0]+"With"](this===r?f.promise():this,o?[n]:arguments)})});n=null}).promise()},promise:function(n){return null!=n?i.extend(n,r):r}},t={};return r.pipe=r.then,i.each(u,function(n,i){var e=i[2],o=i[3];r[i[1]]=e.add;o&&e.add(function(){f=o},u[1^n][2].disable,u[2][2].lock);t[i[0]]=function(){return t[i[0]+"With"](this===t?r:this,arguments),this};t[i[0]+"With"]=e.fireWith}),r.promise(t),n&&n.call(t,t),t},when:function(n){var t=0,u=v.call(arguments),r=u.length,e=1!==r||n&&i.isFunction(n.promise)?r:0,f=1===e?n:i.Deferred(),h=function(n,t,i){return function(r){t[n]=this;i[n]=arguments.length>1?v.call(arguments):r;i===o?f.notifyWith(t,i):--e||f.resolveWith(t,i)}},o,c,s;if(r>1)for(o=new Array(r),c=new Array(r),s=new Array(r);r>t;t++)u[t]&&i.isFunction(u[t].promise)?u[t].promise().progress(h(t,c,o)).done(h(t,s,u)).fail(f.reject):--e;return e||f.resolveWith(s,u),f.promise()}});i.fn.ready=function(n){return i.ready.promise().done(n),this};i.extend({isReady:!1,readyWait:1,holdReady:function(n){n?i.readyWait++:i.ready(!0)},ready:function(n){(n===!0?--i.readyWait:i.isReady)||(i.isReady=!0,n!==!0&&--i.readyWait>0||(at.resolveWith(u,[i]),i.fn.triggerHandler&&(i(u).triggerHandler("ready"),i(u).off("ready"))))}});i.ready.promise=function(t){return at||(at=i.Deferred(),"complete"===u.readyState||"loading"!==u.readyState&&!u.documentElement.doScroll?n.setTimeout(i.ready):(u.addEventListener("DOMContentLoaded",vt),n.addEventListener("load",vt))),at.promise(t)};i.ready.promise();a=function(n,t,r,u,f,e,o){var s=0,c=n.length,h=null==r;if("object"===i.type(r)){f=!0;for(s in r)a(n,t,s,r[s],!0,e,o)}else if(void 0!==u&&(f=!0,i.isFunction(u)||(o=!0),h&&(o?(t.call(n,u),t=null):(h=t,t=function(n,t,r){return h.call(i(n),r)})),t))for(;c>s;s++)t(n[s],r,o?u:u.call(n[s],s,t(n[s],r)));return f?n:h?t.call(n):c?t(n[0],r):e};g=function(n){return 1===n.nodeType||9===n.nodeType||!+n.nodeType};ft.uid=1;ft.prototype={register:function(n,t){var i=t||{};return n.nodeType?n[this.expando]=i:Object.defineProperty(n,this.expando,{value:i,writable:!0,configurable:!0}),n[this.expando]},cache:function(n){if(!g(n))return{};var t=n[this.expando];return t||(t={},g(n)&&(n.nodeType?n[this.expando]=t:Object.defineProperty(n,this.expando,{value:t,configurable:!0}))),t},set:function(n,t,i){var r,u=this.cache(n);if("string"==typeof t)u[t]=i;else for(r in t)u[r]=t[r];return u},get:function(n,t){return void 0===t?this.cache(n):n[this.expando]&&n[this.expando][t]},access:function(n,t,r){var u;return void 0===t||t&&"string"==typeof t&&void 0===r?(u=this.get(n,t),void 0!==u?u:this.get(n,i.camelCase(t))):(this.set(n,t,r),void 0!==r?r:t)},remove:function(n,t){var f,r,e,u=n[this.expando];if(void 0!==u){if(void 0===t)this.register(n);else for(i.isArray(t)?r=t.concat(t.map(i.camelCase)):(e=i.camelCase(t),(t in u)?r=[t,e]:(r=e,r=(r in u)?[r]:r.match(h)||[])),f=r.length;f--;)delete u[r[f]];(void 0===t||i.isEmptyObject(u))&&(n.nodeType?n[this.expando]=void 0:delete n[this.expando])}},hasData:function(n){var t=n[this.expando];return void 0!==t&&!i.isEmptyObject(t)}};var r=new ft,e=new ft,kf=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,cr=/[A-Z]/g;i.extend({hasData:function(n){return e.hasData(n)||r.hasData(n)},data:function(n,t,i){return e.access(n,t,i)},removeData:function(n,t){e.remove(n,t)},_data:function(n,t,i){return r.access(n,t,i)},_removeData:function(n,t){r.remove(n,t)}});i.fn.extend({data:function(n,t){var o,f,s,u=this[0],h=u&&u.attributes;if(void 0===n){if(this.length&&(s=e.get(u),1===u.nodeType&&!r.get(u,"hasDataAttrs"))){for(o=h.length;o--;)h[o]&&(f=h[o].name,0===f.indexOf("data-")&&(f=i.camelCase(f.slice(5)),lr(u,f,s[f])));r.set(u,"hasDataAttrs",!0)}return s}return"object"==typeof n?this.each(function(){e.set(this,n)}):a(this,function(t){var r,f;if(u&&void 0===t){if((r=e.get(u,n)||e.get(u,n.replace(cr,"-$&").toLowerCase()),void 0!==r)||(f=i.camelCase(n),r=e.get(u,f),void 0!==r)||(r=lr(u,f,void 0),void 0!==r))return r}else f=i.camelCase(n),this.each(function(){var i=e.get(this,f);e.set(this,f,t);n.indexOf("-")>-1&&void 0!==i&&e.set(this,n,t)})},null,t,arguments.length>1,null,!0)},removeData:function(n){return this.each(function(){e.remove(this,n)})}});i.extend({queue:function(n,t,u){var f;if(n)return(t=(t||"fx")+"queue",f=r.get(n,t),u&&(!f||i.isArray(u)?f=r.access(n,t,i.makeArray(u)):f.push(u)),f||[])},dequeue:function(n,t){t=t||"fx";var r=i.queue(n,t),e=r.length,u=r.shift(),f=i._queueHooks(n,t),o=function(){i.dequeue(n,t)};"inprogress"===u&&(u=r.shift(),e--);u&&("fx"===t&&r.unshift("inprogress"),delete f.stop,u.call(n,o,f));!e&&f&&f.empty.fire()},_queueHooks:function(n,t){var u=t+"queueHooks";return r.get(n,u)||r.access(n,u,{empty:i.Callbacks("once memory").add(function(){r.remove(n,[t+"queue",u])})})}});i.fn.extend({queue:function(n,t){var r=2;return"string"!=typeof n&&(t=n,n="fx",r--),arguments.length<r?i.queue(this[0],n):void 0===t?this:this.each(function(){var r=i.queue(this,n,t);i._queueHooks(this,n);"fx"===n&&"inprogress"!==r[0]&&i.dequeue(this,n)})},dequeue:function(n){return this.each(function(){i.dequeue(this,n)})},clearQueue:function(n){return this.queue(n||"fx",[])},promise:function(n,t){var u,e=1,o=i.Deferred(),f=this,s=this.length,h=function(){--e||o.resolveWith(f,[f])};for("string"!=typeof n&&(t=n,n=void 0),n=n||"fx";s--;)u=r.get(f[s],n+"queueHooks"),u&&u.empty&&(e++,u.empty.add(h));return h(),o.promise(t)}});var ar=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,et=new RegExp("^(?:([+-])=|)("+ar+")([a-z%]*)$","i"),w=["Top","Right","Bottom","Left"],ot=function(n,t){return n=t||n,"none"===i.css(n,"display")||!i.contains(n.ownerDocument,n)};var yr=/^(?:checkbox|radio)$/i,pr=/<([\w:-]+)/,wr=/^$|\/(?:java|ecma)script/i,c={option:[1,"<select multiple='multiple'>","<\/select>"],thead:[1,"<table>","<\/table>"],col:[2,"<table><colgroup>","<\/colgroup><\/table>"],tr:[2,"<table><tbody>","<\/tbody><\/table>"],td:[3,"<table><tbody><tr>","<\/tr><\/tbody><\/table>"],_default:[0,"",""]};c.optgroup=c.option;c.tbody=c.tfoot=c.colgroup=c.caption=c.thead;c.th=c.td;br=/<|&#?\w+;/;!function(){var i=u.createDocumentFragment(),n=i.appendChild(u.createElement("div")),t=u.createElement("input");t.setAttribute("type","radio");t.setAttribute("checked","checked");t.setAttribute("name","t");n.appendChild(t);f.checkClone=n.cloneNode(!0).cloneNode(!0).lastChild.checked;n.innerHTML="<textarea>x<\/textarea>";f.noCloneChecked=!!n.cloneNode(!0).lastChild.defaultValue}();var df=/^key/,gf=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,dr=/^([^.]*)(?:\.(.+)|)/;i.event={global:{},add:function(n,t,u,f,e){var v,y,w,p,b,c,s,l,o,k,d,a=r.get(n);if(a)for(u.handler&&(v=u,u=v.handler,e=v.selector),u.guid||(u.guid=i.guid++),(p=a.events)||(p=a.events={}),(y=a.handle)||(y=a.handle=function(t){if("undefined"!=typeof i&&i.event.triggered!==t.type)return i.event.dispatch.apply(n,arguments)}),t=(t||"").match(h)||[""],b=t.length;b--;)w=dr.exec(t[b])||[],o=d=w[1],k=(w[2]||"").split(".").sort(),o&&(s=i.event.special[o]||{},o=(e?s.delegateType:s.bindType)||o,s=i.event.special[o]||{},c=i.extend({type:o,origType:d,data:f,handler:u,guid:u.guid,selector:e,needsContext:e&&i.expr.match.needsContext.test(e),namespace:k.join(".")},v),(l=p[o])||(l=p[o]=[],l.delegateCount=0,s.setup&&s.setup.call(n,f,k,y)!==!1||n.addEventListener&&n.addEventListener(o,y)),s.add&&(s.add.call(n,c),c.handler.guid||(c.handler.guid=u.guid)),e?l.splice(l.delegateCount++,0,c):l.push(c),i.event.global[o]=!0)},remove:function(n,t,u,f,e){var y,k,c,v,p,s,l,a,o,b,d,w=r.hasData(n)&&r.get(n);if(w&&(v=w.events)){for(t=(t||"").match(h)||[""],p=t.length;p--;)if(c=dr.exec(t[p])||[],o=d=c[1],b=(c[2]||"").split(".").sort(),o){for(l=i.event.special[o]||{},o=(f?l.delegateType:l.bindType)||o,a=v[o]||[],c=c[2]&&new RegExp("(^|\\.)"+b.join("\\.(?:.*\\.|)")+"(\\.|$)"),k=y=a.length;y--;)s=a[y],!e&&d!==s.origType||u&&u.guid!==s.guid||c&&!c.test(s.namespace)||f&&f!==s.selector&&("**"!==f||!s.selector)||(a.splice(y,1),s.selector&&a.delegateCount--,l.remove&&l.remove.call(n,s));k&&!a.length&&(l.teardown&&l.teardown.call(n,b,w.handle)!==!1||i.removeEvent(n,o,w.handle),delete v[o])}else for(o in v)i.event.remove(n,o+t[p],u,f,!0);i.isEmptyObject(v)&&r.remove(n,"handle events")}},dispatch:function(n){n=i.event.fix(n);var o,s,e,u,t,h=[],c=v.call(arguments),l=(r.get(this,"events")||{})[n.type]||[],f=i.event.special[n.type]||{};if(c[0]=n,n.delegateTarget=this,!f.preDispatch||f.preDispatch.call(this,n)!==!1){for(h=i.event.handlers.call(this,n,l),o=0;(u=h[o++])&&!n.isPropagationStopped();)for(n.currentTarget=u.elem,s=0;(t=u.handlers[s++])&&!n.isImmediatePropagationStopped();)(!n.rnamespace||n.rnamespace.test(t.namespace))&&(n.handleObj=t,n.data=t.data,e=((i.event.special[t.origType]||{}).handle||t.handler).apply(u.elem,c),void 0!==e&&(n.result=e)===!1&&(n.preventDefault(),n.stopPropagation()));return f.postDispatch&&f.postDispatch.call(this,n),n.result}},handlers:function(n,t){var e,u,f,o,h=[],s=t.delegateCount,r=n.target;if(s&&r.nodeType&&("click"!==n.type||isNaN(n.button)||n.button<1))for(;r!==this;r=r.parentNode||this)if(1===r.nodeType&&(r.disabled!==!0||"click"!==n.type)){for(u=[],e=0;s>e;e++)o=t[e],f=o.selector+" ",void 0===u[f]&&(u[f]=o.needsContext?i(f,this).index(r)>-1:i.find(f,this,null,[r]).length),u[f]&&u.push(o);u.length&&h.push({elem:r,handlers:u})}return s<t.length&&h.push({elem:this,handlers:t.slice(s)}),h},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(n,t){return null==n.which&&(n.which=null!=t.charCode?t.charCode:t.keyCode),n}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(n,t){var e,i,r,f=t.button;return null==n.pageX&&null!=t.clientX&&(e=n.target.ownerDocument||u,i=e.documentElement,r=e.body,n.pageX=t.clientX+(i&&i.scrollLeft||r&&r.scrollLeft||0)-(i&&i.clientLeft||r&&r.clientLeft||0),n.pageY=t.clientY+(i&&i.scrollTop||r&&r.scrollTop||0)-(i&&i.clientTop||r&&r.clientTop||0)),n.which||void 0===f||(n.which=1&f?1:2&f?3:4&f?2:0),n}},fix:function(n){if(n[i.expando])return n;var f,e,o,r=n.type,s=n,t=this.fixHooks[r];for(t||(this.fixHooks[r]=t=gf.test(r)?this.mouseHooks:df.test(r)?this.keyHooks:{}),o=t.props?this.props.concat(t.props):this.props,n=new i.Event(s),f=o.length;f--;)e=o[f],n[e]=s[e];return n.target||(n.target=u),3===n.target.nodeType&&(n.target=n.target.parentNode),t.filter?t.filter(n,s):n},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==gr()&&this.focus)return(this.focus(),!1)},delegateType:"focusin"},blur:{trigger:function(){if(this===gr()&&this.blur)return(this.blur(),!1)},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&i.nodeName(this,"input"))return(this.click(),!1)},_default:function(n){return i.nodeName(n.target,"a")}},beforeunload:{postDispatch:function(n){void 0!==n.result&&n.originalEvent&&(n.originalEvent.returnValue=n.result)}}}};i.removeEvent=function(n,t,i){n.removeEventListener&&n.removeEventListener(t,i)};i.Event=function(n,t){return this instanceof i.Event?(n&&n.type?(this.originalEvent=n,this.type=n.type,this.isDefaultPrevented=n.defaultPrevented||void 0===n.defaultPrevented&&n.returnValue===!1?yt:nt):this.type=n,t&&i.extend(this,t),this.timeStamp=n&&n.timeStamp||i.now(),void(this[i.expando]=!0)):new i.Event(n,t)};i.Event.prototype={constructor:i.Event,isDefaultPrevented:nt,isPropagationStopped:nt,isImmediatePropagationStopped:nt,preventDefault:function(){var n=this.originalEvent;this.isDefaultPrevented=yt;n&&n.preventDefault()},stopPropagation:function(){var n=this.originalEvent;this.isPropagationStopped=yt;n&&n.stopPropagation()},stopImmediatePropagation:function(){var n=this.originalEvent;this.isImmediatePropagationStopped=yt;n&&n.stopImmediatePropagation();this.stopPropagation()}};i.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(n,t){i.event.special[n]={delegateType:t,bindType:t,handle:function(n){var u,f=this,r=n.relatedTarget,e=n.handleObj;return(!r||r!==f&&!i.contains(f,r))&&(n.type=e.origType,u=e.handler.apply(this,arguments),n.type=t),u}}});i.fn.extend({on:function(n,t,i,r){return fi(this,n,t,i,r)},one:function(n,t,i,r){return fi(this,n,t,i,r,1)},off:function(n,t,r){var u,f;if(n&&n.preventDefault&&n.handleObj)return u=n.handleObj,i(n.delegateTarget).off(u.namespace?u.origType+"."+u.namespace:u.origType,u.selector,u.handler),this;if("object"==typeof n){for(f in n)this.off(f,t,n[f]);return this}return(t===!1||"function"==typeof t)&&(r=t,t=void 0),r===!1&&(r=nt),this.each(function(){i.event.remove(this,n,r,t)})}});var ne=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,te=/<script|<style|<link/i,ie=/checked\s*(?:[^=]|=\s*.checked.)/i,re=/^true\/(.*)/,ue=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;i.extend({htmlPrefilter:function(n){return n.replace(ne,"<$1><\/$2>")},clone:function(n,t,r){var u,c,s,e,h=n.cloneNode(!0),l=i.contains(n.ownerDocument,n);if(!(f.noCloneChecked||1!==n.nodeType&&11!==n.nodeType||i.isXMLDoc(n)))for(e=o(h),s=o(n),u=0,c=s.length;c>u;u++)oe(s[u],e[u]);if(t)if(r)for(s=s||o(n),e=e||o(h),u=0,c=s.length;c>u;u++)tu(s[u],e[u]);else tu(n,h);return e=o(h,"script"),e.length>0&&ui(e,!l&&o(n,"script")),h},cleanData:function(n){for(var u,t,f,s=i.event.special,o=0;void 0!==(t=n[o]);o++)if(g(t)){if(u=t[r.expando]){if(u.events)for(f in u.events)s[f]?i.event.remove(t,f):i.removeEvent(t,f,u.handle);t[r.expando]=void 0}t[e.expando]&&(t[e.expando]=void 0)}}});i.fn.extend({domManip:b,detach:function(n){return iu(this,n,!0)},remove:function(n){return iu(this,n)},text:function(n){return a(this,function(n){return void 0===n?i.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=n)})},null,n,arguments.length)},append:function(){return b(this,arguments,function(n){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=nu(this,n);t.appendChild(n)}})},prepend:function(){return b(this,arguments,function(n){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=nu(this,n);t.insertBefore(n,t.firstChild)}})},before:function(){return b(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this)})},after:function(){return b(this,arguments,function(n){this.parentNode&&this.parentNode.insertBefore(n,this.nextSibling)})},empty:function(){for(var n,t=0;null!=(n=this[t]);t++)1===n.nodeType&&(i.cleanData(o(n,!1)),n.textContent="");return this},clone:function(n,t){return n=null==n?!1:n,t=null==t?n:t,this.map(function(){return i.clone(this,n,t)})},html:function(n){return a(this,function(n){var t=this[0]||{},r=0,u=this.length;if(void 0===n&&1===t.nodeType)return t.innerHTML;if("string"==typeof n&&!te.test(n)&&!c[(pr.exec(n)||["",""])[1].toLowerCase()]){n=i.htmlPrefilter(n);try{for(;u>r;r++)t=this[r]||{},1===t.nodeType&&(i.cleanData(o(t,!1)),t.innerHTML=n);t=0}catch(f){}}t&&this.empty().append(n)},null,n,arguments.length)},replaceWith:function(){var n=[];return b(this,arguments,function(t){var r=this.parentNode;i.inArray(this,n)<0&&(i.cleanData(o(this)),r&&r.replaceChild(t,this))},n)}});i.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(n,t){i.fn[n]=function(n){for(var u,f=[],e=i(n),o=e.length-1,r=0;o>=r;r++)u=r===o?this:this.clone(!0),i(e[r])[t](u),ni.apply(f,u.get());return this.pushStack(f)}});ei={HTML:"block",BODY:"block"};var uu=/^margin/,si=new RegExp("^("+ar+")(?!px)[a-z%]+$","i"),wt=function(t){var i=t.ownerDocument.defaultView;return i.opener||(i=n),i.getComputedStyle(t)},hi=function(n,t,i,r){var f,u,e={};for(u in t)e[u]=n.style[u],n.style[u]=t[u];f=i.apply(n,r||[]);for(u in t)n.style[u]=e[u];return f},st=u.documentElement;!function(){var s,e,h,c,r=u.createElement("div"),t=u.createElement("div");if(t.style){t.style.backgroundClip="content-box";t.cloneNode(!0).style.backgroundClip="";f.clearCloneStyle="content-box"===t.style.backgroundClip;r.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute";r.appendChild(t);function o(){t.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%";t.innerHTML="";st.appendChild(r);var i=n.getComputedStyle(t);s="1%"!==i.top;c="2px"===i.marginLeft;e="4px"===i.width;t.style.marginRight="50%";h="4px"===i.marginRight;st.removeChild(r)}i.extend(f,{pixelPosition:function(){return o(),s},boxSizingReliable:function(){return null==e&&o(),e},pixelMarginRight:function(){return null==e&&o(),h},reliableMarginLeft:function(){return null==e&&o(),c},reliableMarginRight:function(){var f,i=t.appendChild(u.createElement("div"));return i.style.cssText=t.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",t.style.width="1px",st.appendChild(r),f=!parseFloat(n.getComputedStyle(i).marginRight),st.removeChild(r),t.removeChild(i),f}})}}();var se=/^(none|table(?!-c[ea]).+)/,he={position:"absolute",visibility:"hidden",display:"block"},fu={letterSpacing:"0",fontWeight:"400"},eu=["Webkit","O","Moz","ms"],ou=u.createElement("div").style;i.extend({cssHooks:{opacity:{get:function(n,t){if(t){var i=tt(n,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(n,t,r,u){if(n&&3!==n.nodeType&&8!==n.nodeType&&n.style){var e,h,o,s=i.camelCase(t),c=n.style;return t=i.cssProps[s]||(i.cssProps[s]=su(s)||s),o=i.cssHooks[t]||i.cssHooks[s],void 0===r?o&&"get"in o&&void 0!==(e=o.get(n,!1,u))?e:c[t]:(h=typeof r,"string"===h&&(e=et.exec(r))&&e[1]&&(r=vr(n,t,e),h="number"),null!=r&&r===r&&("number"===h&&(r+=e&&e[3]||(i.cssNumber[s]?"":"px")),f.clearCloneStyle||""!==r||0!==t.indexOf("background")||(c[t]="inherit"),o&&"set"in o&&void 0===(r=o.set(n,r,u))||(c[t]=r)),void 0)}},css:function(n,t,r,u){var f,s,o,e=i.camelCase(t);return t=i.cssProps[e]||(i.cssProps[e]=su(e)||e),o=i.cssHooks[t]||i.cssHooks[e],o&&"get"in o&&(f=o.get(n,!0,r)),void 0===f&&(f=tt(n,t,u)),"normal"===f&&t in fu&&(f=fu[t]),""===r||r?(s=parseFloat(f),r===!0||isFinite(s)?s||0:f):f}});i.each(["height","width"],function(n,t){i.cssHooks[t]={get:function(n,r,u){if(r)return se.test(i.css(n,"display"))&&0===n.offsetWidth?hi(n,he,function(){return lu(n,t,u)}):lu(n,t,u)},set:function(n,r,u){var f,e=u&&wt(n),o=u&&cu(n,t,u,"border-box"===i.css(n,"boxSizing",!1,e),e);return o&&(f=et.exec(r))&&"px"!==(f[3]||"px")&&(n.style[t]=r,r=i.css(n,t)),hu(n,r,o)}}});i.cssHooks.marginLeft=ci(f.reliableMarginLeft,function(n,t){if(t)return(parseFloat(tt(n,"marginLeft"))||n.getBoundingClientRect().left-hi(n,{marginLeft:0},function(){return n.getBoundingClientRect().left}))+"px"});i.cssHooks.marginRight=ci(f.reliableMarginRight,function(n,t){if(t)return hi(n,{display:"inline-block"},tt,[n,"marginRight"])});i.each({margin:"",padding:"",border:"Width"},function(n,t){i.cssHooks[n+t]={expand:function(i){for(var r=0,f={},u="string"==typeof i?i.split(" "):[i];4>r;r++)f[n+w[r]+t]=u[r]||u[r-2]||u[0];return f}};uu.test(n)||(i.cssHooks[n+t].set=hu)});i.fn.extend({css:function(n,t){return a(this,function(n,t,r){var f,e,o={},u=0;if(i.isArray(t)){for(f=wt(n),e=t.length;e>u;u++)o[t[u]]=i.css(n,t[u],!1,f);return o}return void 0!==r?i.style(n,t,r):i.css(n,t)},n,t,arguments.length>1)},show:function(){return au(this,!0)},hide:function(){return au(this)},toggle:function(n){return"boolean"==typeof n?n?this.show():this.hide():this.each(function(){ot(this)?i(this).show():i(this).hide()})}});i.Tween=s;s.prototype={constructor:s,init:function(n,t,r,u,f,e){this.elem=n;this.prop=r;this.easing=f||i.easing._default;this.options=t;this.start=this.now=this.cur();this.end=u;this.unit=e||(i.cssNumber[r]?"":"px")},cur:function(){var n=s.propHooks[this.prop];return n&&n.get?n.get(this):s.propHooks._default.get(this)},run:function(n){var t,r=s.propHooks[this.prop];return this.pos=this.options.duration?t=i.easing[this.easing](n,this.options.duration*n,0,1,this.options.duration):t=n,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),r&&r.set?r.set(this):s.propHooks._default.set(this),this}};s.prototype.init.prototype=s.prototype;s.propHooks={_default:{get:function(n){var t;return 1!==n.elem.nodeType||null!=n.elem[n.prop]&&null==n.elem.style[n.prop]?n.elem[n.prop]:(t=i.css(n.elem,n.prop,""),t&&"auto"!==t?t:0)},set:function(n){i.fx.step[n.prop]?i.fx.step[n.prop](n):1!==n.elem.nodeType||null==n.elem.style[i.cssProps[n.prop]]&&!i.cssHooks[n.prop]?n.elem[n.prop]=n.now:i.style(n.elem,n.prop,n.now+n.unit)}}};s.propHooks.scrollTop=s.propHooks.scrollLeft={set:function(n){n.elem.nodeType&&n.elem.parentNode&&(n.elem[n.prop]=n.now)}};i.easing={linear:function(n){return n},swing:function(n){return.5-Math.cos(n*Math.PI)/2},_default:"swing"};i.fx=s.prototype.init;i.fx.step={};vu=/^(?:toggle|show|hide)$/;yu=/queueHooks$/;i.Animation=i.extend(l,{tweeners:{"*":[function(n,t){var i=this.createTween(n,t);return vr(i.elem,n,et.exec(t),i),i}]},tweener:function(n,t){i.isFunction(n)?(t=n,n=["*"]):n=n.match(h);for(var r,u=0,f=n.length;f>u;u++)r=n[u],l.tweeners[r]=l.tweeners[r]||[],l.tweeners[r].unshift(t)},prefilters:[ce],prefilter:function(n,t){t?l.prefilters.unshift(n):l.prefilters.push(n)}});i.speed=function(n,t,r){var u=n&&"object"==typeof n?i.extend({},n):{complete:r||!r&&t||i.isFunction(n)&&n,duration:n,easing:r&&t||t&&!i.isFunction(t)&&t};return u.duration=i.fx.off?0:"number"==typeof u.duration?u.duration:u.duration in i.fx.speeds?i.fx.speeds[u.duration]:i.fx.speeds._default,(null==u.queue||u.queue===!0)&&(u.queue="fx"),u.old=u.complete,u.complete=function(){i.isFunction(u.old)&&u.old.call(this);u.queue&&i.dequeue(this,u.queue)},u};i.fn.extend({fadeTo:function(n,t,i,r){return this.filter(ot).css("opacity",0).show().end().animate({opacity:t},n,i,r)},animate:function(n,t,u,f){var s=i.isEmptyObject(n),o=i.speed(t,u,f),e=function(){var t=l(this,i.extend({},n),o);(s||r.get(this,"finish"))&&t.stop(!0)};return e.finish=e,s||o.queue===!1?this.each(e):this.queue(o.queue,e)},stop:function(n,t,u){var f=function(n){var t=n.stop;delete n.stop;t(u)};return"string"!=typeof n&&(u=t,t=n,n=void 0),t&&n!==!1&&this.queue(n||"fx",[]),this.each(function(){var s=!0,t=null!=n&&n+"queueHooks",o=i.timers,e=r.get(this);if(t)e[t]&&e[t].stop&&f(e[t]);else for(t in e)e[t]&&e[t].stop&&yu.test(t)&&f(e[t]);for(t=o.length;t--;)o[t].elem!==this||null!=n&&o[t].queue!==n||(o[t].anim.stop(u),s=!1,o.splice(t,1));(s||!u)&&i.dequeue(this,n)})},finish:function(n){return n!==!1&&(n=n||"fx"),this.each(function(){var t,e=r.get(this),u=e[n+"queue"],o=e[n+"queueHooks"],f=i.timers,s=u?u.length:0;for(e.finish=!0,i.queue(this,n,[]),o&&o.stop&&o.stop.call(this,!0),t=f.length;t--;)f[t].elem===this&&f[t].queue===n&&(f[t].anim.stop(!0),f.splice(t,1));for(t=0;s>t;t++)u[t]&&u[t].finish&&u[t].finish.call(this);delete e.finish})}});i.each(["toggle","show","hide"],function(n,t){var r=i.fn[t];i.fn[t]=function(n,i,u){return null==n||"boolean"==typeof n?r.apply(this,arguments):this.animate(kt(t,!0),n,i,u)}});i.each({slideDown:kt("show"),slideUp:kt("hide"),slideToggle:kt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(n,t){i.fn[n]=function(n,i,r){return this.animate(t,n,i,r)}});i.timers=[];i.fx.tick=function(){var r,n=0,t=i.timers;for(it=i.now();n<t.length;n++)r=t[n],r()||t[n]!==r||t.splice(n--,1);t.length||i.fx.stop();it=void 0};i.fx.timer=function(n){i.timers.push(n);n()?i.fx.start():i.timers.pop()};i.fx.interval=13;i.fx.start=function(){bt||(bt=n.setInterval(i.fx.tick,i.fx.interval))};i.fx.stop=function(){n.clearInterval(bt);bt=null};i.fx.speeds={slow:600,fast:200,_default:400};i.fn.delay=function(t,r){return t=i.fx?i.fx.speeds[t]||t:t,r=r||"fx",this.queue(r,function(i,r){var u=n.setTimeout(i,t);r.stop=function(){n.clearTimeout(u)}})},function(){var n=u.createElement("input"),t=u.createElement("select"),i=t.appendChild(u.createElement("option"));n.type="checkbox";f.checkOn=""!==n.value;f.optSelected=i.selected;t.disabled=!0;f.optDisabled=!i.disabled;n=u.createElement("input");n.value="t";n.type="radio";f.radioValue="t"===n.value}();rt=i.expr.attrHandle;i.fn.extend({attr:function(n,t){return a(this,i.attr,n,t,arguments.length>1)},removeAttr:function(n){return this.each(function(){i.removeAttr(this,n)})}});i.extend({attr:function(n,t,r){var u,f,e=n.nodeType;if(3!==e&&8!==e&&2!==e)return"undefined"==typeof n.getAttribute?i.prop(n,t,r):(1===e&&i.isXMLDoc(n)||(t=t.toLowerCase(),f=i.attrHooks[t]||(i.expr.match.bool.test(t)?bu:void 0)),void 0!==r?null===r?void i.removeAttr(n,t):f&&"set"in f&&void 0!==(u=f.set(n,r,t))?u:(n.setAttribute(t,r+""),r):f&&"get"in f&&null!==(u=f.get(n,t))?u:(u=i.find.attr(n,t),null==u?void 0:u))},attrHooks:{type:{set:function(n,t){if(!f.radioValue&&"radio"===t&&i.nodeName(n,"input")){var r=n.value;return n.setAttribute("type",t),r&&(n.value=r),t}}}},removeAttr:function(n,t){var r,u,e=0,f=t&&t.match(h);if(f&&1===n.nodeType)while(r=f[e++])u=i.propFix[r]||r,i.expr.match.bool.test(r)&&(n[u]=!1),n.removeAttribute(r)}});bu={set:function(n,t,r){return t===!1?i.removeAttr(n,r):n.setAttribute(r,r),r}};i.each(i.expr.match.bool.source.match(/\w+/g),function(n,t){var r=rt[t]||i.find.attr;rt[t]=function(n,t,i){var u,f;return i||(f=rt[t],rt[t]=u,u=null!=r(n,t,i)?t.toLowerCase():null,rt[t]=f),u}});ku=/^(?:input|select|textarea|button)$/i;du=/^(?:a|area)$/i;i.fn.extend({prop:function(n,t){return a(this,i.prop,n,t,arguments.length>1)},removeProp:function(n){return this.each(function(){delete this[i.propFix[n]||n]})}});i.extend({prop:function(n,t,r){var f,u,e=n.nodeType;if(3!==e&&8!==e&&2!==e)return 1===e&&i.isXMLDoc(n)||(t=i.propFix[t]||t,u=i.propHooks[t]),void 0!==r?u&&"set"in u&&void 0!==(f=u.set(n,r,t))?f:n[t]=r:u&&"get"in u&&null!==(f=u.get(n,t))?f:n[t]},propHooks:{tabIndex:{get:function(n){var t=i.find.attr(n,"tabindex");return t?parseInt(t,10):ku.test(n.nodeName)||du.test(n.nodeName)&&n.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}});f.optSelected||(i.propHooks.selected={get:function(n){var t=n.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}});i.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){i.propFix[this.toLowerCase()]=this});dt=/[\t\r\n\f]/g;i.fn.extend({addClass:function(n){var o,t,r,u,f,s,e,c=0;if(i.isFunction(n))return this.each(function(t){i(this).addClass(n.call(this,t,k(this)))});if("string"==typeof n&&n)for(o=n.match(h)||[];t=this[c++];)if(u=k(t),r=1===t.nodeType&&(" "+u+" ").replace(dt," ")){for(s=0;f=o[s++];)r.indexOf(" "+f+" ")<0&&(r+=f+" ");e=i.trim(r);u!==e&&t.setAttribute("class",e)}return this},removeClass:function(n){var o,r,t,u,f,s,e,c=0;if(i.isFunction(n))return this.each(function(t){i(this).removeClass(n.call(this,t,k(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof n&&n)for(o=n.match(h)||[];r=this[c++];)if(u=k(r),t=1===r.nodeType&&(" "+u+" ").replace(dt," ")){for(s=0;f=o[s++];)while(t.indexOf(" "+f+" ")>-1)t=t.replace(" "+f+" "," ");e=i.trim(t);u!==e&&r.setAttribute("class",e)}return this},toggleClass:function(n,t){var u=typeof n;return"boolean"==typeof t&&"string"===u?t?this.addClass(n):this.removeClass(n):i.isFunction(n)?this.each(function(r){i(this).toggleClass(n.call(this,r,k(this),t),t)}):this.each(function(){var t,e,f,o;if("string"===u)for(e=0,f=i(this),o=n.match(h)||[];t=o[e++];)f.hasClass(t)?f.removeClass(t):f.addClass(t);else(void 0===n||"boolean"===u)&&(t=k(this),t&&r.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||n===!1?"":r.get(this,"__className__")||""))})},hasClass:function(n){for(var t,r=0,i=" "+n+" ";t=this[r++];)if(1===t.nodeType&&(" "+k(t)+" ").replace(dt," ").indexOf(i)>-1)return!0;return!1}});gu=/\r/g;i.fn.extend({val:function(n){var t,r,f,u=this[0];return arguments.length?(f=i.isFunction(n),this.each(function(r){var u;1===this.nodeType&&(u=f?n.call(this,r,i(this).val()):n,null==u?u="":"number"==typeof u?u+="":i.isArray(u)&&(u=i.map(u,function(n){return null==n?"":n+""})),t=i.valHooks[this.type]||i.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,u,"value")||(this.value=u))})):u?(t=i.valHooks[u.type]||i.valHooks[u.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(r=t.get(u,"value"))?r:(r=u.value,"string"==typeof r?r.replace(gu,""):null==r?"":r)):void 0}});i.extend({valHooks:{option:{get:function(n){return i.trim(n.value)}},select:{get:function(n){for(var o,t,s=n.options,r=n.selectedIndex,u="select-one"===n.type||0>r,h=u?null:[],c=u?r+1:s.length,e=0>r?c:u?r:0;c>e;e++)if(t=s[e],(t.selected||e===r)&&(f.optDisabled?!t.disabled:null===t.getAttribute("disabled"))&&(!t.parentNode.disabled||!i.nodeName(t.parentNode,"optgroup"))){if(o=i(t).val(),u)return o;h.push(o)}return h},set:function(n,t){for(var u,r,f=n.options,e=i.makeArray(t),o=f.length;o--;)r=f[o],(r.selected=i.inArray(i.valHooks.option.get(r),e)>-1)&&(u=!0);return u||(n.selectedIndex=-1),e}}}});i.each(["radio","checkbox"],function(){i.valHooks[this]={set:function(n,t){if(i.isArray(t))return n.checked=i.inArray(i(n).val(),t)>-1}};f.checkOn||(i.valHooks[this].get=function(n){return null===n.getAttribute("value")?"on":n.value})});li=/^(?:focusinfocus|focusoutblur)$/;i.extend(i.event,{trigger:function(t,f,e,o){var w,s,c,b,a,v,l,p=[e||u],h=ti.call(t,"type")?t.type:t,y=ti.call(t,"namespace")?t.namespace.split("."):[];if(s=c=e=e||u,3!==e.nodeType&&8!==e.nodeType&&!li.test(h+i.event.triggered)&&(h.indexOf(".")>-1&&(y=h.split("."),h=y.shift(),y.sort()),a=h.indexOf(":")<0&&"on"+h,t=t[i.expando]?t:new i.Event(h,"object"==typeof t&&t),t.isTrigger=o?2:3,t.namespace=y.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+y.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=e),f=null==f?[t]:i.makeArray(f,[t]),l=i.event.special[h]||{},o||!l.trigger||l.trigger.apply(e,f)!==!1)){if(!o&&!l.noBubble&&!i.isWindow(e)){for(b=l.delegateType||h,li.test(b+h)||(s=s.parentNode);s;s=s.parentNode)p.push(s),c=s;c===(e.ownerDocument||u)&&p.push(c.defaultView||c.parentWindow||n)}for(w=0;(s=p[w++])&&!t.isPropagationStopped();)t.type=w>1?b:l.bindType||h,v=(r.get(s,"events")||{})[t.type]&&r.get(s,"handle"),v&&v.apply(s,f),v=a&&s[a],v&&v.apply&&g(s)&&(t.result=v.apply(s,f),t.result===!1&&t.preventDefault());return t.type=h,o||t.isDefaultPrevented()||l._default&&l._default.apply(p.pop(),f)!==!1||!g(e)||a&&i.isFunction(e[h])&&!i.isWindow(e)&&(c=e[a],c&&(e[a]=null),i.event.triggered=h,e[h](),i.event.triggered=void 0,c&&(e[a]=c)),t.result}},simulate:function(n,t,r){var u=i.extend(new i.Event,r,{type:n,isSimulated:!0});i.event.trigger(u,null,t);u.isDefaultPrevented()&&r.preventDefault()}});i.fn.extend({trigger:function(n,t){return this.each(function(){i.event.trigger(n,t,this)})},triggerHandler:function(n,t){var r=this[0];if(r)return i.event.trigger(n,t,r,!0)}});i.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(n,t){i.fn[t]=function(n,i){return arguments.length>0?this.on(t,null,n,i):this.trigger(t)}});i.fn.extend({hover:function(n,t){return this.mouseenter(n).mouseleave(t||n)}});f.focusin="onfocusin"in n;f.focusin||i.each({focus:"focusin",blur:"focusout"},function(n,t){var u=function(n){i.event.simulate(t,n.target,i.event.fix(n))};i.event.special[t]={setup:function(){var i=this.ownerDocument||this,f=r.access(i,t);f||i.addEventListener(n,u,!0);r.access(i,t,(f||0)+1)},teardown:function(){var i=this.ownerDocument||this,f=r.access(i,t)-1;f?r.access(i,t,f):(i.removeEventListener(n,u,!0),r.remove(i,t))}}});var ht=n.location,ai=i.now(),vi=/\?/;i.parseJSON=function(n){return JSON.parse(n+"")};i.parseXML=function(t){var r;if(!t||"string"!=typeof t)return null;try{r=(new n.DOMParser).parseFromString(t,"text/xml")}catch(u){r=void 0}return(!r||r.getElementsByTagName("parsererror").length)&&i.error("Invalid XML: "+t),r};var ae=/#.*$/,nf=/([?&])_=[^&]*/,ve=/^(.*?):[ \t]*([^\r\n]*)$/gm,ye=/^(?:GET|HEAD)$/,pe=/^\/\//,tf={},yi={},rf="*/".concat("*"),pi=u.createElement("a");pi.href=ht.href;i.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ht.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(ht.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":rf,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":i.parseJSON,"text xml":i.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(n,t){return t?wi(wi(n,i.ajaxSettings),t):wi(i.ajaxSettings,n)},ajaxPrefilter:uf(tf),ajaxTransport:uf(yi),ajax:function(t,r){function b(t,r,u,h){var a,rt,it,p,b,l=r;2!==s&&(s=2,d&&n.clearTimeout(d),v=void 0,k=h||"",e.readyState=t>0?4:0,a=t>=200&&300>t||304===t,u&&(p=we(f,e,u)),p=be(f,p,e,a),a?(f.ifModified&&(b=e.getResponseHeader("Last-Modified"),b&&(i.lastModified[o]=b),b=e.getResponseHeader("etag"),b&&(i.etag[o]=b)),204===t||"HEAD"===f.type?l="nocontent":304===t?l="notmodified":(l=p.state,rt=p.data,it=p.error,a=!it)):(it=l,(t||!l)&&(l="error",0>t&&(t=0))),e.status=t,e.statusText=(r||l)+"",a?nt.resolveWith(c,[rt,l,e]):nt.rejectWith(c,[e,l,it]),e.statusCode(w),w=void 0,y&&g.trigger(a?"ajaxSuccess":"ajaxError",[e,f,a?rt:it]),tt.fireWith(c,[e,l]),y&&(g.trigger("ajaxComplete",[e,f]),--i.active||i.event.trigger("ajaxStop")))}"object"==typeof t&&(r=t,t=void 0);r=r||{};var v,o,k,p,d,l,y,a,f=i.ajaxSetup({},r),c=f.context||f,g=f.context&&(c.nodeType||c.jquery)?i(c):i.event,nt=i.Deferred(),tt=i.Callbacks("once memory"),w=f.statusCode||{},it={},rt={},s=0,ut="canceled",e={readyState:0,getResponseHeader:function(n){var t;if(2===s){if(!p)for(p={};t=ve.exec(k);)p[t[1].toLowerCase()]=t[2];t=p[n.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===s?k:null},setRequestHeader:function(n,t){var i=n.toLowerCase();return s||(n=rt[i]=rt[i]||n,it[n]=t),this},overrideMimeType:function(n){return s||(f.mimeType=n),this},statusCode:function(n){var t;if(n)if(2>s)for(t in n)w[t]=[w[t],n[t]];else e.always(n[e.status]);return this},abort:function(n){var t=n||ut;return v&&v.abort(t),b(0,t),this}};if(nt.promise(e).complete=tt.add,e.success=e.done,e.error=e.fail,f.url=((t||f.url||ht.href)+"").replace(ae,"").replace(pe,ht.protocol+"//"),f.type=r.method||r.type||f.method||f.type,f.dataTypes=i.trim(f.dataType||"*").toLowerCase().match(h)||[""],null==f.crossDomain){l=u.createElement("a");try{l.href=f.url;l.href=l.href;f.crossDomain=pi.protocol+"//"+pi.host!=l.protocol+"//"+l.host}catch(ft){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=i.param(f.data,f.traditional)),ff(tf,f,r,e),2===s)return e;y=i.event&&f.global;y&&0==i.active++&&i.event.trigger("ajaxStart");f.type=f.type.toUpperCase();f.hasContent=!ye.test(f.type);o=f.url;f.hasContent||(f.data&&(o=f.url+=(vi.test(o)?"&":"?")+f.data,delete f.data),f.cache===!1&&(f.url=nf.test(o)?o.replace(nf,"$1_="+ai++):o+(vi.test(o)?"&":"?")+"_="+ai++));f.ifModified&&(i.lastModified[o]&&e.setRequestHeader("If-Modified-Since",i.lastModified[o]),i.etag[o]&&e.setRequestHeader("If-None-Match",i.etag[o]));(f.data&&f.hasContent&&f.contentType!==!1||r.contentType)&&e.setRequestHeader("Content-Type",f.contentType);e.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+rf+"; q=0.01":""):f.accepts["*"]);for(a in f.headers)e.setRequestHeader(a,f.headers[a]);if(f.beforeSend&&(f.beforeSend.call(c,e,f)===!1||2===s))return e.abort();ut="abort";for(a in{success:1,error:1,complete:1})e[a](f[a]);if(v=ff(yi,f,r,e)){if(e.readyState=1,y&&g.trigger("ajaxSend",[e,f]),2===s)return e;f.async&&f.timeout>0&&(d=n.setTimeout(function(){e.abort("timeout")},f.timeout));try{s=1;v.send(it,b)}catch(ft){if(!(2>s))throw ft;b(-1,ft)}}else b(-1,"No Transport");return e},getJSON:function(n,t,r){return i.get(n,t,r,"json")},getScript:function(n,t){return i.get(n,void 0,t,"script")}});i.each(["get","post"],function(n,t){i[t]=function(n,r,u,f){return i.isFunction(r)&&(f=f||u,u=r,r=void 0),i.ajax(i.extend({url:n,type:t,dataType:f,data:r,success:u},i.isPlainObject(n)&&n))}});i._evalUrl=function(n){return i.ajax({url:n,type:"GET",dataType:"script",async:!1,global:!1,throws:!0})};i.fn.extend({wrapAll:function(n){var t;return i.isFunction(n)?this.each(function(t){i(this).wrapAll(n.call(this,t))}):(this[0]&&(t=i(n,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var n=this;n.firstElementChild;)n=n.firstElementChild;return n}).append(this)),this)},wrapInner:function(n){return i.isFunction(n)?this.each(function(t){i(this).wrapInner(n.call(this,t))}):this.each(function(){var t=i(this),r=t.contents();r.length?r.wrapAll(n):t.append(n)})},wrap:function(n){var t=i.isFunction(n);return this.each(function(r){i(this).wrapAll(t?n.call(this,r):n)})},unwrap:function(){return this.parent().each(function(){i.nodeName(this,"body")||i(this).replaceWith(this.childNodes)}).end()}});i.expr.filters.hidden=function(n){return!i.expr.filters.visible(n)};i.expr.filters.visible=function(n){return n.offsetWidth>0||n.offsetHeight>0||n.getClientRects().length>0};var ke=/%20/g,de=/\[\]$/,ef=/\r?\n/g,ge=/^(?:submit|button|image|reset|file)$/i,no=/^(?:input|select|textarea|keygen)/i;return i.param=function(n,t){var r,u=[],f=function(n,t){t=i.isFunction(t)?t():null==t?"":t;u[u.length]=encodeURIComponent(n)+"="+encodeURIComponent(t)};if(void 0===t&&(t=i.ajaxSettings&&i.ajaxSettings.traditional),i.isArray(n)||n.jquery&&!i.isPlainObject(n))i.each(n,function(){f(this.name,this.value)});else for(r in n)bi(r,n[r],t,f);return u.join("&").replace(ke,"+")},i.fn.extend({serialize:function(){return i.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var n=i.prop(this,"elements");return n?i.makeArray(n):this}).filter(function(){var n=this.type;return this.name&&!i(this).is(":disabled")&&no.test(this.nodeName)&&!ge.test(n)&&(this.checked||!yr.test(n))}).map(function(n,t){var r=i(this).val();return null==r?null:i.isArray(r)?i.map(r,function(n){return{name:t.name,value:n.replace(ef,"\r\n")}}):{name:t.name,value:r.replace(ef,"\r\n")}}).get()}}),i.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(t){}},of={0:200,1223:204},ut=i.ajaxSettings.xhr(),f.cors=!!ut&&"withCredentials"in ut,f.ajax=ut=!!ut,i.ajaxTransport(function(t){var i,r;if(f.cors||ut&&!t.crossDomain)return{send:function(u,f){var o,e=t.xhr();if(e.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(o in t.xhrFields)e[o]=t.xhrFields[o];t.mimeType&&e.overrideMimeType&&e.overrideMimeType(t.mimeType);t.crossDomain||u["X-Requested-With"]||(u["X-Requested-With"]="XMLHttpRequest");for(o in u)e.setRequestHeader(o,u[o]);i=function(n){return function(){i&&(i=r=e.onload=e.onerror=e.onabort=e.onreadystatechange=null,"abort"===n?e.abort():"error"===n?"number"!=typeof e.status?f(0,"error"):f(e.status,e.statusText):f(of[e.status]||e.status,e.statusText,"text"!==(e.responseType||"text")||"string"!=typeof e.responseText?{binary:e.response}:{text:e.responseText},e.getAllResponseHeaders()))}};e.onload=i();r=e.onerror=i("error");void 0!==e.onabort?e.onabort=r:e.onreadystatechange=function(){4===e.readyState&&n.setTimeout(function(){i&&r()})};i=i("abort");try{e.send(t.hasContent&&t.data||null)}catch(s){if(i)throw s;}},abort:function(){i&&i()}}}),i.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(n){return i.globalEval(n),n}}}),i.ajaxPrefilter("script",function(n){void 0===n.cache&&(n.cache=!1);n.crossDomain&&(n.type="GET")}),i.ajaxTransport("script",function(n){if(n.crossDomain){var r,t;return{send:function(f,e){r=i("<script>").prop({charset:n.scriptCharset,src:n.url}).on("load error",t=function(n){r.remove();t=null;n&&e("error"===n.type?404:200,n.type)});u.head.appendChild(r[0])},abort:function(){t&&t()}}}}),ki=[],gt=/(=)\?(?=&|$)|\?\?/,i.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var n=ki.pop()||i.expando+"_"+ai++;return this[n]=!0,n}}),i.ajaxPrefilter("json jsonp",function(t,r,u){var f,e,o,s=t.jsonp!==!1&&(gt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&gt.test(t.data)&&"data");if(s||"jsonp"===t.dataTypes[0])return(f=t.jsonpCallback=i.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(gt,"$1"+f):t.jsonp!==!1&&(t.url+=(vi.test(t.url)?"&":"?")+t.jsonp+"="+f),t.converters["script json"]=function(){return o||i.error(f+" was not called"),o[0]},t.dataTypes[0]="json",e=n[f],n[f]=function(){o=arguments},u.always(function(){void 0===e?i(n).removeProp(f):n[f]=e;t[f]&&(t.jsonpCallback=r.jsonpCallback,ki.push(f));o&&i.isFunction(e)&&e(o[0]);o=e=void 0}),"script")}),f.createHTMLDocument=function(){var n=u.implementation.createHTMLDocument("").body;return n.innerHTML="<form><\/form><form><\/form>",2===n.childNodes.length}(),i.parseHTML=function(n,t,r){if(!n||"string"!=typeof n)return null;"boolean"==typeof t&&(r=t,t=!1);t=t||(f.createHTMLDocument?u.implementation.createHTMLDocument(""):u);var e=rr.exec(n),o=!r&&[];return e?[t.createElement(e[1])]:(e=kr([n],t,o),o&&o.length&&i(o).remove(),i.merge([],e.childNodes))},di=i.fn.load,i.fn.load=function(n,t,r){if("string"!=typeof n&&di)return di.apply(this,arguments);var f,o,s,u=this,e=n.indexOf(" ");return e>-1&&(f=i.trim(n.slice(e)),n=n.slice(0,e)),i.isFunction(t)?(r=t,t=void 0):t&&"object"==typeof t&&(o="POST"),u.length>0&&i.ajax({url:n,type:o||"GET",dataType:"html",data:t}).done(function(n){s=arguments;u.html(f?i("<div>").append(i.parseHTML(n)).find(f):n)}).always(r&&function(n,t){u.each(function(){r.apply(u,s||[n.responseText,t,n])})}),this},i.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(n,t){i.fn[t]=function(n){return this.on(t,n)}}),i.expr.filters.animated=function(n){return i.grep(i.timers,function(t){return n===t.elem}).length},i.offset={setOffset:function(n,t,r){var e,o,s,h,u,c,v,l=i.css(n,"position"),a=i(n),f={};"static"===l&&(n.style.position="relative");u=a.offset();s=i.css(n,"top");c=i.css(n,"left");v=("absolute"===l||"fixed"===l)&&(s+c).indexOf("auto")>-1;v?(e=a.position(),h=e.top,o=e.left):(h=parseFloat(s)||0,o=parseFloat(c)||0);i.isFunction(t)&&(t=t.call(n,r,i.extend({},u)));null!=t.top&&(f.top=t.top-u.top+h);null!=t.left&&(f.left=t.left-u.left+o);"using"in t?t.using.call(n,f):a.css(f)}},i.fn.extend({offset:function(n){if(arguments.length)return void 0===n?this:this.each(function(t){i.offset.setOffset(this,n,t)});var t,f,r=this[0],u={top:0,left:0},e=r&&r.ownerDocument;if(e)return t=e.documentElement,i.contains(t,r)?(u=r.getBoundingClientRect(),f=sf(e),{top:u.top+f.pageYOffset-t.clientTop,left:u.left+f.pageXOffset-t.clientLeft}):u},position:function(){if(this[0]){var n,r,u=this[0],t={top:0,left:0};return"fixed"===i.css(u,"position")?r=u.getBoundingClientRect():(n=this.offsetParent(),r=this.offset(),i.nodeName(n[0],"html")||(t=n.offset()),t.top+=i.css(n[0],"borderTopWidth",!0)-n.scrollTop(),t.left+=i.css(n[0],"borderLeftWidth",!0)-n.scrollLeft()),{top:r.top-t.top-i.css(u,"marginTop",!0),left:r.left-t.left-i.css(u,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var n=this.offsetParent;n&&"static"===i.css(n,"position");)n=n.offsetParent;return n||st})}}),i.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(n,t){var r="pageYOffset"===t;i.fn[n]=function(i){return a(this,function(n,i,u){var f=sf(n);return void 0===u?f?f[t]:n[i]:void(f?f.scrollTo(r?f.pageXOffset:u,r?u:f.pageYOffset):n[i]=u)},n,i,arguments.length)}}),i.each(["top","left"],function(n,t){i.cssHooks[t]=ci(f.pixelPosition,function(n,r){if(r)return(r=tt(n,t),si.test(r)?i(n).position()[t]+"px":r)})}),i.each({Height:"height",Width:"width"},function(n,t){i.each({padding:"inner"+n,content:t,"":"outer"+n},function(r,u){i.fn[u]=function(u,f){var e=arguments.length&&(r||"boolean"!=typeof u),o=r||(u===!0||f===!0?"margin":"border");return a(this,function(t,r,u){var f;return i.isWindow(t)?t.document.documentElement["client"+n]:9===t.nodeType?(f=t.documentElement,Math.max(t.body["scroll"+n],f["scroll"+n],t.body["offset"+n],f["offset"+n],f["client"+n])):void 0===u?i.css(t,r,o):i.style(t,r,u,o)},t,e?u:void 0,e,null)}})}),i.fn.extend({bind:function(n,t,i){return this.on(n,null,t,i)},unbind:function(n,t){return this.off(n,null,t)},delegate:function(n,t,i,r){return this.on(t,n,i,r)},undelegate:function(n,t,i){return 1===arguments.length?this.off(n,"**"):this.off(t,n||"**",i)},size:function(){return this.length}}),i.fn.andSelf=i.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return i}),hf=n.jQuery,cf=n.$,i.noConflict=function(t){return n.$===i&&(n.$=cf),t&&n.jQuery===i&&(n.jQuery=hf),i},t||(n.jQuery=n.$=i),i});;
/*! jQuery UI - v1.11.4 - 2016-02-18
* http://jqueryui.com
* Includes: core.js, widget.js, mouse.js, position.js, draggable.js, effect.js, effect-pulsate.js
* Copyright jQuery Foundation and other contributors; Licensed MIT */

(function (e) { "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery) })(function (e) {
    function t(t, s) { var n, a, o, r = t.nodeName.toLowerCase(); return "area" === r ? (n = t.parentNode, a = n.name, t.href && a && "map" === n.nodeName.toLowerCase() ? (o = e("img[usemap='#" + a + "']")[0], !!o && i(o)) : !1) : (/^(input|select|textarea|button|object)$/.test(r) ? !t.disabled : "a" === r ? t.href || s : s) && i(t) } function i(t) { return e.expr.filters.visible(t) && !e(t).parents().addBack().filter(function () { return "hidden" === e.css(this, "visibility") }).length } e.ui = e.ui || {}, e.extend(e.ui, { version: "1.11.4", keyCode: { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 } }), e.fn.extend({ scrollParent: function (t) { var i = this.css("position"), s = "absolute" === i, n = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/, a = this.parents().filter(function () { var t = e(this); return s && "static" === t.css("position") ? !1 : n.test(t.css("overflow") + t.css("overflow-y") + t.css("overflow-x")) }).eq(0); return "fixed" !== i && a.length ? a : e(this[0].ownerDocument || document) }, uniqueId: function () { var e = 0; return function () { return this.each(function () { this.id || (this.id = "ui-id-" + ++e) }) } }(), removeUniqueId: function () { return this.each(function () { /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id") }) } }), e.extend(e.expr[":"], { data: e.expr.createPseudo ? e.expr.createPseudo(function (t) { return function (i) { return !!e.data(i, t) } }) : function (t, i, s) { return !!e.data(t, s[3]) }, focusable: function (i) { return t(i, !isNaN(e.attr(i, "tabindex"))) }, tabbable: function (i) { var s = e.attr(i, "tabindex"), n = isNaN(s); return (n || s >= 0) && t(i, !n) } }), e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function (t, i) { function s(t, i, s, a) { return e.each(n, function () { i -= parseFloat(e.css(t, "padding" + this)) || 0, s && (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0), a && (i -= parseFloat(e.css(t, "margin" + this)) || 0) }), i } var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"], a = i.toLowerCase(), o = { innerWidth: e.fn.innerWidth, innerHeight: e.fn.innerHeight, outerWidth: e.fn.outerWidth, outerHeight: e.fn.outerHeight }; e.fn["inner" + i] = function (t) { return void 0 === t ? o["inner" + i].call(this) : this.each(function () { e(this).css(a, s(this, t) + "px") }) }, e.fn["outer" + i] = function (t, n) { return "number" != typeof t ? o["outer" + i].call(this, t) : this.each(function () { e(this).css(a, s(this, t, !0, n) + "px") }) } }), e.fn.addBack || (e.fn.addBack = function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) }), e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function (t) { return function (i) { return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this) } }(e.fn.removeData)), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.fn.extend({ focus: function (t) { return function (i, s) { return "number" == typeof i ? this.each(function () { var t = this; setTimeout(function () { e(t).focus(), s && s.call(t) }, i) }) : t.apply(this, arguments) } }(e.fn.focus), disableSelection: function () { var e = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown"; return function () { return this.bind(e + ".ui-disableSelection", function (e) { e.preventDefault() }) } }(), enableSelection: function () { return this.unbind(".ui-disableSelection") }, zIndex: function (t) { if (void 0 !== t) return this.css("zIndex", t); if (this.length) for (var i, s, n = e(this[0]) ; n.length && n[0] !== document;) { if (i = n.css("position"), ("absolute" === i || "relative" === i || "fixed" === i) && (s = parseInt(n.css("zIndex"), 10), !isNaN(s) && 0 !== s)) return s; n = n.parent() } return 0 } }), e.ui.plugin = { add: function (t, i, s) { var n, a = e.ui[t].prototype; for (n in s) a.plugins[n] = a.plugins[n] || [], a.plugins[n].push([i, s[n]]) }, call: function (e, t, i, s) { var n, a = e.plugins[t]; if (a && (s || e.element[0].parentNode && 11 !== e.element[0].parentNode.nodeType)) for (n = 0; a.length > n; n++) e.options[a[n][0]] && a[n][1].apply(e.element, i) } }; var s = 0, n = Array.prototype.slice; e.cleanData = function (t) { return function (i) { var s, n, a; for (a = 0; null != (n = i[a]) ; a++) try { s = e._data(n, "events"), s && s.remove && e(n).triggerHandler("remove") } catch (o) { } t(i) } }(e.cleanData), e.widget = function (t, i, s) { var n, a, o, r, h = {}, l = t.split(".")[0]; return t = t.split(".")[1], n = l + "-" + t, s || (s = i, i = e.Widget), e.expr[":"][n.toLowerCase()] = function (t) { return !!e.data(t, n) }, e[l] = e[l] || {}, a = e[l][t], o = e[l][t] = function (e, t) { return this._createWidget ? (arguments.length && this._createWidget(e, t), void 0) : new o(e, t) }, e.extend(o, a, { version: s.version, _proto: e.extend({}, s), _childConstructors: [] }), r = new i, r.options = e.widget.extend({}, r.options), e.each(s, function (t, s) { return e.isFunction(s) ? (h[t] = function () { var e = function () { return i.prototype[t].apply(this, arguments) }, n = function (e) { return i.prototype[t].apply(this, e) }; return function () { var t, i = this._super, a = this._superApply; return this._super = e, this._superApply = n, t = s.apply(this, arguments), this._super = i, this._superApply = a, t } }(), void 0) : (h[t] = s, void 0) }), o.prototype = e.widget.extend(r, { widgetEventPrefix: a ? r.widgetEventPrefix || t : t }, h, { constructor: o, namespace: l, widgetName: t, widgetFullName: n }), a ? (e.each(a._childConstructors, function (t, i) { var s = i.prototype; e.widget(s.namespace + "." + s.widgetName, o, i._proto) }), delete a._childConstructors) : i._childConstructors.push(o), e.widget.bridge(t, o), o }, e.widget.extend = function (t) { for (var i, s, a = n.call(arguments, 1), o = 0, r = a.length; r > o; o++) for (i in a[o]) s = a[o][i], a[o].hasOwnProperty(i) && void 0 !== s && (t[i] = e.isPlainObject(s) ? e.isPlainObject(t[i]) ? e.widget.extend({}, t[i], s) : e.widget.extend({}, s) : s); return t }, e.widget.bridge = function (t, i) { var s = i.prototype.widgetFullName || t; e.fn[t] = function (a) { var o = "string" == typeof a, r = n.call(arguments, 1), h = this; return o ? this.each(function () { var i, n = e.data(this, s); return "instance" === a ? (h = n, !1) : n ? e.isFunction(n[a]) && "_" !== a.charAt(0) ? (i = n[a].apply(n, r), i !== n && void 0 !== i ? (h = i && i.jquery ? h.pushStack(i.get()) : i, !1) : void 0) : e.error("no such method '" + a + "' for " + t + " widget instance") : e.error("cannot call methods on " + t + " prior to initialization; " + "attempted to call method '" + a + "'") }) : (r.length && (a = e.widget.extend.apply(null, [a].concat(r))), this.each(function () { var t = e.data(this, s); t ? (t.option(a || {}), t._init && t._init()) : e.data(this, s, new i(a, this)) })), h } }, e.Widget = function () { }, e.Widget._childConstructors = [], e.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", defaultElement: "<div>", options: { disabled: !1, create: null }, _createWidget: function (t, i) { i = e(i || this.defaultElement || this)[0], this.element = e(i), this.uuid = s++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = e(), this.hoverable = e(), this.focusable = e(), i !== this && (e.data(i, this.widgetFullName, this), this._on(!0, this.element, { remove: function (e) { e.target === i && this.destroy() } }), this.document = e(i.style ? i.ownerDocument : i.document || i), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init() }, _getCreateOptions: e.noop, _getCreateEventData: e.noop, _create: e.noop, _init: e.noop, destroy: function () { this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus") }, _destroy: e.noop, widget: function () { return this.element }, option: function (t, i) { var s, n, a, o = t; if (0 === arguments.length) return e.widget.extend({}, this.options); if ("string" == typeof t) if (o = {}, s = t.split("."), t = s.shift(), s.length) { for (n = o[t] = e.widget.extend({}, this.options[t]), a = 0; s.length - 1 > a; a++) n[s[a]] = n[s[a]] || {}, n = n[s[a]]; if (t = s.pop(), 1 === arguments.length) return void 0 === n[t] ? null : n[t]; n[t] = i } else { if (1 === arguments.length) return void 0 === this.options[t] ? null : this.options[t]; o[t] = i } return this._setOptions(o), this }, _setOptions: function (e) { var t; for (t in e) this._setOption(t, e[t]); return this }, _setOption: function (e, t) { return this.options[e] = t, "disabled" === e && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!t), t && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this }, enable: function () { return this._setOptions({ disabled: !1 }) }, disable: function () { return this._setOptions({ disabled: !0 }) }, _on: function (t, i, s) { var n, a = this; "boolean" != typeof t && (s = i, i = t, t = !1), s ? (i = n = e(i), this.bindings = this.bindings.add(i)) : (s = i, i = this.element, n = this.widget()), e.each(s, function (s, o) { function r() { return t || a.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof o ? a[o] : o).apply(a, arguments) : void 0 } "string" != typeof o && (r.guid = o.guid = o.guid || r.guid || e.guid++); var h = s.match(/^([\w:-]*)\s*(.*)$/), l = h[1] + a.eventNamespace, u = h[2]; u ? n.delegate(u, l, r) : i.bind(l, r) }) }, _off: function (t, i) { i = (i || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, t.unbind(i).undelegate(i), this.bindings = e(this.bindings.not(t).get()), this.focusable = e(this.focusable.not(t).get()), this.hoverable = e(this.hoverable.not(t).get()) }, _delay: function (e, t) { function i() { return ("string" == typeof e ? s[e] : e).apply(s, arguments) } var s = this; return setTimeout(i, t || 0) }, _hoverable: function (t) { this.hoverable = this.hoverable.add(t), this._on(t, { mouseenter: function (t) { e(t.currentTarget).addClass("ui-state-hover") }, mouseleave: function (t) { e(t.currentTarget).removeClass("ui-state-hover") } }) }, _focusable: function (t) { this.focusable = this.focusable.add(t), this._on(t, { focusin: function (t) { e(t.currentTarget).addClass("ui-state-focus") }, focusout: function (t) { e(t.currentTarget).removeClass("ui-state-focus") } }) }, _trigger: function (t, i, s) { var n, a, o = this.options[t]; if (s = s || {}, i = e.Event(i), i.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), i.target = this.element[0], a = i.originalEvent) for (n in a) n in i || (i[n] = a[n]); return this.element.trigger(i, s), !(e.isFunction(o) && o.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented()) } }, e.each({ show: "fadeIn", hide: "fadeOut" }, function (t, i) { e.Widget.prototype["_" + t] = function (s, n, a) { "string" == typeof n && (n = { effect: n }); var o, r = n ? n === !0 || "number" == typeof n ? i : n.effect || i : t; n = n || {}, "number" == typeof n && (n = { duration: n }), o = !e.isEmptyObject(n), n.complete = a, n.delay && s.delay(n.delay), o && e.effects && e.effects.effect[r] ? s[t](n) : r !== t && s[r] ? s[r](n.duration, n.easing, a) : s.queue(function (i) { e(this)[t](), a && a.call(s[0]), i() }) } }), e.widget; var a = !1; e(document).mouseup(function () { a = !1 }), e.widget("ui.mouse", { version: "1.11.4", options: { cancel: "input,textarea,button,select,option", distance: 1, delay: 0 }, _mouseInit: function () { var t = this; this.element.bind("mousedown." + this.widgetName, function (e) { return t._mouseDown(e) }).bind("click." + this.widgetName, function (i) { return !0 === e.data(i.target, t.widgetName + ".preventClickEvent") ? (e.removeData(i.target, t.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : void 0 }), this.started = !1 }, _mouseDestroy: function () { this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate) }, _mouseDown: function (t) { if (!a) { this._mouseMoved = !1, this._mouseStarted && this._mouseUp(t), this._mouseDownEvent = t; var i = this, s = 1 === t.which, n = "string" == typeof this.options.cancel && t.target.nodeName ? e(t.target).closest(this.options.cancel).length : !1; return s && !n && this._mouseCapture(t) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () { i.mouseDelayMet = !0 }, this.options.delay)), this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(t) !== !1, !this._mouseStarted) ? (t.preventDefault(), !0) : (!0 === e.data(t.target, this.widgetName + ".preventClickEvent") && e.removeData(t.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (e) { return i._mouseMove(e) }, this._mouseUpDelegate = function (e) { return i._mouseUp(e) }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), t.preventDefault(), a = !0, !0)) : !0 } }, _mouseMove: function (t) { if (this._mouseMoved) { if (e.ui.ie && (!document.documentMode || 9 > document.documentMode) && !t.button) return this._mouseUp(t); if (!t.which) return this._mouseUp(t) } return (t.which || t.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1, this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted) }, _mouseUp: function (t) { return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(t)), a = !1, !1 }, _mouseDistanceMet: function (e) { return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance }, _mouseDelayMet: function () { return this.mouseDelayMet }, _mouseStart: function () { }, _mouseDrag: function () { }, _mouseStop: function () { }, _mouseCapture: function () { return !0 } }), function () { function t(e, t, i) { return [parseFloat(e[0]) * (p.test(e[0]) ? t / 100 : 1), parseFloat(e[1]) * (p.test(e[1]) ? i / 100 : 1)] } function i(t, i) { return parseInt(e.css(t, i), 10) || 0 } function s(t) { var i = t[0]; return 9 === i.nodeType ? { width: t.width(), height: t.height(), offset: { top: 0, left: 0 } } : e.isWindow(i) ? { width: t.width(), height: t.height(), offset: { top: t.scrollTop(), left: t.scrollLeft() } } : i.preventDefault ? { width: 0, height: 0, offset: { top: i.pageY, left: i.pageX } } : { width: t.outerWidth(), height: t.outerHeight(), offset: t.offset() } } e.ui = e.ui || {}; var n, a, o = Math.max, r = Math.abs, h = Math.round, l = /left|center|right/, u = /top|center|bottom/, c = /[\+\-]\d+(\.[\d]+)?%?/, d = /^\w+/, p = /%$/, f = e.fn.position; e.position = { scrollbarWidth: function () { if (void 0 !== n) return n; var t, i, s = e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), a = s.children()[0]; return e("body").append(s), t = a.offsetWidth, s.css("overflow", "scroll"), i = a.offsetWidth, t === i && (i = s[0].clientWidth), s.remove(), n = t - i }, getScrollInfo: function (t) { var i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"), s = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"), n = "scroll" === i || "auto" === i && t.width < t.element[0].scrollWidth, a = "scroll" === s || "auto" === s && t.height < t.element[0].scrollHeight; return { width: a ? e.position.scrollbarWidth() : 0, height: n ? e.position.scrollbarWidth() : 0 } }, getWithinInfo: function (t) { var i = e(t || window), s = e.isWindow(i[0]), n = !!i[0] && 9 === i[0].nodeType; return { element: i, isWindow: s, isDocument: n, offset: i.offset() || { left: 0, top: 0 }, scrollLeft: i.scrollLeft(), scrollTop: i.scrollTop(), width: s || n ? i.width() : i.outerWidth(), height: s || n ? i.height() : i.outerHeight() } } }, e.fn.position = function (n) { if (!n || !n.of) return f.apply(this, arguments); n = e.extend({}, n); var p, m, g, v, _, b, y = e(n.of), x = e.position.getWithinInfo(n.within), w = e.position.getScrollInfo(x), k = (n.collision || "flip").split(" "), D = {}; return b = s(y), y[0].preventDefault && (n.at = "left top"), m = b.width, g = b.height, v = b.offset, _ = e.extend({}, v), e.each(["my", "at"], function () { var e, t, i = (n[this] || "").split(" "); 1 === i.length && (i = l.test(i[0]) ? i.concat(["center"]) : u.test(i[0]) ? ["center"].concat(i) : ["center", "center"]), i[0] = l.test(i[0]) ? i[0] : "center", i[1] = u.test(i[1]) ? i[1] : "center", e = c.exec(i[0]), t = c.exec(i[1]), D[this] = [e ? e[0] : 0, t ? t[0] : 0], n[this] = [d.exec(i[0])[0], d.exec(i[1])[0]] }), 1 === k.length && (k[1] = k[0]), "right" === n.at[0] ? _.left += m : "center" === n.at[0] && (_.left += m / 2), "bottom" === n.at[1] ? _.top += g : "center" === n.at[1] && (_.top += g / 2), p = t(D.at, m, g), _.left += p[0], _.top += p[1], this.each(function () { var s, l, u = e(this), c = u.outerWidth(), d = u.outerHeight(), f = i(this, "marginLeft"), b = i(this, "marginTop"), T = c + f + i(this, "marginRight") + w.width, S = d + b + i(this, "marginBottom") + w.height, M = e.extend({}, _), N = t(D.my, u.outerWidth(), u.outerHeight()); "right" === n.my[0] ? M.left -= c : "center" === n.my[0] && (M.left -= c / 2), "bottom" === n.my[1] ? M.top -= d : "center" === n.my[1] && (M.top -= d / 2), M.left += N[0], M.top += N[1], a || (M.left = h(M.left), M.top = h(M.top)), s = { marginLeft: f, marginTop: b }, e.each(["left", "top"], function (t, i) { e.ui.position[k[t]] && e.ui.position[k[t]][i](M, { targetWidth: m, targetHeight: g, elemWidth: c, elemHeight: d, collisionPosition: s, collisionWidth: T, collisionHeight: S, offset: [p[0] + N[0], p[1] + N[1]], my: n.my, at: n.at, within: x, elem: u }) }), n.using && (l = function (e) { var t = v.left - M.left, i = t + m - c, s = v.top - M.top, a = s + g - d, h = { target: { element: y, left: v.left, top: v.top, width: m, height: g }, element: { element: u, left: M.left, top: M.top, width: c, height: d }, horizontal: 0 > i ? "left" : t > 0 ? "right" : "center", vertical: 0 > a ? "top" : s > 0 ? "bottom" : "middle" }; c > m && m > r(t + i) && (h.horizontal = "center"), d > g && g > r(s + a) && (h.vertical = "middle"), h.important = o(r(t), r(i)) > o(r(s), r(a)) ? "horizontal" : "vertical", n.using.call(this, e, h) }), u.offset(e.extend(M, { using: l })) }) }, e.ui.position = { fit: { left: function (e, t) { var i, s = t.within, n = s.isWindow ? s.scrollLeft : s.offset.left, a = s.width, r = e.left - t.collisionPosition.marginLeft, h = n - r, l = r + t.collisionWidth - a - n; t.collisionWidth > a ? h > 0 && 0 >= l ? (i = e.left + h + t.collisionWidth - a - n, e.left += h - i) : e.left = l > 0 && 0 >= h ? n : h > l ? n + a - t.collisionWidth : n : h > 0 ? e.left += h : l > 0 ? e.left -= l : e.left = o(e.left - r, e.left) }, top: function (e, t) { var i, s = t.within, n = s.isWindow ? s.scrollTop : s.offset.top, a = t.within.height, r = e.top - t.collisionPosition.marginTop, h = n - r, l = r + t.collisionHeight - a - n; t.collisionHeight > a ? h > 0 && 0 >= l ? (i = e.top + h + t.collisionHeight - a - n, e.top += h - i) : e.top = l > 0 && 0 >= h ? n : h > l ? n + a - t.collisionHeight : n : h > 0 ? e.top += h : l > 0 ? e.top -= l : e.top = o(e.top - r, e.top) } }, flip: { left: function (e, t) { var i, s, n = t.within, a = n.offset.left + n.scrollLeft, o = n.width, h = n.isWindow ? n.scrollLeft : n.offset.left, l = e.left - t.collisionPosition.marginLeft, u = l - h, c = l + t.collisionWidth - o - h, d = "left" === t.my[0] ? -t.elemWidth : "right" === t.my[0] ? t.elemWidth : 0, p = "left" === t.at[0] ? t.targetWidth : "right" === t.at[0] ? -t.targetWidth : 0, f = -2 * t.offset[0]; 0 > u ? (i = e.left + d + p + f + t.collisionWidth - o - a, (0 > i || r(u) > i) && (e.left += d + p + f)) : c > 0 && (s = e.left - t.collisionPosition.marginLeft + d + p + f - h, (s > 0 || c > r(s)) && (e.left += d + p + f)) }, top: function (e, t) { var i, s, n = t.within, a = n.offset.top + n.scrollTop, o = n.height, h = n.isWindow ? n.scrollTop : n.offset.top, l = e.top - t.collisionPosition.marginTop, u = l - h, c = l + t.collisionHeight - o - h, d = "top" === t.my[1], p = d ? -t.elemHeight : "bottom" === t.my[1] ? t.elemHeight : 0, f = "top" === t.at[1] ? t.targetHeight : "bottom" === t.at[1] ? -t.targetHeight : 0, m = -2 * t.offset[1]; 0 > u ? (s = e.top + p + f + m + t.collisionHeight - o - a, (0 > s || r(u) > s) && (e.top += p + f + m)) : c > 0 && (i = e.top - t.collisionPosition.marginTop + p + f + m - h, (i > 0 || c > r(i)) && (e.top += p + f + m)) } }, flipfit: { left: function () { e.ui.position.flip.left.apply(this, arguments), e.ui.position.fit.left.apply(this, arguments) }, top: function () { e.ui.position.flip.top.apply(this, arguments), e.ui.position.fit.top.apply(this, arguments) } } }, function () { var t, i, s, n, o, r = document.getElementsByTagName("body")[0], h = document.createElement("div"); t = document.createElement(r ? "div" : "body"), s = { visibility: "hidden", width: 0, height: 0, border: 0, margin: 0, background: "none" }, r && e.extend(s, { position: "absolute", left: "-1000px", top: "-1000px" }); for (o in s) t.style[o] = s[o]; t.appendChild(h), i = r || document.documentElement, i.insertBefore(t, i.firstChild), h.style.cssText = "position: absolute; left: 10.7432222px;", n = e(h).offset().left, a = n > 10 && 11 > n, t.innerHTML = "", i.removeChild(t) }() }(), e.ui.position, e.widget("ui.draggable", e.ui.mouse, { version: "1.11.4", widgetEventPrefix: "drag", options: { addClasses: !0, appendTo: "parent", axis: !1, connectToSortable: !1, containment: !1, cursor: "auto", cursorAt: !1, grid: !1, handle: !1, helper: "original", iframeFix: !1, opacity: !1, refreshPositions: !1, revert: !1, revertDuration: 500, scope: "default", scroll: !0, scrollSensitivity: 20, scrollSpeed: 20, snap: !1, snapMode: "both", snapTolerance: 20, stack: !1, zIndex: !1, drag: null, start: null, stop: null }, _create: function () { "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._setHandleClassName(), this._mouseInit() }, _setOption: function (e, t) { this._super(e, t), "handle" === e && (this._removeHandleClassName(), this._setHandleClassName()) }, _destroy: function () { return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), this._mouseDestroy(), void 0) }, _mouseCapture: function (t) { var i = this.options; return this._blurActiveElement(t), this.helper || i.disabled || e(t.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(t), this.handle ? (this._blockFrames(i.iframeFix === !0 ? "iframe" : i.iframeFix), !0) : !1) }, _blockFrames: function (t) { this.iframeBlocks = this.document.find(t).map(function () { var t = e(this); return e("<div>").css("position", "absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0] }) }, _unblockFrames: function () { this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks) }, _blurActiveElement: function (t) { var i = this.document[0]; if (this.handleElement.is(t.target)) try { i.activeElement && "body" !== i.activeElement.nodeName.toLowerCase() && e(i.activeElement).blur() } catch (s) { } }, _mouseStart: function (t) { var i = this.options; return this.helper = this._createHelper(t), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function () { return "fixed" === e(this).css("position") }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(t), this.originalPosition = this.position = this._generatePosition(t, !1), this.originalPageX = t.pageX, this.originalPageY = t.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), this._setContainment(), this._trigger("start", t) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this._normalizeRightBottom(), this._mouseDrag(t, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0) }, _refreshOffsets: function (e) { this.offset = { top: this.positionAbs.top - this.margins.top, left: this.positionAbs.left - this.margins.left, scroll: !1, parent: this._getParentOffset(), relative: this._getRelativeOffset() }, this.offset.click = { left: e.pageX - this.offset.left, top: e.pageY - this.offset.top } }, _mouseDrag: function (t, i) { if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t, !0), this.positionAbs = this._convertPositionTo("absolute"), !i) { var s = this._uiHash(); if (this._trigger("drag", t, s) === !1) return this._mouseUp({}), !1; this.position = s.position } return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1 }, _mouseStop: function (t) { var i = this, s = !1; return e.ui.ddmanager && !this.options.dropBehaviour && (s = e.ui.ddmanager.drop(this, t)), this.dropped && (s = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !s || "valid" === this.options.revert && s || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, s) ? e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () { i._trigger("stop", t) !== !1 && i._clear() }) : this._trigger("stop", t) !== !1 && this._clear(), !1 }, _mouseUp: function (t) { return this._unblockFrames(), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t), this.handleElement.is(t.target) && this.element.focus(), e.ui.mouse.prototype._mouseUp.call(this, t) }, cancel: function () { return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this }, _getHandle: function (t) { return this.options.handle ? !!e(t.target).closest(this.element.find(this.options.handle)).length : !0 }, _setHandleClassName: function () { this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this.handleElement.addClass("ui-draggable-handle") }, _removeHandleClassName: function () { this.handleElement.removeClass("ui-draggable-handle") }, _createHelper: function (t) { var i = this.options, s = e.isFunction(i.helper), n = s ? e(i.helper.apply(this.element[0], [t])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element; return n.parents("body").length || n.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo), s && n[0] === this.element[0] && this._setPositionRelative(), n[0] === this.element[0] || /(fixed|absolute)/.test(n.css("position")) || n.css("position", "absolute"), n }, _setPositionRelative: function () { /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative") }, _adjustOffsetFromHelper: function (t) { "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = { left: +t[0], top: +t[1] || 0 }), "left" in t && (this.offset.click.left = t.left + this.margins.left), "right" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top" in t && (this.offset.click.top = t.top + this.margins.top), "bottom" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top) }, _isRootNode: function (e) { return /(html|body)/i.test(e.tagName) || e === this.document[0] }, _getParentOffset: function () { var t = this.offsetParent.offset(), i = this.document[0]; return "absolute" === this.cssPosition && this.scrollParent[0] !== i && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (t = { top: 0, left: 0 }), { top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0), left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0) } }, _getRelativeOffset: function () { if ("relative" !== this.cssPosition) return { top: 0, left: 0 }; var e = this.element.position(), t = this._isRootNode(this.scrollParent[0]); return { top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + (t ? 0 : this.scrollParent.scrollTop()), left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + (t ? 0 : this.scrollParent.scrollLeft()) } }, _cacheMargins: function () { this.margins = { left: parseInt(this.element.css("marginLeft"), 10) || 0, top: parseInt(this.element.css("marginTop"), 10) || 0, right: parseInt(this.element.css("marginRight"), 10) || 0, bottom: parseInt(this.element.css("marginBottom"), 10) || 0 } }, _cacheHelperProportions: function () { this.helperProportions = { width: this.helper.outerWidth(), height: this.helper.outerHeight() } }, _setContainment: function () { var t, i, s, n = this.options, a = this.document[0]; return this.relativeContainer = null, n.containment ? "window" === n.containment ? (this.containment = [e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, e(window).scrollLeft() + e(window).width() - this.helperProportions.width - this.margins.left, e(window).scrollTop() + (e(window).height() || a.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === n.containment ? (this.containment = [0, 0, e(a).width() - this.helperProportions.width - this.margins.left, (e(a).height() || a.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : n.containment.constructor === Array ? (this.containment = n.containment, void 0) : ("parent" === n.containment && (n.containment = this.helper[0].parentNode), i = e(n.containment), s = i[0], s && (t = /(scroll|auto)/.test(i.css("overflow")), this.containment = [(parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0), (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0), (t ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(i.css("borderRightWidth"), 10) || 0) - (parseInt(i.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(i.css("borderBottomWidth"), 10) || 0) - (parseInt(i.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = i), void 0) : (this.containment = null, void 0) }, _convertPositionTo: function (e, t) { t || (t = this.position); var i = "absolute" === e ? 1 : -1, s = this._isRootNode(this.scrollParent[0]); return { top: t.top + this.offset.relative.top * i + this.offset.parent.top * i - ("fixed" === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i, left: t.left + this.offset.relative.left * i + this.offset.parent.left * i - ("fixed" === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i } }, _generatePosition: function (e, t) { var i, s, n, a, o = this.options, r = this._isRootNode(this.scrollParent[0]), h = e.pageX, l = e.pageY; return r && this.offset.scroll || (this.offset.scroll = { top: this.scrollParent.scrollTop(), left: this.scrollParent.scrollLeft() }), t && (this.containment && (this.relativeContainer ? (s = this.relativeContainer.offset(), i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]) : i = this.containment, e.pageX - this.offset.click.left < i[0] && (h = i[0] + this.offset.click.left), e.pageY - this.offset.click.top < i[1] && (l = i[1] + this.offset.click.top), e.pageX - this.offset.click.left > i[2] && (h = i[2] + this.offset.click.left), e.pageY - this.offset.click.top > i[3] && (l = i[3] + this.offset.click.top)), o.grid && (n = o.grid[1] ? this.originalPageY + Math.round((l - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY, l = i ? n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - o.grid[1] : n + o.grid[1] : n, a = o.grid[0] ? this.originalPageX + Math.round((h - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX, h = i ? a - this.offset.click.left >= i[0] || a - this.offset.click.left > i[2] ? a : a - this.offset.click.left >= i[0] ? a - o.grid[0] : a + o.grid[0] : a), "y" === o.axis && (h = this.originalPageX), "x" === o.axis && (l = this.originalPageY)), { top: l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top), left: h - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left) } }, _clear: function () { this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy() }, _normalizeRightBottom: function () { "y" !== this.options.axis && "auto" !== this.helper.css("right") && (this.helper.width(this.helper.width()), this.helper.css("right", "auto")), "x" !== this.options.axis && "auto" !== this.helper.css("bottom") && (this.helper.height(this.helper.height()), this.helper.css("bottom", "auto")) }, _trigger: function (t, i, s) { return s = s || this._uiHash(), e.ui.plugin.call(this, t, [i, s, this], !0), /^(drag|start|stop)/.test(t) && (this.positionAbs = this._convertPositionTo("absolute"), s.offset = this.positionAbs), e.Widget.prototype._trigger.call(this, t, i, s) }, plugins: {}, _uiHash: function () { return { helper: this.helper, position: this.position, originalPosition: this.originalPosition, offset: this.positionAbs } } }), e.ui.plugin.add("draggable", "connectToSortable", {
        start: function (t, i, s) { var n = e.extend({}, i, { item: s.element }); s.sortables = [], e(s.options.connectToSortable).each(function () { var i = e(this).sortable("instance"); i && !i.options.disabled && (s.sortables.push(i), i.refreshPositions(), i._trigger("activate", t, n)) }) }, stop: function (t, i, s) { var n = e.extend({}, i, { item: s.element }); s.cancelHelperRemoval = !1, e.each(s.sortables, function () { var e = this; e.isOver ? (e.isOver = 0, s.cancelHelperRemoval = !0, e.cancelHelperRemoval = !1, e._storedCSS = { position: e.placeholder.css("position"), top: e.placeholder.css("top"), left: e.placeholder.css("left") }, e._mouseStop(t), e.options.helper = e.options._helper) : (e.cancelHelperRemoval = !0, e._trigger("deactivate", t, n)) }) }, drag: function (t, i, s) {
            e.each(s.sortables, function () {
                var n = !1, a = this; a.positionAbs = s.positionAbs, a.helperProportions = s.helperProportions, a.offset.click = s.offset.click, a._intersectsWith(a.containerCache) && (n = !0, e.each(s.sortables, function () {
                    return this.positionAbs = s.positionAbs, this.helperProportions = s.helperProportions, this.offset.click = s.offset.click, this !== a && this._intersectsWith(this.containerCache) && e.contains(a.element[0], this.element[0]) && (n = !1), n
                })), n ? (a.isOver || (a.isOver = 1, s._parent = i.helper.parent(), a.currentItem = i.helper.appendTo(a.element).data("ui-sortable-item", !0), a.options._helper = a.options.helper, a.options.helper = function () { return i.helper[0] }, t.target = a.currentItem[0], a._mouseCapture(t, !0), a._mouseStart(t, !0, !0), a.offset.click.top = s.offset.click.top, a.offset.click.left = s.offset.click.left, a.offset.parent.left -= s.offset.parent.left - a.offset.parent.left, a.offset.parent.top -= s.offset.parent.top - a.offset.parent.top, s._trigger("toSortable", t), s.dropped = a.element, e.each(s.sortables, function () { this.refreshPositions() }), s.currentItem = s.element, a.fromOutside = s), a.currentItem && (a._mouseDrag(t), i.position = a.position)) : a.isOver && (a.isOver = 0, a.cancelHelperRemoval = !0, a.options._revert = a.options.revert, a.options.revert = !1, a._trigger("out", t, a._uiHash(a)), a._mouseStop(t, !0), a.options.revert = a.options._revert, a.options.helper = a.options._helper, a.placeholder && a.placeholder.remove(), i.helper.appendTo(s._parent), s._refreshOffsets(t), i.position = s._generatePosition(t, !0), s._trigger("fromSortable", t), s.dropped = !1, e.each(s.sortables, function () { this.refreshPositions() }))
            })
        }
    }), e.ui.plugin.add("draggable", "cursor", { start: function (t, i, s) { var n = e("body"), a = s.options; n.css("cursor") && (a._cursor = n.css("cursor")), n.css("cursor", a.cursor) }, stop: function (t, i, s) { var n = s.options; n._cursor && e("body").css("cursor", n._cursor) } }), e.ui.plugin.add("draggable", "opacity", { start: function (t, i, s) { var n = e(i.helper), a = s.options; n.css("opacity") && (a._opacity = n.css("opacity")), n.css("opacity", a.opacity) }, stop: function (t, i, s) { var n = s.options; n._opacity && e(i.helper).css("opacity", n._opacity) } }), e.ui.plugin.add("draggable", "scroll", { start: function (e, t, i) { i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)), i.scrollParentNotHidden[0] !== i.document[0] && "HTML" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset()) }, drag: function (t, i, s) { var n = s.options, a = !1, o = s.scrollParentNotHidden[0], r = s.document[0]; o !== r && "HTML" !== o.tagName ? (n.axis && "x" === n.axis || (s.overflowOffset.top + o.offsetHeight - t.pageY < n.scrollSensitivity ? o.scrollTop = a = o.scrollTop + n.scrollSpeed : t.pageY - s.overflowOffset.top < n.scrollSensitivity && (o.scrollTop = a = o.scrollTop - n.scrollSpeed)), n.axis && "y" === n.axis || (s.overflowOffset.left + o.offsetWidth - t.pageX < n.scrollSensitivity ? o.scrollLeft = a = o.scrollLeft + n.scrollSpeed : t.pageX - s.overflowOffset.left < n.scrollSensitivity && (o.scrollLeft = a = o.scrollLeft - n.scrollSpeed))) : (n.axis && "x" === n.axis || (t.pageY - e(r).scrollTop() < n.scrollSensitivity ? a = e(r).scrollTop(e(r).scrollTop() - n.scrollSpeed) : e(window).height() - (t.pageY - e(r).scrollTop()) < n.scrollSensitivity && (a = e(r).scrollTop(e(r).scrollTop() + n.scrollSpeed))), n.axis && "y" === n.axis || (t.pageX - e(r).scrollLeft() < n.scrollSensitivity ? a = e(r).scrollLeft(e(r).scrollLeft() - n.scrollSpeed) : e(window).width() - (t.pageX - e(r).scrollLeft()) < n.scrollSensitivity && (a = e(r).scrollLeft(e(r).scrollLeft() + n.scrollSpeed)))), a !== !1 && e.ui.ddmanager && !n.dropBehaviour && e.ui.ddmanager.prepareOffsets(s, t) } }), e.ui.plugin.add("draggable", "snap", { start: function (t, i, s) { var n = s.options; s.snapElements = [], e(n.snap.constructor !== String ? n.snap.items || ":data(ui-draggable)" : n.snap).each(function () { var t = e(this), i = t.offset(); this !== s.element[0] && s.snapElements.push({ item: this, width: t.outerWidth(), height: t.outerHeight(), top: i.top, left: i.left }) }) }, drag: function (t, i, s) { var n, a, o, r, h, l, u, c, d, p, f = s.options, m = f.snapTolerance, g = i.offset.left, v = g + s.helperProportions.width, _ = i.offset.top, b = _ + s.helperProportions.height; for (d = s.snapElements.length - 1; d >= 0; d--) h = s.snapElements[d].left - s.margins.left, l = h + s.snapElements[d].width, u = s.snapElements[d].top - s.margins.top, c = u + s.snapElements[d].height, h - m > v || g > l + m || u - m > b || _ > c + m || !e.contains(s.snapElements[d].item.ownerDocument, s.snapElements[d].item) ? (s.snapElements[d].snapping && s.options.snap.release && s.options.snap.release.call(s.element, t, e.extend(s._uiHash(), { snapItem: s.snapElements[d].item })), s.snapElements[d].snapping = !1) : ("inner" !== f.snapMode && (n = m >= Math.abs(u - b), a = m >= Math.abs(c - _), o = m >= Math.abs(h - v), r = m >= Math.abs(l - g), n && (i.position.top = s._convertPositionTo("relative", { top: u - s.helperProportions.height, left: 0 }).top), a && (i.position.top = s._convertPositionTo("relative", { top: c, left: 0 }).top), o && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h - s.helperProportions.width }).left), r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l }).left)), p = n || a || o || r, "outer" !== f.snapMode && (n = m >= Math.abs(u - _), a = m >= Math.abs(c - b), o = m >= Math.abs(h - g), r = m >= Math.abs(l - v), n && (i.position.top = s._convertPositionTo("relative", { top: u, left: 0 }).top), a && (i.position.top = s._convertPositionTo("relative", { top: c - s.helperProportions.height, left: 0 }).top), o && (i.position.left = s._convertPositionTo("relative", { top: 0, left: h }).left), r && (i.position.left = s._convertPositionTo("relative", { top: 0, left: l - s.helperProportions.width }).left)), !s.snapElements[d].snapping && (n || a || o || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, t, e.extend(s._uiHash(), { snapItem: s.snapElements[d].item })), s.snapElements[d].snapping = n || a || o || r || p) } }), e.ui.plugin.add("draggable", "stack", { start: function (t, i, s) { var n, a = s.options, o = e.makeArray(e(a.stack)).sort(function (t, i) { return (parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(i).css("zIndex"), 10) || 0) }); o.length && (n = parseInt(e(o[0]).css("zIndex"), 10) || 0, e(o).each(function (t) { e(this).css("zIndex", n + t) }), this.css("zIndex", n + o.length)) } }), e.ui.plugin.add("draggable", "zIndex", { start: function (t, i, s) { var n = e(i.helper), a = s.options; n.css("zIndex") && (a._zIndex = n.css("zIndex")), n.css("zIndex", a.zIndex) }, stop: function (t, i, s) { var n = s.options; n._zIndex && e(i.helper).css("zIndex", n._zIndex) } }), e.ui.draggable; var o = "ui-effects-", r = e; e.effects = { effect: {} }, function (e, t) { function i(e, t, i) { var s = c[t.type] || {}; return null == e ? i || !t.def ? null : t.def : (e = s.floor ? ~~e : parseFloat(e), isNaN(e) ? t.def : s.mod ? (e + s.mod) % s.mod : 0 > e ? 0 : e > s.max ? s.max : e) } function s(i) { var s = l(), n = s._rgba = []; return i = i.toLowerCase(), f(h, function (e, a) { var o, r = a.re.exec(i), h = r && a.parse(r), l = a.space || "rgba"; return h ? (o = s[l](h), s[u[l].cache] = o[u[l].cache], n = s._rgba = o._rgba, !1) : t }), n.length ? ("0,0,0,0" === n.join() && e.extend(n, a.transparent), s) : a[i] } function n(e, t, i) { return i = (i + 1) % 1, 1 > 6 * i ? e + 6 * (t - e) * i : 1 > 2 * i ? t : 2 > 3 * i ? e + 6 * (t - e) * (2 / 3 - i) : e } var a, o = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", r = /^([\-+])=\s*(\d+\.?\d*)/, h = [{ re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (e) { return [e[1], e[2], e[3], e[4]] } }, { re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, parse: function (e) { return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]] } }, { re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/, parse: function (e) { return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)] } }, { re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (e) { return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)] } }, { re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/, space: "hsla", parse: function (e) { return [e[1], e[2] / 100, e[3] / 100, e[4]] } }], l = e.Color = function (t, i, s, n) { return new e.Color.fn.parse(t, i, s, n) }, u = { rgba: { props: { red: { idx: 0, type: "byte" }, green: { idx: 1, type: "byte" }, blue: { idx: 2, type: "byte" } } }, hsla: { props: { hue: { idx: 0, type: "degrees" }, saturation: { idx: 1, type: "percent" }, lightness: { idx: 2, type: "percent" } } } }, c = { "byte": { floor: !0, max: 255 }, percent: { max: 1 }, degrees: { mod: 360, floor: !0 } }, d = l.support = {}, p = e("<p>")[0], f = e.each; p.style.cssText = "background-color:rgba(1,1,1,.5)", d.rgba = p.style.backgroundColor.indexOf("rgba") > -1, f(u, function (e, t) { t.cache = "_" + e, t.props.alpha = { idx: 3, type: "percent", def: 1 } }), l.fn = e.extend(l.prototype, { parse: function (n, o, r, h) { if (n === t) return this._rgba = [null, null, null, null], this; (n.jquery || n.nodeType) && (n = e(n).css(o), o = t); var c = this, d = e.type(n), p = this._rgba = []; return o !== t && (n = [n, o, r, h], d = "array"), "string" === d ? this.parse(s(n) || a._default) : "array" === d ? (f(u.rgba.props, function (e, t) { p[t.idx] = i(n[t.idx], t) }), this) : "object" === d ? (n instanceof l ? f(u, function (e, t) { n[t.cache] && (c[t.cache] = n[t.cache].slice()) }) : f(u, function (t, s) { var a = s.cache; f(s.props, function (e, t) { if (!c[a] && s.to) { if ("alpha" === e || null == n[e]) return; c[a] = s.to(c._rgba) } c[a][t.idx] = i(n[e], t, !0) }), c[a] && 0 > e.inArray(null, c[a].slice(0, 3)) && (c[a][3] = 1, s.from && (c._rgba = s.from(c[a]))) }), this) : t }, is: function (e) { var i = l(e), s = !0, n = this; return f(u, function (e, a) { var o, r = i[a.cache]; return r && (o = n[a.cache] || a.to && a.to(n._rgba) || [], f(a.props, function (e, i) { return null != r[i.idx] ? s = r[i.idx] === o[i.idx] : t })), s }), s }, _space: function () { var e = [], t = this; return f(u, function (i, s) { t[s.cache] && e.push(i) }), e.pop() }, transition: function (e, t) { var s = l(e), n = s._space(), a = u[n], o = 0 === this.alpha() ? l("transparent") : this, r = o[a.cache] || a.to(o._rgba), h = r.slice(); return s = s[a.cache], f(a.props, function (e, n) { var a = n.idx, o = r[a], l = s[a], u = c[n.type] || {}; null !== l && (null === o ? h[a] = l : (u.mod && (l - o > u.mod / 2 ? o += u.mod : o - l > u.mod / 2 && (o -= u.mod)), h[a] = i((l - o) * t + o, n))) }), this[n](h) }, blend: function (t) { if (1 === this._rgba[3]) return this; var i = this._rgba.slice(), s = i.pop(), n = l(t)._rgba; return l(e.map(i, function (e, t) { return (1 - s) * n[t] + s * e })) }, toRgbaString: function () { var t = "rgba(", i = e.map(this._rgba, function (e, t) { return null == e ? t > 2 ? 1 : 0 : e }); return 1 === i[3] && (i.pop(), t = "rgb("), t + i.join() + ")" }, toHslaString: function () { var t = "hsla(", i = e.map(this.hsla(), function (e, t) { return null == e && (e = t > 2 ? 1 : 0), t && 3 > t && (e = Math.round(100 * e) + "%"), e }); return 1 === i[3] && (i.pop(), t = "hsl("), t + i.join() + ")" }, toHexString: function (t) { var i = this._rgba.slice(), s = i.pop(); return t && i.push(~~(255 * s)), "#" + e.map(i, function (e) { return e = (e || 0).toString(16), 1 === e.length ? "0" + e : e }).join("") }, toString: function () { return 0 === this._rgba[3] ? "transparent" : this.toRgbaString() } }), l.fn.parse.prototype = l.fn, u.hsla.to = function (e) { if (null == e[0] || null == e[1] || null == e[2]) return [null, null, null, e[3]]; var t, i, s = e[0] / 255, n = e[1] / 255, a = e[2] / 255, o = e[3], r = Math.max(s, n, a), h = Math.min(s, n, a), l = r - h, u = r + h, c = .5 * u; return t = h === r ? 0 : s === r ? 60 * (n - a) / l + 360 : n === r ? 60 * (a - s) / l + 120 : 60 * (s - n) / l + 240, i = 0 === l ? 0 : .5 >= c ? l / u : l / (2 - u), [Math.round(t) % 360, i, c, null == o ? 1 : o] }, u.hsla.from = function (e) { if (null == e[0] || null == e[1] || null == e[2]) return [null, null, null, e[3]]; var t = e[0] / 360, i = e[1], s = e[2], a = e[3], o = .5 >= s ? s * (1 + i) : s + i - s * i, r = 2 * s - o; return [Math.round(255 * n(r, o, t + 1 / 3)), Math.round(255 * n(r, o, t)), Math.round(255 * n(r, o, t - 1 / 3)), a] }, f(u, function (s, n) { var a = n.props, o = n.cache, h = n.to, u = n.from; l.fn[s] = function (s) { if (h && !this[o] && (this[o] = h(this._rgba)), s === t) return this[o].slice(); var n, r = e.type(s), c = "array" === r || "object" === r ? s : arguments, d = this[o].slice(); return f(a, function (e, t) { var s = c["object" === r ? e : t.idx]; null == s && (s = d[t.idx]), d[t.idx] = i(s, t) }), u ? (n = l(u(d)), n[o] = d, n) : l(d) }, f(a, function (t, i) { l.fn[t] || (l.fn[t] = function (n) { var a, o = e.type(n), h = "alpha" === t ? this._hsla ? "hsla" : "rgba" : s, l = this[h](), u = l[i.idx]; return "undefined" === o ? u : ("function" === o && (n = n.call(this, u), o = e.type(n)), null == n && i.empty ? this : ("string" === o && (a = r.exec(n), a && (n = u + parseFloat(a[2]) * ("+" === a[1] ? 1 : -1))), l[i.idx] = n, this[h](l))) }) }) }), l.hook = function (t) { var i = t.split(" "); f(i, function (t, i) { e.cssHooks[i] = { set: function (t, n) { var a, o, r = ""; if ("transparent" !== n && ("string" !== e.type(n) || (a = s(n)))) { if (n = l(a || n), !d.rgba && 1 !== n._rgba[3]) { for (o = "backgroundColor" === i ? t.parentNode : t; ("" === r || "transparent" === r) && o && o.style;) try { r = e.css(o, "backgroundColor"), o = o.parentNode } catch (h) { } n = n.blend(r && "transparent" !== r ? r : "_default") } n = n.toRgbaString() } try { t.style[i] = n } catch (h) { } } }, e.fx.step[i] = function (t) { t.colorInit || (t.start = l(t.elem, i), t.end = l(t.end), t.colorInit = !0), e.cssHooks[i].set(t.elem, t.start.transition(t.end, t.pos)) } }) }, l.hook(o), e.cssHooks.borderColor = { expand: function (e) { var t = {}; return f(["Top", "Right", "Bottom", "Left"], function (i, s) { t["border" + s + "Color"] = e }), t } }, a = e.Color.names = { aqua: "#00ffff", black: "#000000", blue: "#0000ff", fuchsia: "#ff00ff", gray: "#808080", green: "#008000", lime: "#00ff00", maroon: "#800000", navy: "#000080", olive: "#808000", purple: "#800080", red: "#ff0000", silver: "#c0c0c0", teal: "#008080", white: "#ffffff", yellow: "#ffff00", transparent: [null, null, null, 0], _default: "#ffffff" } }(r), function () { function t(t) { var i, s, n = t.ownerDocument.defaultView ? t.ownerDocument.defaultView.getComputedStyle(t, null) : t.currentStyle, a = {}; if (n && n.length && n[0] && n[n[0]]) for (s = n.length; s--;) i = n[s], "string" == typeof n[i] && (a[e.camelCase(i)] = n[i]); else for (i in n) "string" == typeof n[i] && (a[i] = n[i]); return a } function i(t, i) { var s, a, o = {}; for (s in i) a = i[s], t[s] !== a && (n[s] || (e.fx.step[s] || !isNaN(parseFloat(a))) && (o[s] = a)); return o } var s = ["add", "remove", "toggle"], n = { border: 1, borderBottom: 1, borderColor: 1, borderLeft: 1, borderRight: 1, borderTop: 1, borderWidth: 1, margin: 1, padding: 1 }; e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (t, i) { e.fx.step[i] = function (e) { ("none" !== e.end && !e.setAttr || 1 === e.pos && !e.setAttr) && (r.style(e.elem, i, e.end), e.setAttr = !0) } }), e.fn.addBack || (e.fn.addBack = function (e) { return this.add(null == e ? this.prevObject : this.prevObject.filter(e)) }), e.effects.animateClass = function (n, a, o, r) { var h = e.speed(a, o, r); return this.queue(function () { var a, o = e(this), r = o.attr("class") || "", l = h.children ? o.find("*").addBack() : o; l = l.map(function () { var i = e(this); return { el: i, start: t(this) } }), a = function () { e.each(s, function (e, t) { n[t] && o[t + "Class"](n[t]) }) }, a(), l = l.map(function () { return this.end = t(this.el[0]), this.diff = i(this.start, this.end), this }), o.attr("class", r), l = l.map(function () { var t = this, i = e.Deferred(), s = e.extend({}, h, { queue: !1, complete: function () { i.resolve(t) } }); return this.el.animate(this.diff, s), i.promise() }), e.when.apply(e, l.get()).done(function () { a(), e.each(arguments, function () { var t = this.el; e.each(this.diff, function (e) { t.css(e, "") }) }), h.complete.call(o[0]) }) }) }, e.fn.extend({ addClass: function (t) { return function (i, s, n, a) { return s ? e.effects.animateClass.call(this, { add: i }, s, n, a) : t.apply(this, arguments) } }(e.fn.addClass), removeClass: function (t) { return function (i, s, n, a) { return arguments.length > 1 ? e.effects.animateClass.call(this, { remove: i }, s, n, a) : t.apply(this, arguments) } }(e.fn.removeClass), toggleClass: function (t) { return function (i, s, n, a, o) { return "boolean" == typeof s || void 0 === s ? n ? e.effects.animateClass.call(this, s ? { add: i } : { remove: i }, n, a, o) : t.apply(this, arguments) : e.effects.animateClass.call(this, { toggle: i }, s, n, a) } }(e.fn.toggleClass), switchClass: function (t, i, s, n, a) { return e.effects.animateClass.call(this, { add: i, remove: t }, s, n, a) } }) }(), function () { function t(t, i, s, n) { return e.isPlainObject(t) && (i = t, t = t.effect), t = { effect: t }, null == i && (i = {}), e.isFunction(i) && (n = i, s = null, i = {}), ("number" == typeof i || e.fx.speeds[i]) && (n = s, s = i, i = {}), e.isFunction(s) && (n = s, s = null), i && e.extend(t, i), s = s || i.duration, t.duration = e.fx.off ? 0 : "number" == typeof s ? s : s in e.fx.speeds ? e.fx.speeds[s] : e.fx.speeds._default, t.complete = n || i.complete, t } function i(t) { return !t || "number" == typeof t || e.fx.speeds[t] ? !0 : "string" != typeof t || e.effects.effect[t] ? e.isFunction(t) ? !0 : "object" != typeof t || t.effect ? !1 : !0 : !0 } e.extend(e.effects, { version: "1.11.4", save: function (e, t) { for (var i = 0; t.length > i; i++) null !== t[i] && e.data(o + t[i], e[0].style[t[i]]) }, restore: function (e, t) { var i, s; for (s = 0; t.length > s; s++) null !== t[s] && (i = e.data(o + t[s]), void 0 === i && (i = ""), e.css(t[s], i)) }, setMode: function (e, t) { return "toggle" === t && (t = e.is(":hidden") ? "show" : "hide"), t }, getBaseline: function (e, t) { var i, s; switch (e[0]) { case "top": i = 0; break; case "middle": i = .5; break; case "bottom": i = 1; break; default: i = e[0] / t.height } switch (e[1]) { case "left": s = 0; break; case "center": s = .5; break; case "right": s = 1; break; default: s = e[1] / t.width } return { x: s, y: i } }, createWrapper: function (t) { if (t.parent().is(".ui-effects-wrapper")) return t.parent(); var i = { width: t.outerWidth(!0), height: t.outerHeight(!0), "float": t.css("float") }, s = e("<div></div>").addClass("ui-effects-wrapper").css({ fontSize: "100%", background: "transparent", border: "none", margin: 0, padding: 0 }), n = { width: t.width(), height: t.height() }, a = document.activeElement; try { a.id } catch (o) { a = document.body } return t.wrap(s), (t[0] === a || e.contains(t[0], a)) && e(a).focus(), s = t.parent(), "static" === t.css("position") ? (s.css({ position: "relative" }), t.css({ position: "relative" })) : (e.extend(i, { position: t.css("position"), zIndex: t.css("z-index") }), e.each(["top", "left", "bottom", "right"], function (e, s) { i[s] = t.css(s), isNaN(parseInt(i[s], 10)) && (i[s] = "auto") }), t.css({ position: "relative", top: 0, left: 0, right: "auto", bottom: "auto" })), t.css(n), s.css(i).show() }, removeWrapper: function (t) { var i = document.activeElement; return t.parent().is(".ui-effects-wrapper") && (t.parent().replaceWith(t), (t[0] === i || e.contains(t[0], i)) && e(i).focus()), t }, setTransition: function (t, i, s, n) { return n = n || {}, e.each(i, function (e, i) { var a = t.cssUnit(i); a[0] > 0 && (n[i] = a[0] * s + a[1]) }), n } }), e.fn.extend({ effect: function () { function i(t) { function i() { e.isFunction(a) && a.call(n[0]), e.isFunction(t) && t() } var n = e(this), a = s.complete, r = s.mode; (n.is(":hidden") ? "hide" === r : "show" === r) ? (n[r](), i()) : o.call(n[0], s, i) } var s = t.apply(this, arguments), n = s.mode, a = s.queue, o = e.effects.effect[s.effect]; return e.fx.off || !o ? n ? this[n](s.duration, s.complete) : this.each(function () { s.complete && s.complete.call(this) }) : a === !1 ? this.each(i) : this.queue(a || "fx", i) }, show: function (e) { return function (s) { if (i(s)) return e.apply(this, arguments); var n = t.apply(this, arguments); return n.mode = "show", this.effect.call(this, n) } }(e.fn.show), hide: function (e) { return function (s) { if (i(s)) return e.apply(this, arguments); var n = t.apply(this, arguments); return n.mode = "hide", this.effect.call(this, n) } }(e.fn.hide), toggle: function (e) { return function (s) { if (i(s) || "boolean" == typeof s) return e.apply(this, arguments); var n = t.apply(this, arguments); return n.mode = "toggle", this.effect.call(this, n) } }(e.fn.toggle), cssUnit: function (t) { var i = this.css(t), s = []; return e.each(["em", "px", "%", "pt"], function (e, t) { i.indexOf(t) > 0 && (s = [parseFloat(i), t]) }), s } }) }(), function () { var t = {}; e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (e, i) { t[i] = function (t) { return Math.pow(t, e + 2) } }), e.extend(t, { Sine: function (e) { return 1 - Math.cos(e * Math.PI / 2) }, Circ: function (e) { return 1 - Math.sqrt(1 - e * e) }, Elastic: function (e) { return 0 === e || 1 === e ? e : -Math.pow(2, 8 * (e - 1)) * Math.sin((80 * (e - 1) - 7.5) * Math.PI / 15) }, Back: function (e) { return e * e * (3 * e - 2) }, Bounce: function (e) { for (var t, i = 4; ((t = Math.pow(2, --i)) - 1) / 11 > e;); return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2) } }), e.each(t, function (t, i) { e.easing["easeIn" + t] = i, e.easing["easeOut" + t] = function (e) { return 1 - i(1 - e) }, e.easing["easeInOut" + t] = function (e) { return .5 > e ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2 } }) }(), e.effects, e.effects.effect.pulsate = function (t, i) { var s, n = e(this), a = e.effects.setMode(n, t.mode || "show"), o = "show" === a, r = "hide" === a, h = o || "hide" === a, l = 2 * (t.times || 5) + (h ? 1 : 0), u = t.duration / l, c = 0, d = n.queue(), p = d.length; for ((o || !n.is(":visible")) && (n.css("opacity", 0).show(), c = 1), s = 1; l > s; s++) n.animate({ opacity: c }, u, t.easing), c = 1 - c; n.animate({ opacity: c }, u, t.easing), n.queue(function () { r && n.hide(), i() }), p > 1 && d.splice.apply(d, [1, 0].concat(d.splice(p, l + 1))), n.dequeue() }
});;
/*!
 * ASP.NET SignalR JavaScript Library v2.2.0
 * http://signalr.net/
 *
 * Copyright (C) Microsoft Corporation. All rights reserved.
 *
 */
(function(n,t,i){function w(t,i){var u,f;if(n.isArray(t)){for(u=t.length-1;u>=0;u--)f=t[u],n.type(f)==="string"&&r.transports[f]||(i.log("Invalid transport: "+f+", removing it from the transports list."),t.splice(u,1));t.length===0&&(i.log("No transports remain within the specified transport array."),t=null)}else if(r.transports[t]||t==="auto"){if(t==="auto"&&r._.ieVersion<=8)return["longPolling"]}else i.log("Invalid transport: "+t.toString()+"."),t=null;return t}function b(n){return n==="http:"?80:n==="https:"?443:void 0}function a(n,t){return t.match(/:\d+$/)?t:t+":"+b(n)}function k(t,i){var u=this,r=[];u.tryBuffer=function(i){return t.state===n.signalR.connectionState.connecting?(r.push(i),!0):!1};u.drain=function(){if(t.state===n.signalR.connectionState.connected)while(r.length>0)i(r.shift())};u.clear=function(){r=[]}}var f={nojQuery:"jQuery was not found. Please ensure jQuery is referenced before the SignalR client JavaScript file.",noTransportOnInit:"No transport could be initialized successfully. Try specifying a different transport or none at all for auto initialization.",errorOnNegotiate:"Error during negotiation request.",stoppedWhileLoading:"The connection was stopped during page load.",stoppedWhileNegotiating:"The connection was stopped during the negotiate request.",errorParsingNegotiateResponse:"Error parsing negotiate response.",errorDuringStartRequest:"Error during start request. Stopping the connection.",stoppedDuringStartRequest:"The connection was stopped during the start request.",errorParsingStartResponse:"Error parsing start response: '{0}'. Stopping the connection.",invalidStartResponse:"Invalid start response: '{0}'. Stopping the connection.",protocolIncompatible:"You are using a version of the client that isn't compatible with the server. Client version {0}, server version {1}.",sendFailed:"Send failed.",parseFailed:"Failed at parsing response: {0}",longPollFailed:"Long polling request failed.",eventSourceFailedToConnect:"EventSource failed to connect.",eventSourceError:"Error raised by EventSource",webSocketClosed:"WebSocket closed.",pingServerFailedInvalidResponse:"Invalid ping response when pinging server: '{0}'.",pingServerFailed:"Failed to ping server.",pingServerFailedStatusCode:"Failed to ping server.  Server responded with status code {0}, stopping the connection.",pingServerFailedParse:"Failed to parse ping server response, stopping the connection.",noConnectionTransport:"Connection is in an invalid state, there is no transport active.",webSocketsInvalidState:"The Web Socket transport is in an invalid state, transitioning into reconnecting.",reconnectTimeout:"Couldn't reconnect within the configured timeout of {0} ms, disconnecting.",reconnectWindowTimeout:"The client has been inactive since {0} and it has exceeded the inactivity timeout of {1} ms. Stopping the connection."};if(typeof n!="function")throw new Error(f.nojQuery);var r,h,s=t.document.readyState==="complete",e=n(t),c="__Negotiate Aborted__",u={onStart:"onStart",onStarting:"onStarting",onReceived:"onReceived",onError:"onError",onConnectionSlow:"onConnectionSlow",onReconnecting:"onReconnecting",onReconnect:"onReconnect",onStateChanged:"onStateChanged",onDisconnect:"onDisconnect"},v=function(n,i){if(i!==!1){var r;typeof t.console!="undefined"&&(r="["+(new Date).toTimeString()+"] SignalR: "+n,t.console.debug?t.console.debug(r):t.console.log&&t.console.log(r))}},o=function(t,i,r){return i===t.state?(t.state=r,n(t).triggerHandler(u.onStateChanged,[{oldState:i,newState:r}]),!0):!1},y=function(n){return n.state===r.connectionState.disconnected},l=function(n){return n._.keepAliveData.activated&&n.transport.supportsKeepAlive(n)},p=function(i){var f,e;i._.configuredStopReconnectingTimeout||(e=function(t){var i=r._.format(r.resources.reconnectTimeout,t.disconnectTimeout);t.log(i);n(t).triggerHandler(u.onError,[r._.error(i,"TimeoutException")]);t.stop(!1,!1)},i.reconnecting(function(){var n=this;n.state===r.connectionState.reconnecting&&(f=t.setTimeout(function(){e(n)},n.disconnectTimeout))}),i.stateChanged(function(n){n.oldState===r.connectionState.reconnecting&&t.clearTimeout(f)}),i._.configuredStopReconnectingTimeout=!0)};r=function(n,t,i){return new r.fn.init(n,t,i)};r._={defaultContentType:"application/x-www-form-urlencoded; charset=UTF-8",ieVersion:function(){var i,n;return t.navigator.appName==="Microsoft Internet Explorer"&&(n=/MSIE ([0-9]+\.[0-9]+)/.exec(t.navigator.userAgent),n&&(i=t.parseFloat(n[1]))),i}(),error:function(n,t,i){var r=new Error(n);return r.source=t,typeof i!="undefined"&&(r.context=i),r},transportError:function(n,t,r,u){var f=this.error(n,r,u);return f.transport=t?t.name:i,f},format:function(){for(var t=arguments[0],n=0;n<arguments.length-1;n++)t=t.replace("{"+n+"}",arguments[n+1]);return t},firefoxMajorVersion:function(n){var t=n.match(/Firefox\/(\d+)/);return!t||!t.length||t.length<2?0:parseInt(t[1],10)},configurePingInterval:function(i){var f=i._.config,e=function(t){n(i).triggerHandler(u.onError,[t])};f&&!i._.pingIntervalId&&f.pingInterval&&(i._.pingIntervalId=t.setInterval(function(){r.transports._logic.pingServer(i).fail(e)},f.pingInterval))}};r.events=u;r.resources=f;r.ajaxDefaults={processData:!0,timeout:null,async:!0,global:!1,cache:!1};r.changeState=o;r.isDisconnecting=y;r.connectionState={connecting:0,connected:1,reconnecting:2,disconnected:4};r.hub={start:function(){throw new Error("SignalR: Error loading hubs. Ensure your hubs reference is correct, e.g. <script src='/signalr/js'><\/script>.");}};e.load(function(){s=!0});r.fn=r.prototype={init:function(t,i,r){var f=n(this);this.url=t;this.qs=i;this.lastError=null;this._={keepAliveData:{},connectingMessageBuffer:new k(this,function(n){f.triggerHandler(u.onReceived,[n])}),lastMessageAt:(new Date).getTime(),lastActiveAt:(new Date).getTime(),beatInterval:5e3,beatHandle:null,totalTransportConnectTimeout:0};typeof r=="boolean"&&(this.logging=r)},_parseResponse:function(n){var t=this;return n?typeof n=="string"?t.json.parse(n):n:n},_originalJson:t.JSON,json:t.JSON,isCrossDomain:function(i,r){var u;return(i=n.trim(i),r=r||t.location,i.indexOf("http")!==0)?!1:(u=t.document.createElement("a"),u.href=i,u.protocol+a(u.protocol,u.host)!==r.protocol+a(r.protocol,r.host))},ajaxDataType:"text",contentType:"application/json; charset=UTF-8",logging:!1,state:r.connectionState.disconnected,clientProtocol:"1.5",reconnectDelay:2e3,transportConnectTimeout:0,disconnectTimeout:3e4,reconnectWindow:3e4,keepAliveWarnAt:2/3,start:function(i,h){var a=this,v={pingInterval:3e5,waitForPageLoad:!0,transport:"auto",jsonp:!1},d,y=a._deferral||n.Deferred(),b=t.document.createElement("a"),k,g;if(a.lastError=null,a._deferral=y,!a.json)throw new Error("SignalR: No JSON parser found. Please ensure json2.js is referenced before the SignalR.js file if you need to support clients without native JSON parsing support, e.g. IE<8.");if(n.type(i)==="function"?h=i:n.type(i)==="object"&&(n.extend(v,i),n.type(v.callback)==="function"&&(h=v.callback)),v.transport=w(v.transport,a),!v.transport)throw new Error("SignalR: Invalid transport(s) specified, aborting start.");return(a._.config=v,!s&&v.waitForPageLoad===!0)?(a._.deferredStartHandler=function(){a.start(i,h)},e.bind("load",a._.deferredStartHandler),y.promise()):a.state===r.connectionState.connecting?y.promise():o(a,r.connectionState.disconnected,r.connectionState.connecting)===!1?(y.resolve(a),y.promise()):(p(a),b.href=a.url,b.protocol&&b.protocol!==":"?(a.protocol=b.protocol,a.host=b.host):(a.protocol=t.document.location.protocol,a.host=b.host||t.document.location.host),a.baseUrl=a.protocol+"//"+a.host,a.wsProtocol=a.protocol==="https:"?"wss://":"ws://",v.transport==="auto"&&v.jsonp===!0&&(v.transport="longPolling"),a.url.indexOf("//")===0&&(a.url=t.location.protocol+a.url,a.log("Protocol relative URL detected, normalizing it to '"+a.url+"'.")),this.isCrossDomain(a.url)&&(a.log("Auto detected cross domain url."),v.transport==="auto"&&(v.transport=["webSockets","serverSentEvents","longPolling"]),typeof v.withCredentials=="undefined"&&(v.withCredentials=!0),v.jsonp||(v.jsonp=!n.support.cors,v.jsonp&&a.log("Using jsonp because this browser doesn't support CORS.")),a.contentType=r._.defaultContentType),a.withCredentials=v.withCredentials,a.ajaxDataType=v.jsonp?"jsonp":"text",n(a).bind(u.onStart,function(){n.type(h)==="function"&&h.call(a);y.resolve(a)}),a._.initHandler=r.transports._logic.initHandler(a),d=function(i,s){var c=r._.error(f.noTransportOnInit);if(s=s||0,s>=i.length){s===0?a.log("No transports supported by the server were selected."):s===1?a.log("No fallback transports were selected."):a.log("Fallback transports exhausted.");n(a).triggerHandler(u.onError,[c]);y.reject(c);a.stop();return}if(a.state!==r.connectionState.disconnected){var p=i[s],h=r.transports[p],v=function(){d(i,s+1)};a.transport=h;try{a._.initHandler.start(h,function(){var i=r._.firefoxMajorVersion(t.navigator.userAgent)>=11,f=!!a.withCredentials&&i;a.log("The start request succeeded. Transitioning to the connected state.");l(a)&&r.transports._logic.monitorKeepAlive(a);r.transports._logic.startHeartbeat(a);r._.configurePingInterval(a);o(a,r.connectionState.connecting,r.connectionState.connected)||a.log("WARNING! The connection was not in the connecting state.");a._.connectingMessageBuffer.drain();n(a).triggerHandler(u.onStart);e.bind("unload",function(){a.log("Window unloading, stopping the connection.");a.stop(f)});i&&e.bind("beforeunload",function(){})},v)}catch(w){a.log(h.name+" transport threw '"+w.message+"' when attempting to start.");v()}}},k=a.url+"/negotiate",g=function(t,i){var e=r._.error(f.errorOnNegotiate,t,i._.negotiateRequest);n(i).triggerHandler(u.onError,e);y.reject(e);i.stop()},n(a).triggerHandler(u.onStarting),k=r.transports._logic.prepareQueryString(a,k),a.log("Negotiating with '"+k+"'."),a._.negotiateRequest=r.transports._logic.ajax(a,{url:k,error:function(n,t){t!==c?g(n,a):y.reject(r._.error(f.stoppedWhileNegotiating,null,a._.negotiateRequest))},success:function(t){var i,e,h,o=[],s=[];try{i=a._parseResponse(t)}catch(c){g(r._.error(f.errorParsingNegotiateResponse,c),a);return}if(e=a._.keepAliveData,a.appRelativeUrl=i.Url,a.id=i.ConnectionId,a.token=i.ConnectionToken,a.webSocketServerUrl=i.WebSocketServerUrl,a._.pollTimeout=i.ConnectionTimeout*1e3+1e4,a.disconnectTimeout=i.DisconnectTimeout*1e3,a._.totalTransportConnectTimeout=a.transportConnectTimeout+i.TransportConnectTimeout*1e3,i.KeepAliveTimeout?(e.activated=!0,e.timeout=i.KeepAliveTimeout*1e3,e.timeoutWarning=e.timeout*a.keepAliveWarnAt,a._.beatInterval=(e.timeout-e.timeoutWarning)/3):e.activated=!1,a.reconnectWindow=a.disconnectTimeout+(e.timeout||0),!i.ProtocolVersion||i.ProtocolVersion!==a.clientProtocol){h=r._.error(r._.format(f.protocolIncompatible,a.clientProtocol,i.ProtocolVersion));n(a).triggerHandler(u.onError,[h]);y.reject(h);return}n.each(r.transports,function(n){if(n.indexOf("_")===0||n==="webSockets"&&!i.TryWebSockets)return!0;s.push(n)});n.isArray(v.transport)?n.each(v.transport,function(t,i){n.inArray(i,s)>=0&&o.push(i)}):v.transport==="auto"?o=s:n.inArray(v.transport,s)>=0&&o.push(v.transport);d(o)}}),y.promise())},starting:function(t){var i=this;return n(i).bind(u.onStarting,function(){t.call(i)}),i},send:function(n){var t=this;if(t.state===r.connectionState.disconnected)throw new Error("SignalR: Connection must be started before data can be sent. Call .start() before .send()");if(t.state===r.connectionState.connecting)throw new Error("SignalR: Connection has not been fully initialized. Use .start().done() or .start().fail() to run logic after the connection has started.");return t.transport.send(t,n),t},received:function(t){var i=this;return n(i).bind(u.onReceived,function(n,r){t.call(i,r)}),i},stateChanged:function(t){var i=this;return n(i).bind(u.onStateChanged,function(n,r){t.call(i,r)}),i},error:function(t){var i=this;return n(i).bind(u.onError,function(n,r,u){i.lastError=r;t.call(i,r,u)}),i},disconnected:function(t){var i=this;return n(i).bind(u.onDisconnect,function(){t.call(i)}),i},connectionSlow:function(t){var i=this;return n(i).bind(u.onConnectionSlow,function(){t.call(i)}),i},reconnecting:function(t){var i=this;return n(i).bind(u.onReconnecting,function(){t.call(i)}),i},reconnected:function(t){var i=this;return n(i).bind(u.onReconnect,function(){t.call(i)}),i},stop:function(i,h){var a=this,v=a._deferral;if(a._.deferredStartHandler&&e.unbind("load",a._.deferredStartHandler),delete a._.config,delete a._.deferredStartHandler,!s&&(!a._.config||a._.config.waitForPageLoad===!0)){a.log("Stopping connection prior to negotiate.");v&&v.reject(r._.error(f.stoppedWhileLoading));return}if(a.state!==r.connectionState.disconnected)return a.log("Stopping connection."),o(a,a.state,r.connectionState.disconnected),t.clearTimeout(a._.beatHandle),t.clearInterval(a._.pingIntervalId),a.transport&&(a.transport.stop(a),h!==!1&&a.transport.abort(a,i),l(a)&&r.transports._logic.stopMonitoringKeepAlive(a),a.transport=null),a._.negotiateRequest&&(a._.negotiateRequest.abort(c),delete a._.negotiateRequest),a._.initHandler&&a._.initHandler.stop(),n(a).triggerHandler(u.onDisconnect),delete a._deferral,delete a.messageId,delete a.groupsToken,delete a.id,delete a._.pingIntervalId,delete a._.lastMessageAt,delete a._.lastActiveAt,a._.connectingMessageBuffer.clear(),a},log:function(n){v(n,this.logging)}};r.fn.init.prototype=r.fn;r.noConflict=function(){return n.connection===r&&(n.connection=h),r};n.connection&&(h=n.connection);n.connection=n.signalR=r})(window.jQuery,window),function(n,t,i){function s(n){n._.keepAliveData.monitoring&&l(n);u.markActive(n)&&(n._.beatHandle=t.setTimeout(function(){s(n)},n._.beatInterval))}function l(t){var i=t._.keepAliveData,u;t.state===r.connectionState.connected&&(u=(new Date).getTime()-t._.lastMessageAt,u>=i.timeout?(t.log("Keep alive timed out.  Notifying transport that connection has been lost."),t.transport.lostConnection(t)):u>=i.timeoutWarning?i.userNotified||(t.log("Keep alive has been missed, connection may be dead/slow."),n(t).triggerHandler(f.onConnectionSlow),i.userNotified=!0):i.userNotified=!1)}function e(n,t){var i=n.url+t;return n.transport&&(i+="?transport="+n.transport.name),u.prepareQueryString(n,i)}function h(n){this.connection=n;this.startRequested=!1;this.startCompleted=!1;this.connectionStopped=!1}var r=n.signalR,f=n.signalR.events,c=n.signalR.changeState,o="__Start Aborted__",u;r.transports={};h.prototype={start:function(n,r,u){var f=this,e=f.connection,o=!1;if(f.startRequested||f.connectionStopped){e.log("WARNING! "+n.name+" transport cannot be started. Initialization ongoing or completed.");return}e.log(n.name+" transport starting.");f.transportTimeoutHandle=t.setTimeout(function(){o||(o=!0,e.log(n.name+" transport timed out when trying to connect."),f.transportFailed(n,i,u))},e._.totalTransportConnectTimeout);n.start(e,function(){o||f.initReceived(n,r)},function(t){return o||(o=!0,f.transportFailed(n,t,u)),!f.startCompleted||f.connectionStopped})},stop:function(){this.connectionStopped=!0;t.clearTimeout(this.transportTimeoutHandle);r.transports._logic.tryAbortStartRequest(this.connection)},initReceived:function(n,i){var u=this,f=u.connection;if(u.startRequested){f.log("WARNING! The client received multiple init messages.");return}u.connectionStopped||(u.startRequested=!0,t.clearTimeout(u.transportTimeoutHandle),f.log(n.name+" transport connected. Initiating start request."),r.transports._logic.ajaxStart(f,function(){u.startCompleted=!0;i()}))},transportFailed:function(i,u,e){var o=this.connection,h=o._deferral,s;this.connectionStopped||(t.clearTimeout(this.transportTimeoutHandle),this.startRequested?this.startCompleted||(s=r._.error(r.resources.errorDuringStartRequest,u),o.log(i.name+" transport failed during the start request. Stopping the connection."),n(o).triggerHandler(f.onError,[s]),h&&h.reject(s),o.stop()):(i.stop(o),o.log(i.name+" transport failed to connect. Attempting to fall back."),e()))}};u=r.transports._logic={ajax:function(t,i){return n.ajax(n.extend(!0,{},n.signalR.ajaxDefaults,{type:"GET",data:{},xhrFields:{withCredentials:t.withCredentials},contentType:t.contentType,dataType:t.ajaxDataType},i))},pingServer:function(t){var e,f,i=n.Deferred();return t.transport?(e=t.url+"/ping",e=u.addQs(e,t.qs),f=u.ajax(t,{url:e,success:function(n){var u;try{u=t._parseResponse(n)}catch(e){i.reject(r._.transportError(r.resources.pingServerFailedParse,t.transport,e,f));t.stop();return}u.Response==="pong"?i.resolve():i.reject(r._.transportError(r._.format(r.resources.pingServerFailedInvalidResponse,n),t.transport,null,f))},error:function(n){n.status===401||n.status===403?(i.reject(r._.transportError(r._.format(r.resources.pingServerFailedStatusCode,n.status),t.transport,n,f)),t.stop()):i.reject(r._.transportError(r.resources.pingServerFailed,t.transport,n,f))}})):i.reject(r._.transportError(r.resources.noConnectionTransport,t.transport)),i.promise()},prepareQueryString:function(n,i){var r;return r=u.addQs(i,"clientProtocol="+n.clientProtocol),r=u.addQs(r,n.qs),n.token&&(r+="&connectionToken="+t.encodeURIComponent(n.token)),n.data&&(r+="&connectionData="+t.encodeURIComponent(n.data)),r},addQs:function(t,i){var r=t.indexOf("?")!==-1?"&":"?",u;if(!i)return t;if(typeof i=="object")return t+r+n.param(i);if(typeof i=="string")return u=i.charAt(0),(u==="?"||u==="&")&&(r=""),t+r+i;throw new Error("Query string property must be either a string or object.");},getUrl:function(n,i,r,f,e){var h=i==="webSockets"?"":n.baseUrl,o=h+n.appRelativeUrl,s="transport="+i;return!e&&n.groupsToken&&(s+="&groupsToken="+t.encodeURIComponent(n.groupsToken)),r?(o+=f?"/poll":"/reconnect",!e&&n.messageId&&(s+="&messageId="+t.encodeURIComponent(n.messageId))):o+="/connect",o+="?"+s,o=u.prepareQueryString(n,o),e||(o+="&tid="+Math.floor(Math.random()*11)),o},maximizePersistentResponse:function(n){return{MessageId:n.C,Messages:n.M,Initialized:typeof n.S!="undefined"?!0:!1,ShouldReconnect:typeof n.T!="undefined"?!0:!1,LongPollDelay:n.L,GroupsToken:n.G}},updateGroups:function(n,t){t&&(n.groupsToken=t)},stringifySend:function(n,t){return typeof t=="string"||typeof t=="undefined"||t===null?t:n.json.stringify(t)},ajaxSend:function(t,i){var h=u.stringifySend(t,i),c=e(t,"/send"),o,s=function(t,u){n(u).triggerHandler(f.onError,[r._.transportError(r.resources.sendFailed,u.transport,t,o),i])};return o=u.ajax(t,{url:c,type:t.ajaxDataType==="jsonp"?"GET":"POST",contentType:r._.defaultContentType,data:{data:h},success:function(n){var i;if(n){try{i=t._parseResponse(n)}catch(r){s(r,t);t.stop();return}u.triggerReceived(t,i)}},error:function(n,i){i!=="abort"&&i!=="parsererror"&&s(n,t)}})},ajaxAbort:function(n,t){if(typeof n.transport!="undefined"){t=typeof t=="undefined"?!0:t;var i=e(n,"/abort");u.ajax(n,{url:i,async:t,timeout:1e3,type:"POST"});n.log("Fired ajax abort async = "+t+".")}},ajaxStart:function(t,i){var h=function(n){var i=t._deferral;i&&i.reject(n)},s=function(i){t.log("The start request failed. Stopping the connection.");n(t).triggerHandler(f.onError,[i]);h(i);t.stop()};t._.startRequest=u.ajax(t,{url:e(t,"/start"),success:function(n,u,f){var e;try{e=t._parseResponse(n)}catch(o){s(r._.error(r._.format(r.resources.errorParsingStartResponse,n),o,f));return}e.Response==="started"?i():s(r._.error(r._.format(r.resources.invalidStartResponse,n),null,f))},error:function(n,i,u){i!==o?s(r._.error(r.resources.errorDuringStartRequest,u,n)):(t.log("The start request aborted because connection.stop() was called."),h(r._.error(r.resources.stoppedDuringStartRequest,null,n)))}})},tryAbortStartRequest:function(n){n._.startRequest&&(n._.startRequest.abort(o),delete n._.startRequest)},tryInitialize:function(n,t){n.Initialized&&t()},triggerReceived:function(t,i){t._.connectingMessageBuffer.tryBuffer(i)||n(t).triggerHandler(f.onReceived,[i])},processMessages:function(t,i,r){var f;u.markLastMessage(t);i&&(f=u.maximizePersistentResponse(i),u.updateGroups(t,f.GroupsToken),f.MessageId&&(t.messageId=f.MessageId),f.Messages&&(n.each(f.Messages,function(n,i){u.triggerReceived(t,i)}),u.tryInitialize(f,r)))},monitorKeepAlive:function(t){var i=t._.keepAliveData;i.monitoring?t.log("Tried to monitor keep alive but it's already being monitored."):(i.monitoring=!0,u.markLastMessage(t),t._.keepAliveData.reconnectKeepAliveUpdate=function(){u.markLastMessage(t)},n(t).bind(f.onReconnect,t._.keepAliveData.reconnectKeepAliveUpdate),t.log("Now monitoring keep alive with a warning timeout of "+i.timeoutWarning+", keep alive timeout of "+i.timeout+" and disconnecting timeout of "+t.disconnectTimeout))},stopMonitoringKeepAlive:function(t){var i=t._.keepAliveData;i.monitoring&&(i.monitoring=!1,n(t).unbind(f.onReconnect,t._.keepAliveData.reconnectKeepAliveUpdate),t._.keepAliveData={},t.log("Stopping the monitoring of the keep alive."))},startHeartbeat:function(n){n._.lastActiveAt=(new Date).getTime();s(n)},markLastMessage:function(n){n._.lastMessageAt=(new Date).getTime()},markActive:function(n){return u.verifyLastActive(n)?(n._.lastActiveAt=(new Date).getTime(),!0):!1},isConnectedOrReconnecting:function(n){return n.state===r.connectionState.connected||n.state===r.connectionState.reconnecting},ensureReconnectingState:function(t){return c(t,r.connectionState.connected,r.connectionState.reconnecting)===!0&&n(t).triggerHandler(f.onReconnecting),t.state===r.connectionState.reconnecting},clearReconnectTimeout:function(n){n&&n._.reconnectTimeout&&(t.clearTimeout(n._.reconnectTimeout),delete n._.reconnectTimeout)},verifyLastActive:function(t){if((new Date).getTime()-t._.lastActiveAt>=t.reconnectWindow){var i=r._.format(r.resources.reconnectWindowTimeout,new Date(t._.lastActiveAt),t.reconnectWindow);return t.log(i),n(t).triggerHandler(f.onError,[r._.error(i,"TimeoutException")]),t.stop(!1,!1),!1}return!0},reconnect:function(n,i){var f=r.transports[i];if(u.isConnectedOrReconnecting(n)&&!n._.reconnectTimeout){if(!u.verifyLastActive(n))return;n._.reconnectTimeout=t.setTimeout(function(){u.verifyLastActive(n)&&(f.stop(n),u.ensureReconnectingState(n)&&(n.log(i+" reconnecting."),f.start(n)))},n.reconnectDelay)}},handleParseFailure:function(t,i,u,e,o){var s=r._.transportError(r._.format(r.resources.parseFailed,i),t.transport,u,o);e&&e(s)?t.log("Failed to parse server response while attempting to connect."):(n(t).triggerHandler(f.onError,[s]),t.stop())},initHandler:function(n){return new h(n)},foreverFrame:{count:0,connections:{}}}}(window.jQuery,window),function(n,t){var r=n.signalR,u=n.signalR.events,f=n.signalR.changeState,i=r.transports._logic;r.transports.webSockets={name:"webSockets",supportsKeepAlive:function(){return!0},send:function(t,f){var e=i.stringifySend(t,f);try{t.socket.send(e)}catch(o){n(t).triggerHandler(u.onError,[r._.transportError(r.resources.webSocketsInvalidState,t.transport,o,t.socket),f])}},start:function(e,o,s){var h,c=!1,l=this,a=!o,v=n(e);if(!t.WebSocket){s();return}e.socket||(h=e.webSocketServerUrl?e.webSocketServerUrl:e.wsProtocol+e.host,h+=i.getUrl(e,this.name,a),e.log("Connecting to websocket endpoint '"+h+"'."),e.socket=new t.WebSocket(h),e.socket.onopen=function(){c=!0;e.log("Websocket opened.");i.clearReconnectTimeout(e);f(e,r.connectionState.reconnecting,r.connectionState.connected)===!0&&v.triggerHandler(u.onReconnect)},e.socket.onclose=function(t){var i;this===e.socket&&(c&&typeof t.wasClean!="undefined"&&t.wasClean===!1?(i=r._.transportError(r.resources.webSocketClosed,e.transport,t),e.log("Unclean disconnect from websocket: "+(t.reason||"[no reason given]."))):e.log("Websocket closed."),s&&s(i)||(i&&n(e).triggerHandler(u.onError,[i]),l.reconnect(e)))},e.socket.onmessage=function(t){var r;try{r=e._parseResponse(t.data)}catch(u){i.handleParseFailure(e,t.data,u,s,t);return}r&&(n.isEmptyObject(r)||r.M?i.processMessages(e,r,o):i.triggerReceived(e,r))})},reconnect:function(n){i.reconnect(n,this.name)},lostConnection:function(n){this.reconnect(n)},stop:function(n){i.clearReconnectTimeout(n);n.socket&&(n.log("Closing the Websocket."),n.socket.close(),n.socket=null)},abort:function(n,t){i.ajaxAbort(n,t)}}}(window.jQuery,window),function(n,t){var i=n.signalR,u=n.signalR.events,e=n.signalR.changeState,r=i.transports._logic,f=function(n){t.clearTimeout(n._.reconnectAttemptTimeoutHandle);delete n._.reconnectAttemptTimeoutHandle};i.transports.serverSentEvents={name:"serverSentEvents",supportsKeepAlive:function(){return!0},timeOut:3e3,start:function(o,s,h){var c=this,l=!1,a=n(o),v=!s,y;if(o.eventSource&&(o.log("The connection already has an event source. Stopping it."),o.stop()),!t.EventSource){h&&(o.log("This browser doesn't support SSE."),h());return}y=r.getUrl(o,this.name,v);try{o.log("Attempting to connect to SSE endpoint '"+y+"'.");o.eventSource=new t.EventSource(y,{withCredentials:o.withCredentials})}catch(p){o.log("EventSource failed trying to connect with error "+p.Message+".");h?h():(a.triggerHandler(u.onError,[i._.transportError(i.resources.eventSourceFailedToConnect,o.transport,p)]),v&&c.reconnect(o));return}v&&(o._.reconnectAttemptTimeoutHandle=t.setTimeout(function(){l===!1&&o.eventSource.readyState!==t.EventSource.OPEN&&c.reconnect(o)},c.timeOut));o.eventSource.addEventListener("open",function(){o.log("EventSource connected.");f(o);r.clearReconnectTimeout(o);l===!1&&(l=!0,e(o,i.connectionState.reconnecting,i.connectionState.connected)===!0&&a.triggerHandler(u.onReconnect))},!1);o.eventSource.addEventListener("message",function(n){var t;if(n.data!=="initialized"){try{t=o._parseResponse(n.data)}catch(i){r.handleParseFailure(o,n.data,i,h,n);return}r.processMessages(o,t,s)}},!1);o.eventSource.addEventListener("error",function(n){var r=i._.transportError(i.resources.eventSourceError,o.transport,n);this===o.eventSource&&(h&&h(r)||(o.log("EventSource readyState: "+o.eventSource.readyState+"."),n.eventPhase===t.EventSource.CLOSED?(o.log("EventSource reconnecting due to the server connection ending."),c.reconnect(o)):(o.log("EventSource error."),a.triggerHandler(u.onError,[r]))))},!1)},reconnect:function(n){r.reconnect(n,this.name)},lostConnection:function(n){this.reconnect(n)},send:function(n,t){r.ajaxSend(n,t)},stop:function(n){f(n);r.clearReconnectTimeout(n);n&&n.eventSource&&(n.log("EventSource calling close()."),n.eventSource.close(),n.eventSource=null,delete n.eventSource)},abort:function(n,t){r.ajaxAbort(n,t)}}}(window.jQuery,window),function(n,t){var r=n.signalR,e=n.signalR.events,o=n.signalR.changeState,i=r.transports._logic,u=function(){var n=t.document.createElement("iframe");return n.setAttribute("style","position:absolute;top:0;left:0;width:0;height:0;visibility:hidden;"),n},f=function(){var i=null,f=1e3,n=0;return{prevent:function(){r._.ieVersion<=8&&(n===0&&(i=t.setInterval(function(){var n=u();t.document.body.appendChild(n);t.document.body.removeChild(n);n=null},f)),n++)},cancel:function(){n===1&&t.clearInterval(i);n>0&&n--}}}();r.transports.foreverFrame={name:"foreverFrame",supportsKeepAlive:function(){return!0},iframeClearThreshold:50,start:function(n,r,e){var l=this,s=i.foreverFrame.count+=1,h,o=u(),c=function(){n.log("Forever frame iframe finished loading and is no longer receiving messages.");e&&e()||l.reconnect(n)};if(t.EventSource){e&&(n.log("Forever Frame is not supported by SignalR on browsers with SSE support."),e());return}o.setAttribute("data-signalr-connection-id",n.id);f.prevent();h=i.getUrl(n,this.name);h+="&frameId="+s;t.document.documentElement.appendChild(o);n.log("Binding to iframe's load event.");o.addEventListener?o.addEventListener("load",c,!1):o.attachEvent&&o.attachEvent("onload",c);o.src=h;i.foreverFrame.connections[s]=n;n.frame=o;n.frameId=s;r&&(n.onSuccess=function(){n.log("Iframe transport started.");r()})},reconnect:function(n){var r=this;i.isConnectedOrReconnecting(n)&&i.verifyLastActive(n)&&t.setTimeout(function(){if(i.verifyLastActive(n)&&n.frame&&i.ensureReconnectingState(n)){var u=n.frame,t=i.getUrl(n,r.name,!0)+"&frameId="+n.frameId;n.log("Updating iframe src to '"+t+"'.");u.src=t}},n.reconnectDelay)},lostConnection:function(n){this.reconnect(n)},send:function(n,t){i.ajaxSend(n,t)},receive:function(t,u){var f,e,o;if(t.json!==t._originalJson&&(u=t._originalJson.stringify(u)),o=t._parseResponse(u),i.processMessages(t,o,t.onSuccess),t.state===n.signalR.connectionState.connected&&(t.frameMessageCount=(t.frameMessageCount||0)+1,t.frameMessageCount>r.transports.foreverFrame.iframeClearThreshold&&(t.frameMessageCount=0,f=t.frame.contentWindow||t.frame.contentDocument,f&&f.document&&f.document.body)))for(e=f.document.body;e.firstChild;)e.removeChild(e.firstChild)},stop:function(n){var r=null;if(f.cancel(),n.frame){if(n.frame.stop)n.frame.stop();else try{r=n.frame.contentWindow||n.frame.contentDocument;r.document&&r.document.execCommand&&r.document.execCommand("Stop")}catch(u){n.log("Error occured when stopping foreverFrame transport. Message = "+u.message+".")}n.frame.parentNode===t.document.body&&t.document.body.removeChild(n.frame);delete i.foreverFrame.connections[n.frameId];n.frame=null;n.frameId=null;delete n.frame;delete n.frameId;delete n.onSuccess;delete n.frameMessageCount;n.log("Stopping forever frame.")}},abort:function(n,t){i.ajaxAbort(n,t)},getConnection:function(n){return i.foreverFrame.connections[n]},started:function(t){o(t,r.connectionState.reconnecting,r.connectionState.connected)===!0&&n(t).triggerHandler(e.onReconnect)}}}(window.jQuery,window),function(n,t){var r=n.signalR,u=n.signalR.events,e=n.signalR.changeState,f=n.signalR.isDisconnecting,i=r.transports._logic;r.transports.longPolling={name:"longPolling",supportsKeepAlive:function(){return!1},reconnectDelay:3e3,start:function(o,s,h){var a=this,v=function(){v=n.noop;o.log("LongPolling connected.");s()},y=function(n){return h(n)?(o.log("LongPolling failed to connect."),!0):!1},c=o._,l=0,p=function(i){t.clearTimeout(c.reconnectTimeoutId);c.reconnectTimeoutId=null;e(i,r.connectionState.reconnecting,r.connectionState.connected)===!0&&(i.log("Raising the reconnect event"),n(i).triggerHandler(u.onReconnect))},w=36e5;o.pollXhr&&(o.log("Polling xhr requests already exists, aborting."),o.stop());o.messageId=null;c.reconnectTimeoutId=null;c.pollTimeoutId=t.setTimeout(function(){(function e(s,h){var g=s.messageId,nt=g===null,k=!nt,tt=!h,d=i.getUrl(s,a.name,k,tt,!0),b={};(s.messageId&&(b.messageId=s.messageId),s.groupsToken&&(b.groupsToken=s.groupsToken),f(s)!==!0)&&(o.log("Opening long polling request to '"+d+"'."),s.pollXhr=i.ajax(o,{xhrFields:{onprogress:function(){i.markLastMessage(o)}},url:d,type:"POST",contentType:r._.defaultContentType,data:b,timeout:o._.pollTimeout,success:function(r){var h,w=0,u,a;o.log("Long poll complete.");l=0;try{h=o._parseResponse(r)}catch(b){i.handleParseFailure(s,r,b,y,s.pollXhr);return}(c.reconnectTimeoutId!==null&&p(s),h&&(u=i.maximizePersistentResponse(h)),i.processMessages(s,h,v),u&&n.type(u.LongPollDelay)==="number"&&(w=u.LongPollDelay),f(s)!==!0)&&(a=u&&u.ShouldReconnect,!a||i.ensureReconnectingState(s))&&(w>0?c.pollTimeoutId=t.setTimeout(function(){e(s,a)},w):e(s,a))},error:function(f,h){var v=r._.transportError(r.resources.longPollFailed,o.transport,f,s.pollXhr);if(t.clearTimeout(c.reconnectTimeoutId),c.reconnectTimeoutId=null,h==="abort"){o.log("Aborted xhr request.");return}if(!y(v)){if(l++,o.state!==r.connectionState.reconnecting&&(o.log("An error occurred using longPolling. Status = "+h+".  Response = "+f.responseText+"."),n(s).triggerHandler(u.onError,[v])),(o.state===r.connectionState.connected||o.state===r.connectionState.reconnecting)&&!i.verifyLastActive(o))return;if(!i.ensureReconnectingState(s))return;c.pollTimeoutId=t.setTimeout(function(){e(s,!0)},a.reconnectDelay)}}}),k&&h===!0&&(c.reconnectTimeoutId=t.setTimeout(function(){p(s)},Math.min(1e3*(Math.pow(2,l)-1),w))))})(o)},250)},lostConnection:function(n){n.pollXhr&&n.pollXhr.abort("lostConnection")},send:function(n,t){i.ajaxSend(n,t)},stop:function(n){t.clearTimeout(n._.pollTimeoutId);t.clearTimeout(n._.reconnectTimeoutId);delete n._.pollTimeoutId;delete n._.reconnectTimeoutId;n.pollXhr&&(n.pollXhr.abort(),n.pollXhr=null,delete n.pollXhr)},abort:function(n,t){i.ajaxAbort(n,t)}}}(window.jQuery,window),function(n){function r(n){return n+e}function s(n,t,i){for(var f=n.length,u=[],r=0;r<f;r+=1)n.hasOwnProperty(r)&&(u[r]=t.call(i,n[r],r,n));return u}function h(t){return n.isFunction(t)?null:n.type(t)==="undefined"?null:t}function u(n){for(var t in n)if(n.hasOwnProperty(t))return!0;return!1}function f(n,t){var i=n._.invocationCallbacks,r,f;u(i)&&n.log("Clearing hub invocation callbacks with error: "+t+".");n._.invocationCallbackId=0;delete n._.invocationCallbacks;n._.invocationCallbacks={};for(f in i)r=i[f],r.method.call(r.scope,{E:t})}function i(n,t){return new i.fn.init(n,t)}function t(i,r){var u={qs:null,logging:!1,useDefaultPath:!0};return n.extend(u,r),(!i||u.useDefaultPath)&&(i=(i||"")+"/signalr"),new t.fn.init(i,u)}var e=".hubProxy",o=n.signalR;i.fn=i.prototype={init:function(n,t){this.state={};this.connection=n;this.hubName=t;this._={callbackMap:{}}},constructor:i,hasSubscriptions:function(){return u(this._.callbackMap)},on:function(t,i){var u=this,f=u._.callbackMap;return t=t.toLowerCase(),f[t]||(f[t]={}),f[t][i]=function(n,t){i.apply(u,t)},n(u).bind(r(t),f[t][i]),u},off:function(t,i){var e=this,o=e._.callbackMap,f;return t=t.toLowerCase(),f=o[t],f&&(f[i]?(n(e).unbind(r(t),f[i]),delete f[i],u(f)||delete o[t]):i||(n(e).unbind(r(t)),delete o[t])),e},invoke:function(t){var i=this,r=i.connection,e=n.makeArray(arguments).slice(1),c=s(e,h),f={H:i.hubName,M:t,A:c,I:r._.invocationCallbackId},u=n.Deferred(),l=function(f){var e=i._maximizeHubResponse(f),h,s;n.extend(i.state,e.State);e.Progress?u.notifyWith?u.notifyWith(i,[e.Progress.Data]):r._.progressjQueryVersionLogged||(r.log("A hub method invocation progress update was received but the version of jQuery in use ("+n.prototype.jquery+") does not support progress updates. Upgrade to jQuery 1.7+ to receive progress notifications."),r._.progressjQueryVersionLogged=!0):e.Error?(e.StackTrace&&r.log(e.Error+"\n"+e.StackTrace+"."),h=e.IsHubException?"HubException":"Exception",s=o._.error(e.Error,h),s.data=e.ErrorData,r.log(i.hubName+"."+t+" failed to execute. Error: "+s.message),u.rejectWith(i,[s])):(r.log("Invoked "+i.hubName+"."+t),u.resolveWith(i,[e.Result]))};return r._.invocationCallbacks[r._.invocationCallbackId.toString()]={scope:i,method:l},r._.invocationCallbackId+=1,n.isEmptyObject(i.state)||(f.S=i.state),r.log("Invoking "+i.hubName+"."+t),r.send(f),u.promise()},_maximizeHubResponse:function(n){return{State:n.S,Result:n.R,Progress:n.P?{Id:n.P.I,Data:n.P.D}:null,Id:n.I,IsHubException:n.H,Error:n.E,StackTrace:n.T,ErrorData:n.D}}};i.fn.init.prototype=i.fn;t.fn=t.prototype=n.connection();t.fn.init=function(t,i){var e={qs:null,logging:!1,useDefaultPath:!0},u=this;n.extend(e,i);n.signalR.fn.init.call(u,t,e.qs,e.logging);u.proxies={};u._.invocationCallbackId=0;u._.invocationCallbacks={};u.received(function(t){var f,o,e,i,s,h;t&&(typeof t.P!="undefined"?(e=t.P.I.toString(),i=u._.invocationCallbacks[e],i&&i.method.call(i.scope,t)):typeof t.I!="undefined"?(e=t.I.toString(),i=u._.invocationCallbacks[e],i&&(u._.invocationCallbacks[e]=null,delete u._.invocationCallbacks[e],i.method.call(i.scope,t))):(f=this._maximizeClientHubInvocation(t),u.log("Triggering client hub event '"+f.Method+"' on hub '"+f.Hub+"'."),s=f.Hub.toLowerCase(),h=f.Method.toLowerCase(),o=this.proxies[s],n.extend(o.state,f.State),n(o).triggerHandler(r(h),[f.Args])))});u.error(function(n,t){var i,r;t&&(i=t.I,r=u._.invocationCallbacks[i],r&&(u._.invocationCallbacks[i]=null,delete u._.invocationCallbacks[i],r.method.call(r.scope,{E:n})))});u.reconnecting(function(){u.transport&&u.transport.name==="webSockets"&&f(u,"Connection started reconnecting before invocation result was received.")});u.disconnected(function(){f(u,"Connection was disconnected before invocation result was received.")})};t.fn._maximizeClientHubInvocation=function(n){return{Hub:n.H,Method:n.M,Args:n.A,State:n.S}};t.fn._registerSubscribedHubs=function(){var t=this;t._subscribedToHubs||(t._subscribedToHubs=!0,t.starting(function(){var i=[];n.each(t.proxies,function(n){this.hasSubscriptions()&&(i.push({name:n}),t.log("Client subscribed to hub '"+n+"'."))});i.length===0&&t.log("No hubs have been subscribed to.  The client will not receive data from hubs.  To fix, declare at least one client side function prior to connection start for each hub you wish to subscribe to.");t.data=t.json.stringify(i)}))};t.fn.createHubProxy=function(n){n=n.toLowerCase();var t=this.proxies[n];return t||(t=i(this,n),this.proxies[n]=t),this._registerSubscribedHubs(),t};t.fn.init.prototype=t.fn;n.hubConnection=t}(window.jQuery,window),function(n){n.signalR.version="2.2.0"}(window.jQuery);
//# sourceMappingURL=jquery.signalR-2.2.0.min.js.map
;
/*!
 * ASP.NET SignalR JavaScript Library v2.3.0-rtm
 * http://signalr.net/
 *
 * Copyright (c) .NET Foundation. All rights reserved.
 * Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.
 *
 */

/// <reference path="..\..\SignalR.Client.JS\Scripts\jquery-1.6.4.js" />
/// <reference path="jquery.signalR.js" />
(function ($, window, undefined) {
    /// <param name="$" type="jQuery" />
    "use strict";

    if (typeof ($.signalR) !== "function") {
        throw new Error("SignalR: SignalR is not loaded. Please ensure jquery.signalR-x.js is referenced before ~/signalr/js.");
    }

    var signalR = $.signalR;

    function makeProxyCallback(hub, callback) {
        return function () {
            // Call the client hub method
            callback.apply(hub, $.makeArray(arguments));
        };
    }

    function registerHubProxies(instance, shouldSubscribe) {
        var key, hub, memberKey, memberValue, subscriptionMethod;

        for (key in instance) {
            if (instance.hasOwnProperty(key)) {
                hub = instance[key];

                if (!(hub.hubName)) {
                    // Not a client hub
                    continue;
                }

                if (shouldSubscribe) {
                    // We want to subscribe to the hub events
                    subscriptionMethod = hub.on;
                } else {
                    // We want to unsubscribe from the hub events
                    subscriptionMethod = hub.off;
                }

                // Loop through all members on the hub and find client hub functions to subscribe/unsubscribe
                for (memberKey in hub.client) {
                    if (hub.client.hasOwnProperty(memberKey)) {
                        memberValue = hub.client[memberKey];

                        if (!$.isFunction(memberValue)) {
                            // Not a client hub function
                            continue;
                        }

                        // Use the actual user-provided callback as the "identity" value for the registration.
                        subscriptionMethod.call(hub, memberKey, makeProxyCallback(hub, memberValue), memberValue);
                    }
                }
            }
        }
    }

    $.hubConnection.prototype.createHubProxies = function () {
        var proxies = {};
        this.starting(function () {
            // Register the hub proxies as subscribed
            // (instance, shouldSubscribe)
            registerHubProxies(proxies, true);

            this._registerSubscribedHubs();
        }).disconnected(function () {
            // Unsubscribe all hub proxies when we "disconnect".  This is to ensure that we do not re-add functional call backs.
            // (instance, shouldSubscribe)
            registerHubProxies(proxies, false);
        });

        proxies['hubInterface'] = this.createHubProxy('hubInterface'); 
        proxies['hubInterface'].client = { };
        proxies['hubInterface'].server = {
            alertAgentAddToCart: function (title, tokenAgent, tokenVisitor, tokenRoom, action) {
            /// <summary>Calls the AlertAgentAddToCart method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"title\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenRoom\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"action\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["AlertAgentAddToCart"], $.makeArray(arguments)));
             },

            alertAgentAddToMyList: function (title, tokenAgent, tokenVisitor, tokenRoom, whoAdd) {
            /// <summary>Calls the AlertAgentAddToMyList method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"title\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenRoom\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"whoAdd\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["AlertAgentAddToMyList"], $.makeArray(arguments)));
             },

            assignedVisitorsFromLogin: function (tokenAgent) {
            /// <summary>Calls the AssignedVisitorsFromLogin method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenAgent\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["AssignedVisitorsFromLogin"], $.makeArray(arguments)));
             },

            cleanInactiveVisitors: function (minutesInactivity) {
            /// <summary>Calls the CleanInactiveVisitors method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"minutesInactivity\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["CleanInactiveVisitors"], $.makeArray(arguments)));
             },

            closeLastConnection: function (room) {
            /// <summary>Calls the CloseLastConnection method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["CloseLastConnection"], $.makeArray(arguments)));
             },

            closeSession: function (tokenVisitor, tokenAgent, hideMessage) {
            /// <summary>Calls the CloseSession method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"hideMessage\" type=\"\">Server side type is System.Boolean</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["CloseSession"], $.makeArray(arguments)));
             },

            connectBotFromOverflow: function (initData, contextVars) {
            /// <summary>Calls the ConnectBotFromOverflow method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"initData\" type=\"Object\">Server side type is Model.Dto.SignalR.InitBotConversationData</param>
            /// <param name=\"contextVars\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ConnectBotFromOverflow"], $.makeArray(arguments)));
             },

            connectedAgent: function (agent, connectionId) {
            /// <summary>Calls the ConnectedAgent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"agent\" type=\"Object\">Server side type is Model.Dto.SignalR.Agent</param>
            /// <param name=\"connectionId\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ConnectedAgent"], $.makeArray(arguments)));
             },

            connectFromPincode: function (tokenVisitor, tokenAgent) {
            /// <summary>Calls the ConnectFromPincode method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ConnectFromPincode"], $.makeArray(arguments)));
             },

            createSessionSameToken: function (transfer, deptSelected) {
            /// <summary>Calls the CreateSessionSameToken method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"transfer\" type=\"Object\">Server side type is Model.Dto.Transfer</param>
            /// <param name=\"deptSelected\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["CreateSessionSameToken"], $.makeArray(arguments)));
             },

            forceCloseRoom: function (room, tokenAgent) {
            /// <summary>Calls the ForceCloseRoom method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ForceCloseRoom"], $.makeArray(arguments)));
             },

            forceCloseSession: function (tokenVisitor, tokenAgent, room) {
            /// <summary>Calls the ForceCloseSession method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ForceCloseSession"], $.makeArray(arguments)));
             },

            forceKickAgent: function (agentId) {
            /// <summary>Calls the ForceKickAgent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"agentId\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ForceKickAgent"], $.makeArray(arguments)));
             },

            getFirstVisitorToOverbookingList: function (myAgentId, tokenVisitor) {
            /// <summary>Calls the GetFirstVisitorToOverbookingList method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"myAgentId\" type=\"Number\">Server side type is System.Int32</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["GetFirstVisitorToOverbookingList"], $.makeArray(arguments)));
             },

            getVisitorStatusCall: function (room) {
            /// <summary>Calls the GetVisitorStatusCall method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["GetVisitorStatusCall"], $.makeArray(arguments)));
             },

            goToBackgroundAppMobile: function (conference) {
            /// <summary>Calls the GoToBackgroundAppMobile method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"conference\" type=\"Object\">Server side type is Model.Dto.SignalR.ConferenceApp</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["GoToBackgroundAppMobile"], $.makeArray(arguments)));
             },

            goToBotAction: function (newLocation, room) {
            /// <summary>Calls the goToBotAction method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"newLocation\" type=\"Object\">Server side type is Model.Dto.SignalR.NodeLocation</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["goToBotAction"], $.makeArray(arguments)));
             },

            initBotConversation: function (initData, contextVars) {
            /// <summary>Calls the InitBotConversation method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"initData\" type=\"Object\">Server side type is Model.Dto.SignalR.InitBotConversationData</param>
            /// <param name=\"contextVars\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["InitBotConversation"], $.makeArray(arguments)));
             },

            isTyping: function (chat) {
            /// <summary>Calls the IsTyping method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"chat\" type=\"Object\">Server side type is Model.Dto.SignalR.Message</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["IsTyping"], $.makeArray(arguments)));
             },

            joinAgent: function (tokenAgent) {
            /// <summary>Calls the JoinAgent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenAgent\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["JoinAgent"], $.makeArray(arguments)));
             },

            logOffOtherAgent: function (oldTokenAgent, token) {
            /// <summary>Calls the LogOffOtherAgent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"oldTokenAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"token\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["LogOffOtherAgent"], $.makeArray(arguments)));
             },

            markAsTransferredInVideoCallInDic: function (room, status) {
            /// <summary>Calls the MarkAsTransferredInVideoCallInDic method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"status\" type=\"Object\">Server side type is System.Nullable`1[System.Boolean]</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["MarkAsTransferredInVideoCallInDic"], $.makeArray(arguments)));
             },

            receiveTag: function (room, tag) {
            /// <summary>Calls the ReceiveTag method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tag\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ReceiveTag"], $.makeArray(arguments)));
             },

            rejectedVideoCall: function (room) {
            /// <summary>Calls the RejectedVideoCall method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["RejectedVideoCall"], $.makeArray(arguments)));
             },

            reloadAgents: function (domainId) {
            /// <summary>Calls the ReloadAgents method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"domainId\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["ReloadAgents"], $.makeArray(arguments)));
             },

            sendAddToMyCartToVisitor: function (internalId, tokenSession) {
            /// <summary>Calls the SendAddToMyCartToVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"internalId\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenSession\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendAddToMyCartToVisitor"], $.makeArray(arguments)));
             },

            sendAddToMyListToVisitor: function (internalId, tokenSession) {
            /// <summary>Calls the SendAddToMyListToVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"internalId\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenSession\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendAddToMyListToVisitor"], $.makeArray(arguments)));
             },

            sendAgentsChatMessage: function (chat) {
            /// <summary>Calls the SendAgentsChatMessage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"chat\" type=\"Object\">Server side type is Model.Dto.SignalR.AgentChat</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendAgentsChatMessage"], $.makeArray(arguments)));
             },

            sendAnalyticsEvent: function (eventData, room) {
            /// <summary>Calls the SendAnalyticsEvent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"eventData\" type=\"Object\">Server side type is Model.Dto.SignalR.AnalyticsEvent</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendAnalyticsEvent"], $.makeArray(arguments)));
             },

            sendCartData: function (tokenVisitor, totalValueCart) {
            /// <summary>Calls the SendCartData method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"totalValueCart\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendCartData"], $.makeArray(arguments)));
             },

            sendChoice: function (choice, room) {
            /// <summary>Calls the SendChoice method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"choice\" type=\"Object\">Server side type is Model.Dto.SignalR.Choice</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendChoice"], $.makeArray(arguments)));
             },

            sendChoiceResponse: function (response, room) {
            /// <summary>Calls the SendChoiceResponse method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"response\" type=\"Object\">Server side type is Model.Dto.SignalR.ChoiceResponse</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendChoiceResponse"], $.makeArray(arguments)));
             },

            sendConferenceMessage: function (message, conferenceId, data) {
            /// <summary>Calls the SendConferenceMessage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Number\">Server side type is System.Int32</param>
            /// <param name=\"conferenceId\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"data\" type=\"Object\">Server side type is Newtonsoft.Json.Linq.JObject</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendConferenceMessage"], $.makeArray(arguments)));
             },

            sendCustomForm: function (form, room, delay) {
            /// <summary>Calls the SendCustomForm method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"form\" type=\"Object\">Server side type is Model.Dto.SignalR.CustomForm</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"delay\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendCustomForm"], $.makeArray(arguments)));
             },

            sendCustomFormResponse: function (response, room) {
            /// <summary>Calls the SendCustomFormResponse method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"response\" type=\"Object\">Server side type is Model.Dto.SignalR.CustomFormResponse</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendCustomFormResponse"], $.makeArray(arguments)));
             },

            sendDashboard: function (token, schedule, currentIframeStatus) {
            /// <summary>Calls the SendDashboard method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"token\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"schedule\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"currentIframeStatus\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDashboard"], $.makeArray(arguments)));
             },

            sendDataVisitor: function (tokenVisitor, scfVisitor) {
            /// <summary>Calls the SendDataVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"scfVisitor\" type=\"Object\">Server side type is Model.Dto.Visitors</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDataVisitor"], $.makeArray(arguments)));
             },

            sendDataVisitorWithRoom: function (room, scfVisitor) {
            /// <summary>Calls the SendDataVisitorWithRoom method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"scfVisitor\" type=\"Object\">Server side type is Model.Dto.Visitors</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDataVisitorWithRoom"], $.makeArray(arguments)));
             },

            sendDelay: function (delay, room) {
            /// <summary>Calls the SendDelay method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"delay\" type=\"Object\">Server side type is Model.Dto.SignalR.Delay</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDelay"], $.makeArray(arguments)));
             },

            sendDelayCallback: function (room, agentId) {
            /// <summary>Calls the SendDelayCallback method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"agentId\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDelayCallback"], $.makeArray(arguments)));
             },

            sendDeleteVisitor: function (domainId, visitor) {
            /// <summary>Calls the SendDeleteVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"domainId\" type=\"Number\">Server side type is System.Int32</param>
            /// <param name=\"visitor\" type=\"Object\">Server side type is Model.Dto.ModalVisitor</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDeleteVisitor"], $.makeArray(arguments)));
             },

            sendDrag: function (drag) {
            /// <summary>Calls the SendDrag method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"drag\" type=\"Object\">Server side type is Model.Dto.SignalR.Drag</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDrag"], $.makeArray(arguments)));
             },

            sendDrawing: function (drawing) {
            /// <summary>Calls the SendDrawing method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"drawing\" type=\"Object\">Server side type is Model.Dto.SignalR.Drawing</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendDrawing"], $.makeArray(arguments)));
             },

            sendEnableClientTranslation: function (translation) {
            /// <summary>Calls the SendEnableClientTranslation method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"translation\" type=\"Object\">Server side type is Model.Dto.SignalR.Translation</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendEnableClientTranslation"], $.makeArray(arguments)));
             },

            sendError: function (error, room) {
            /// <summary>Calls the SendError method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"error\" type=\"Object\">Server side type is Model.Dto.SignalR.ErrorMessage</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendError"], $.makeArray(arguments)));
             },

            sendFormResponse: function (message) {
            /// <summary>Calls the SendFormResponse method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Object\">Server side type is Model.Dto.SignalR.Message</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendFormResponse"], $.makeArray(arguments)));
             },

            sendFormVisitor: function (tokenVisitor, disconnectSignalR) {
            /// <summary>Calls the SendFormVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"disconnectSignalR\" type=\"\">Server side type is System.Boolean</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendFormVisitor"], $.makeArray(arguments)));
             },

            sendImage: function (media) {
            /// <summary>Calls the SendImage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"media\" type=\"Object\">Server side type is Model.Dto.SignalR.Medias</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendImage"], $.makeArray(arguments)));
             },

            sendInactivityVisitor: function (tokenVisitor) {
            /// <summary>Calls the SendInactivityVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendInactivityVisitor"], $.makeArray(arguments)));
             },

            sendInputValidation: function (validation, room) {
            /// <summary>Calls the SendInputValidation method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"validation\" type=\"Object\">Server side type is Model.Dto.SignalR.InputValidation</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendInputValidation"], $.makeArray(arguments)));
             },

            sendInteractionsToAgent: function (agentToken, tokenVisitor, interactionsToSave) {
            /// <summary>Calls the SendInteractionsToAgent method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"agentToken\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"interactionsToSave\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendInteractionsToAgent"], $.makeArray(arguments)));
             },

            sendMessage: function (message) {
            /// <summary>Calls the SendMessage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Object\">Server side type is Model.Dto.SignalR.Message</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendMessage"], $.makeArray(arguments)));
             },

            sendMessageRating: function (rating, room) {
            /// <summary>Calls the SendMessageRating method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"rating\" type=\"Object\">Server side type is Model.Dto.SignalR.MessageRating</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendMessageRating"], $.makeArray(arguments)));
             },

            sendMessageRatingResponse: function (response, room, domainId) {
            /// <summary>Calls the SendMessageRatingResponse method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"response\" type=\"Object\">Server side type is Model.Dto.SignalR.MessageRatingResponse</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"domainId\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendMessageRatingResponse"], $.makeArray(arguments)));
             },

            sendNode: function (node) {
            /// <summary>Calls the SendNode method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"node\" type=\"Object\">Server side type is Model.Dto.SignalR.Nodes</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendNode"], $.makeArray(arguments)));
             },

            sendNote: function (note) {
            /// <summary>Calls the SendNote method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"note\" type=\"Object\">Server side type is Model.Dto.SignalR.Note</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendNote"], $.makeArray(arguments)));
             },

            sendPin: function (pin) {
            /// <summary>Calls the SendPin method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"pin\" type=\"Object\">Server side type is Model.Dto.SignalR.Point</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendPin"], $.makeArray(arguments)));
             },

            sendPoint: function (point) {
            /// <summary>Calls the SendPoint method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"point\" type=\"Object\">Server side type is Model.Dto.SignalR.Point</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendPoint"], $.makeArray(arguments)));
             },

            sendProductSearch: function (search, room, delay) {
            /// <summary>Calls the SendProductSearch method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"search\" type=\"Object\">Server side type is Model.Dto.SignalR.ProductSearchFromBot</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"delay\" type=\"Number\">Server side type is System.Int32</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendProductSearch"], $.makeArray(arguments)));
             },

            sendProductSearchResultsCallback: function (results, room) {
            /// <summary>Calls the SendProductSearchResultsCallback method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"results\" type=\"Number\">Server side type is System.Int32</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendProductSearchResultsCallback"], $.makeArray(arguments)));
             },

            sendResetImage: function (zoom) {
            /// <summary>Calls the SendResetImage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"zoom\" type=\"Object\">Server side type is Model.Dto.SignalR.Zoom</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendResetImage"], $.makeArray(arguments)));
             },

            sendRunAsyncScript: function (script, room) {
            /// <summary>Calls the SendRunAsyncScript method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"script\" type=\"Object\">Server side type is Model.Dto.SignalR.RunAsyncScript</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendRunAsyncScript"], $.makeArray(arguments)));
             },

            sendSearchOrder: function (message) {
            /// <summary>Calls the SendSearchOrder method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Object\">Server side type is Model.Dto.SignalR.OrderStatus</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSearchOrder"], $.makeArray(arguments)));
             },

            sendSearchTerm: function (search, sendSearchToAgent) {
            /// <summary>Calls the SendSearchTerm method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"search\" type=\"Object\">Server side type is Model.Dto.SignalR.Search</param>
            /// <param name=\"sendSearchToAgent\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSearchTerm"], $.makeArray(arguments)));
             },

            sendSearchTermCatalog: function (search) {
            /// <summary>Calls the SendSearchTermCatalog method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"search\" type=\"Object\">Server side type is Model.Dto.SignalR.Search</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSearchTermCatalog"], $.makeArray(arguments)));
             },

            sendSideBubble: function (sideBubble, room) {
            /// <summary>Calls the SendSideBubble method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"sideBubble\" type=\"Object\">Server side type is Model.Dto.SignalR.SideBubble</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSideBubble"], $.makeArray(arguments)));
             },

            sendSignalingMessage: function (data, conferenceId) {
            /// <summary>Calls the SendSignalingMessage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"data\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"conferenceId\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSignalingMessage"], $.makeArray(arguments)));
             },

            sendStatus: function (data) {
            /// <summary>Calls the SendStatus method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"data\" type=\"Object\">Server side type is Model.Dto.SignalR.ChangeStatus</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendStatus"], $.makeArray(arguments)));
             },

            sendStatusDomain: function (status, domainId) {
            /// <summary>Calls the SendStatusDomain method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"status\" type=\"Object\">Server side type is Tools.Constant.Domain+Status</param>
            /// <param name=\"domainId\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendStatusDomain"], $.makeArray(arguments)));
             },

            sendSummary: function (chat) {
            /// <summary>Calls the SendSummary method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"chat\" type=\"Object\">Server side type is Model.Dto.SignalR.Message</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendSummary"], $.makeArray(arguments)));
             },

            sendSupervisorMessage: function (message) {
            /// <summary>Calls the sendSupervisorMessage method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Object\">Server side type is Model.Dto.SignalR.SupervisorMessage</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["sendSupervisorMessage"], $.makeArray(arguments)));
             },

            sendUndo: function (undo) {
            /// <summary>Calls the SendUndo method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"undo\" type=\"Object\">Server side type is Model.Dto.SignalR.Undo</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendUndo"], $.makeArray(arguments)));
             },

            sendViewChange: function (changeView) {
            /// <summary>Calls the SendViewChange method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"changeView\" type=\"Object\">Server side type is Model.Dto.SignalR.ChangeView</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendViewChange"], $.makeArray(arguments)));
             },

            sendVisitorCheckout: function (room, tokenSession) {
            /// <summary>Calls the SendVisitorCheckout method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenSession\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendVisitorCheckout"], $.makeArray(arguments)));
             },

            sendVisitorOrderRequest: function (orderId, room) {
            /// <summary>Calls the SendVisitorOrderRequest method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"orderId\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendVisitorOrderRequest"], $.makeArray(arguments)));
             },

            sendVisitorOrderResult: function (details, room) {
            /// <summary>Calls the SendVisitorOrderResult method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"details\" type=\"Object\">Server side type is Model.Dto.SignalR.Oct8neOrderResult</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendVisitorOrderResult"], $.makeArray(arguments)));
             },

            sendVoiceForm: function (message) {
            /// <summary>Calls the SendVoiceForm method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"message\" type=\"Object\">Server side type is Model.Dto.SignalR.Message</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendVoiceForm"], $.makeArray(arguments)));
             },

            sendZoom: function (zoom) {
            /// <summary>Calls the SendZoom method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"zoom\" type=\"Object\">Server side type is Model.Dto.SignalR.Zoom</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["SendZoom"], $.makeArray(arguments)));
             },

            transfer: function (tokenOldAgent, tokenNewAgent, tokenVisitor, transferText, typeTransfer, idDept) {
            /// <summary>Calls the Transfer method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"tokenOldAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenNewAgent\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"transferText\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"typeTransfer\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"idDept\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["Transfer"], $.makeArray(arguments)));
             },

            transferVisitor: function (idOldAgent, idNewAgent, tokenVisitor, transferText, typeTransfer, idDept) {
            /// <summary>Calls the TransferVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"idOldAgent\" type=\"Number\">Server side type is System.Int32</param>
            /// <param name=\"idNewAgent\" type=\"Object\">Server side type is System.Nullable`1[System.Int32]</param>
            /// <param name=\"tokenVisitor\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"transferText\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"typeTransfer\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"idDept\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["TransferVisitor"], $.makeArray(arguments)));
             },

            transferVisitorFromBot: function (transfer) {
            /// <summary>Calls the TransferVisitorFromBot method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"transfer\" type=\"Object\">Server side type is Model.Dto.SignalR.TransferVisitorFromBot</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["TransferVisitorFromBot"], $.makeArray(arguments)));
             },

            transferVisitorMobile: function (transfer) {
            /// <summary>Calls the TransferVisitorMobile method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"transfer\" type=\"Object\">Server side type is Oct8ne.SignalR.TransferMobile</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["TransferVisitorMobile"], $.makeArray(arguments)));
             },

            updateStatusCallInDic: function (room, status) {
            /// <summary>Calls the UpdateStatusCallInDic method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"status\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["UpdateStatusCallInDic"], $.makeArray(arguments)));
             },

            updateVisitor: function (room) {
            /// <summary>Calls the UpdateVisitor method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["UpdateVisitor"], $.makeArray(arguments)));
             },

            updateVisitorMuteAudioInDic: function (room, status) {
            /// <summary>Calls the UpdateVisitorMuteAudioInDic method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"status\" type=\"\">Server side type is System.Boolean</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["UpdateVisitorMuteAudioInDic"], $.makeArray(arguments)));
             },

            updateVisitorMuteVideoInDic: function (room, status) {
            /// <summary>Calls the updateVisitorMuteVideoInDic method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"status\" type=\"\">Server side type is System.Boolean</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["updateVisitorMuteVideoInDic"], $.makeArray(arguments)));
             },

            videoAction: function (action, time, room) {
            /// <summary>Calls the VideoAction method on the server-side HubInterface hub.&#10;Returns a jQuery.Deferred() promise.</summary>
            /// <param name=\"action\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"time\" type=\"String\">Server side type is System.String</param>
            /// <param name=\"room\" type=\"String\">Server side type is System.String</param>
                return proxies['hubInterface'].invoke.apply(proxies['hubInterface'], $.merge(["VideoAction"], $.makeArray(arguments)));
             }
        };

        return proxies;
    };

    signalR.hub = $.hubConnection("/signalr", { useDefaultPath: false });
    $.extend(signalR, signalR.hub.createHubProxies());

}(window.jQuery, window));;
/*!
 * jQuery Mousewheel 3.1.13
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 */

(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ('onwheel' in document || document.documentMode >= 9) ?
            ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ($.event.fixHooks) {
        for (var i = toFix.length; i;) {
            $.event.fixHooks[toFix[--i]] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.12',

        setup: function () {
            if (this.addEventListener) {
                for (var i = toBind.length; i;) {
                    this.addEventListener(toBind[--i], handler, true);
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function () {
            if (this.removeEventListener) {
                for (var i = toBind.length; i;) {
                    this.removeEventListener(toBind[--i], handler, true);
                }
            } else {
                this.onmousewheel = null;
            }
            // Clean up the data we added to the element
            $.removeData(this, 'mousewheel-line-height');
            $.removeData(this, 'mousewheel-page-height');
        },

        getLineHeight: function (elem) {
            var $elem = $(elem),
                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();
            if (!$parent.length) {
                $parent = $('body');
            }
            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;
        },

        getPageHeight: function (elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below
            normalizeOffset: true  // calls getBoundingClientRect for each event
        }
    };

    $.fn.extend({
        mousewheel: function (fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function (fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent = event || window.event,
            args = slice.call(arguments, 1),
            delta = 0,
            deltaX = 0,
            deltaY = 0,
            absDelta = 0,
            offsetX = 0,
            offsetY = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ('detail' in orgEvent) { deltaY = orgEvent.detail * -1; }
        if ('wheelDelta' in orgEvent) { deltaY = orgEvent.wheelDelta; }
        if ('wheelDeltaY' in orgEvent) { deltaY = orgEvent.wheelDeltaY; }
        if ('wheelDeltaX' in orgEvent) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ('axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ('deltaY' in orgEvent) {
            deltaY = orgEvent.deltaY * -1;
            delta = deltaY;
        }
        if ('deltaX' in orgEvent) {
            deltaX = orgEvent.deltaX;
            if (deltaY === 0) { delta = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if (deltaY === 0 && deltaX === 0) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if (orgEvent.deltaMode === 1) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if (orgEvent.deltaMode === 2) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max(Math.abs(deltaY), Math.abs(deltaX));

        if (!lowestDelta || absDelta < lowestDelta) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if (shouldAdjustOldDeltas(orgEvent, absDelta)) {
            // Divide all the things by 40!
            delta /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta = Math[delta >= 1 ? 'floor' : 'ceil'](delta / lowestDelta);
        deltaX = Math[deltaX >= 1 ? 'floor' : 'ceil'](deltaX / lowestDelta);
        deltaY = Math[deltaY >= 1 ? 'floor' : 'ceil'](deltaY / lowestDelta);

        // Normalise offsetX and offsetY properties
        if (special.settings.normalizeOffset && this.getBoundingClientRect) {
            var boundingRect = this.getBoundingClientRect();
            offsetX = event.clientX - boundingRect.left;
            offsetY = event.clientY - boundingRect.top;
        }

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        event.offsetX = offsetX;
        event.offsetY = offsetY;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));
;
/*
== malihu jquery custom scrollbar plugin == 
Version: 3.1.5 
Plugin URI: http://manos.malihu.gr/jquery-custom-content-scroller 
Author: malihu
Author URI: http://manos.malihu.gr
License: MIT License (MIT)
*/

/*
Copyright Manos Malihutsakis (email: manos@malihu.gr)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/*
The code below is fairly long, fully commented and should be normally used in development. 
For production, use either the minified jquery.mCustomScrollbar.min.js script or 
the production-ready jquery.mCustomScrollbar.concat.min.js which contains the plugin 
and dependencies (minified). 
*/

(function (factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], factory);
    } else if (typeof module !== "undefined" && module.exports) {
        module.exports = factory;
    } else {
        factory(jQuery, window, document);
    }
}(function ($) {
    (function (init) {
        var _rjs = typeof define === "function" && define.amd, /* RequireJS */
            _njs = typeof module !== "undefined" && module.exports, /* NodeJS */
            _dlp = ("https:" == document.location.protocol) ? "https:" : "http:", /* location protocol */
            _url = "cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js";
        if (!_rjs) {
            if (_njs) {
                require("jquery-mousewheel")($);
            } else {
                /* load jquery-mousewheel plugin (via CDN) if it's not present or not loaded via RequireJS 
                (works when mCustomScrollbar fn is called on window load) */
                $.event.special.mousewheel || $("head").append(decodeURI("%3Cscript src=" + _dlp + "//" + _url + "%3E%3C/script%3E"));
            }
        }
        init();
    }(function () {

        /* 
        ----------------------------------------
        PLUGIN NAMESPACE, PREFIX, DEFAULT SELECTOR(S) 
        ----------------------------------------
        */

        var pluginNS = "mCustomScrollbar",
            pluginPfx = "mCS",
            defaultSelector = ".mCustomScrollbar",





            /* 
            ----------------------------------------
            DEFAULT OPTIONS 
            ----------------------------------------
            */

            defaults = {
                /*
                set element/content width/height programmatically 
                values: boolean, pixels, percentage 
                    option						default
                    -------------------------------------
                    setWidth					false
                    setHeight					false
                */
                /*
                set the initial css top property of content  
                values: string (e.g. "-100px", "10%" etc.)
                */
                setTop: 0,
                /*
                set the initial css left property of content  
                values: string (e.g. "-100px", "10%" etc.)
                */
                setLeft: 0,
                /* 
                scrollbar axis (vertical and/or horizontal scrollbars) 
                values (string): "y", "x", "yx"
                */
                axis: "y",
                /*
                position of scrollbar relative to content  
                values (string): "inside", "outside" ("outside" requires elements with position:relative)
                */
                scrollbarPosition: "inside",
                /*
                scrolling inertia
                values: integer (milliseconds)
                */
                scrollInertia: 950,
                /* 
                auto-adjust scrollbar dragger length
                values: boolean
                */
                autoDraggerLength: true,
                /*
                auto-hide scrollbar when idle 
                values: boolean
                    option						default
                    -------------------------------------
                    autoHideScrollbar			false
                */
                /*
                auto-expands scrollbar on mouse-over and dragging
                values: boolean
                    option						default
                    -------------------------------------
                    autoExpandScrollbar			false
                */
                /*
                always show scrollbar, even when there's nothing to scroll 
                values: integer (0=disable, 1=always show dragger rail and buttons, 2=always show dragger rail, dragger and buttons), boolean
                */
                alwaysShowScrollbar: 0,
                /*
                scrolling always snaps to a multiple of this number in pixels
                values: integer, array ([y,x])
                    option						default
                    -------------------------------------
                    snapAmount					null
                */
                /*
                when snapping, snap with this number in pixels as an offset 
                values: integer
                */
                snapOffset: 0,
                /* 
                mouse-wheel scrolling
                */
                mouseWheel: {
                    /* 
                    enable mouse-wheel scrolling
                    values: boolean
                    */
                    enable: true,
                    /* 
                    scrolling amount in pixels
                    values: "auto", integer 
                    */
                    scrollAmount: "auto",
                    /* 
                    mouse-wheel scrolling axis 
                    the default scrolling direction when both vertical and horizontal scrollbars are present 
                    values (string): "y", "x" 
                    */
                    axis: "y",
                    /* 
                    prevent the default behaviour which automatically scrolls the parent element(s) when end of scrolling is reached 
                    values: boolean
                        option						default
                        -------------------------------------
                        preventDefault				null
                    */
                    /*
                    the reported mouse-wheel delta value. The number of lines (translated to pixels) one wheel notch scrolls.  
                    values: "auto", integer 
                    "auto" uses the default OS/browser value 
                    */
                    deltaFactor: "auto",
                    /*
                    normalize mouse-wheel delta to -1 or 1 (disables mouse-wheel acceleration) 
                    values: boolean
                        option						default
                        -------------------------------------
                        normalizeDelta				null
                    */
                    /*
                    invert mouse-wheel scrolling direction 
                    values: boolean
                        option						default
                        -------------------------------------
                        invert						null
                    */
                    /*
                    the tags that disable mouse-wheel when cursor is over them
                    */
                    disableOver: ["select", "option", "keygen", "datalist", "textarea"]
                },
                /* 
                scrollbar buttons
                */
                scrollButtons: {
                    /*
                    enable scrollbar buttons
                    values: boolean
                        option						default
                        -------------------------------------
                        enable						null
                    */
                    /*
                    scrollbar buttons scrolling type 
                    values (string): "stepless", "stepped"
                    */
                    scrollType: "stepless",
                    /*
                    scrolling amount in pixels
                    values: "auto", integer 
                    */
                    scrollAmount: "auto"
                    /*
                    tabindex of the scrollbar buttons
                    values: false, integer
                        option						default
                        -------------------------------------
                        tabindex					null
                    */
                },
                /* 
                keyboard scrolling
                */
                keyboard: {
                    /*
                    enable scrolling via keyboard
                    values: boolean
                    */
                    enable: true,
                    /*
                    keyboard scrolling type 
                    values (string): "stepless", "stepped"
                    */
                    scrollType: "stepless",
                    /*
                    scrolling amount in pixels
                    values: "auto", integer 
                    */
                    scrollAmount: "auto"
                },
                /*
                enable content touch-swipe scrolling 
                values: boolean, integer, string (number)
                integer values define the axis-specific minimum amount required for scrolling momentum
                */
                contentTouchScroll: 25,
                /*
                enable/disable document (default) touch-swipe scrolling 
                */
                documentTouchScroll: true,
                /*
                advanced option parameters
                */
                advanced: {
                    /*
                    auto-expand content horizontally (for "x" or "yx" axis) 
                    values: boolean, integer (the value 2 forces the non scrollHeight/scrollWidth method, the value 3 forces the scrollHeight/scrollWidth method)
                        option						default
                        -------------------------------------
                        autoExpandHorizontalScroll	null
                    */
                    /*
                    auto-scroll to elements with focus
                    */
                    autoScrollOnFocus: "input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",
                    /*
                    auto-update scrollbars on content, element or viewport resize 
                    should be true for fluid layouts/elements, adding/removing content dynamically, hiding/showing elements, content with images etc. 
                    values: boolean
                    */
                    updateOnContentResize: true,
                    /*
                    auto-update scrollbars each time each image inside the element is fully loaded 
                    values: "auto", boolean
                    */
                    updateOnImageLoad: "auto",
                    /*
                    auto-update scrollbars based on the amount and size changes of specific selectors 
                    useful when you need to update the scrollbar(s) automatically, each time a type of element is added, removed or changes its size 
                    values: boolean, string (e.g. "ul li" will auto-update scrollbars each time list-items inside the element are changed) 
                    a value of true (boolean) will auto-update scrollbars each time any element is changed
                        option						default
                        -------------------------------------
                        updateOnSelectorChange		null
                    */
                    /*
                    extra selectors that'll allow scrollbar dragging upon mousemove/up, pointermove/up, touchend etc. (e.g. "selector-1, selector-2")
                        option						default
                        -------------------------------------
                        extraDraggableSelectors		null
                    */
                    /*
                    extra selectors that'll release scrollbar dragging upon mouseup, pointerup, touchend etc. (e.g. "selector-1, selector-2")
                        option						default
                        -------------------------------------
                        releaseDraggableSelectors	null
                    */
                    /*
                    auto-update timeout 
                    values: integer (milliseconds)
                    */
                    autoUpdateTimeout: 60
                },
                /* 
                scrollbar theme 
                values: string (see CSS/plugin URI for a list of ready-to-use themes)
                */
                theme: "light",
                /*
                user defined callback functions
                */
                callbacks: {
                    /*
                    Available callbacks: 
                        callback					default
                        -------------------------------------
                        onCreate					null
                        onInit						null
                        onScrollStart				null
                        onScroll					null
                        onTotalScroll				null
                        onTotalScrollBack			null
                        whileScrolling				null
                        onOverflowY					null
                        onOverflowX					null
                        onOverflowYNone				null
                        onOverflowXNone				null
                        onImageLoad					null
                        onSelectorChange			null
                        onBeforeUpdate				null
                        onUpdate					null
                    */
                    onTotalScrollOffset: 0,
                    onTotalScrollBackOffset: 0,
                    alwaysTriggerOffsets: true
                }
                /*
                add scrollbar(s) on all elements matching the current selector, now and in the future 
                values: boolean, string 
                string values: "on" (enable), "once" (disable after first invocation), "off" (disable)
                liveSelector values: string (selector)
                    option						default
                    -------------------------------------
                    live						false
                    liveSelector				null
                */
            },





            /* 
            ----------------------------------------
            VARS, CONSTANTS 
            ----------------------------------------
            */

            totalInstances = 0, /* plugin instances amount */
            liveTimers = {}, /* live option timers */
            oldIE = (window.attachEvent && !window.addEventListener) ? 1 : 0, /* detect IE < 9 */
            touchActive = false, touchable, /* global touch vars (for touch and pointer events) */
            /* general plugin classes */
            classes = [
                "mCSB_dragger_onDrag", "mCSB_scrollTools_onDrag", "mCS_img_loaded", "mCS_disabled", "mCS_destroyed", "mCS_no_scrollbar",
                "mCS-autoHide", "mCS-dir-rtl", "mCS_no_scrollbar_y", "mCS_no_scrollbar_x", "mCS_y_hidden", "mCS_x_hidden", "mCSB_draggerContainer",
                "mCSB_buttonUp", "mCSB_buttonDown", "mCSB_buttonLeft", "mCSB_buttonRight"
            ],





            /* 
            ----------------------------------------
            METHODS 
            ----------------------------------------
            */

            methods = {

                /* 
                plugin initialization method 
                creates the scrollbar(s), plugin data object and options
                ----------------------------------------
                */

                init: function (options) {

                    var options = $.extend(true, {}, defaults, options),
                        selector = _selector.call(this); /* validate selector */

                    /* 
                    if live option is enabled, monitor for elements matching the current selector and 
                    apply scrollbar(s) when found (now and in the future) 
                    */
                    if (options.live) {
                        var liveSelector = options.liveSelector || this.selector || defaultSelector, /* live selector(s) */
                            $liveSelector = $(liveSelector); /* live selector(s) as jquery object */
                        if (options.live === "off") {
                            /* 
                            disable live if requested 
                            usage: $(selector).mCustomScrollbar({live:"off"}); 
                            */
                            removeLiveTimers(liveSelector);
                            return;
                        }
                        liveTimers[liveSelector] = setTimeout(function () {
                            /* call mCustomScrollbar fn on live selector(s) every half-second */
                            $liveSelector.mCustomScrollbar(options);
                            if (options.live === "once" && $liveSelector.length) {
                                /* disable live after first invocation */
                                removeLiveTimers(liveSelector);
                            }
                        }, 500);
                    } else {
                        removeLiveTimers(liveSelector);
                    }

                    /* options backward compatibility (for versions < 3.0.0) and normalization */
                    options.setWidth = (options.set_width) ? options.set_width : options.setWidth;
                    options.setHeight = (options.set_height) ? options.set_height : options.setHeight;
                    options.axis = (options.horizontalScroll) ? "x" : _findAxis(options.axis);
                    options.scrollInertia = options.scrollInertia > 0 && options.scrollInertia < 17 ? 17 : options.scrollInertia;
                    if (typeof options.mouseWheel !== "object" && options.mouseWheel == true) { /* old school mouseWheel option (non-object) */
                        options.mouseWheel = { enable: true, scrollAmount: "auto", axis: "y", preventDefault: false, deltaFactor: "auto", normalizeDelta: false, invert: false }
                    }
                    options.mouseWheel.scrollAmount = !options.mouseWheelPixels ? options.mouseWheel.scrollAmount : options.mouseWheelPixels;
                    options.mouseWheel.normalizeDelta = !options.advanced.normalizeMouseWheelDelta ? options.mouseWheel.normalizeDelta : options.advanced.normalizeMouseWheelDelta;
                    options.scrollButtons.scrollType = _findScrollButtonsType(options.scrollButtons.scrollType);

                    _theme(options); /* theme-specific options */

                    /* plugin constructor */
                    return $(selector).each(function () {

                        var $this = $(this);

                        if (!$this.data(pluginPfx)) { /* prevent multiple instantiations */

                            /* store options and create objects in jquery data */
                            $this.data(pluginPfx, {
                                idx: ++totalInstances, /* instance index */
                                opt: options, /* options */
                                scrollRatio: { y: null, x: null }, /* scrollbar to content ratio */
                                overflowed: null, /* overflowed axis */
                                contentReset: { y: null, x: null }, /* object to check when content resets */
                                bindEvents: false, /* object to check if events are bound */
                                tweenRunning: false, /* object to check if tween is running */
                                sequential: {}, /* sequential scrolling object */
                                langDir: $this.css("direction"), /* detect/store direction (ltr or rtl) */
                                cbOffsets: null, /* object to check whether callback offsets always trigger */
                                /* 
                                object to check how scrolling events where last triggered 
                                "internal" (default - triggered by this script), "external" (triggered by other scripts, e.g. via scrollTo method) 
                                usage: object.data("mCS").trigger
                                */
                                trigger: null,
                                /* 
                                object to check for changes in elements in order to call the update method automatically 
                                */
                                poll: { size: { o: 0, n: 0 }, img: { o: 0, n: 0 }, change: { o: 0, n: 0 } }
                            });

                            var d = $this.data(pluginPfx), o = d.opt,
                                /* HTML data attributes */
                                htmlDataAxis = $this.data("mcs-axis"), htmlDataSbPos = $this.data("mcs-scrollbar-position"), htmlDataTheme = $this.data("mcs-theme");

                            if (htmlDataAxis) { o.axis = htmlDataAxis; } /* usage example: data-mcs-axis="y" */
                            if (htmlDataSbPos) { o.scrollbarPosition = htmlDataSbPos; } /* usage example: data-mcs-scrollbar-position="outside" */
                            if (htmlDataTheme) { /* usage example: data-mcs-theme="minimal" */
                                o.theme = htmlDataTheme;
                                _theme(o); /* theme-specific options */
                            }

                            _pluginMarkup.call(this); /* add plugin markup */

                            if (d && o.callbacks.onCreate && typeof o.callbacks.onCreate === "function") { o.callbacks.onCreate.call(this); } /* callbacks: onCreate */

                            $("#mCSB_" + d.idx + "_container img:not(." + classes[2] + ")").addClass(classes[2]); /* flag loaded images */
                           
                            methods.update.call(null, $this); /* call the update method */

                        }

                    });

                },
                /* ---------------------------------------- */



                /* 
                plugin update method 
                updates content and scrollbar(s) values, events and status 
                ----------------------------------------
                usage: $(selector).mCustomScrollbar("update");
                */

                update: function (el, cb) {
                    var selector = el || _selector.call(this); /* validate selector */

                    return $(selector).each(function () {

                        var $this = $(this);

                        if ($this.data(pluginPfx)) { /* check if plugin has initialized */

                            var d = $this.data(pluginPfx), o = d.opt,
                                mCSB_container = $("#mCSB_" + d.idx + "_container"),
                                mCustomScrollBox = $("#mCSB_" + d.idx),
                                mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")];

                            if (!mCSB_container.length) { return; }

                            if (d.tweenRunning) { _stop($this); } /* stop any running tweens while updating */

                            if (cb && d && o.callbacks.onBeforeUpdate && typeof o.callbacks.onBeforeUpdate === "function") { o.callbacks.onBeforeUpdate.call(this); } /* callbacks: onBeforeUpdate */

                            /* if element was disabled or destroyed, remove class(es) */
                            if ($this.hasClass(classes[3])) { $this.removeClass(classes[3]); }
                            if ($this.hasClass(classes[4])) { $this.removeClass(classes[4]); }

                            /* css flexbox fix, detect/set max-height */
                            mCustomScrollBox.css("max-height", "none");
                            if (mCustomScrollBox.height() !== $this.height()) { mCustomScrollBox.css("max-height", $this.height()); }

                            _expandContentHorizontally.call(this); /* expand content horizontally */

                            if (o.axis !== "y" && !o.advanced.autoExpandHorizontalScroll) {
                                mCSB_container.css("width", _contentWidth(mCSB_container));
                            }

                            d.overflowed = _overflowed.call(this); /* determine if scrolling is required */

                            _scrollbarVisibility.call(this); /* show/hide scrollbar(s) */

                            /* auto-adjust scrollbar dragger length analogous to content */
                            if (o.autoDraggerLength) { _setDraggerLength.call(this); }

                            _scrollRatio.call(this); /* calculate and store scrollbar to content ratio */

                            _bindEvents.call(this); /* bind scrollbar events */

                            /* reset scrolling position and/or events */
                            var to = [Math.abs(mCSB_container[0].offsetTop), Math.abs(mCSB_container[0].offsetLeft)];
                            if (o.axis !== "x") { /* y/yx axis */
                                if (!d.overflowed[0]) { /* y scrolling is not required */
                                    _resetContentPosition.call(this); /* reset content position */
                                    if (o.axis === "y") {
                                        _unbindEvents.call(this);
                                    } else if (o.axis === "yx" && d.overflowed[1]) {
                                        _scrollTo($this, to[1].toString(), { dir: "x", dur: 0, overwrite: "none" });
                                    }
                                } else if (mCSB_dragger[0].height() > mCSB_dragger[0].parent().height()) {
                                    _resetContentPosition.call(this); /* reset content position */
                                } else { /* y scrolling is required */
                                    _scrollTo($this, to[0].toString(), { dir: "y", dur: 0, overwrite: "none" });
                                    d.contentReset.y = null;
                                }
                            }
                            if (o.axis !== "y") { /* x/yx axis */
                                if (!d.overflowed[1]) { /* x scrolling is not required */
                                    _resetContentPosition.call(this); /* reset content position */
                                    if (o.axis === "x") {
                                        _unbindEvents.call(this);
                                    } else if (o.axis === "yx" && d.overflowed[0]) {
                                        _scrollTo($this, to[0].toString(), { dir: "y", dur: 0, overwrite: "none" });
                                    }
                                } else if (mCSB_dragger[1].width() > mCSB_dragger[1].parent().width()) {
                                    _resetContentPosition.call(this); /* reset content position */
                                } else { /* x scrolling is required */
                                    _scrollTo($this, to[1].toString(), { dir: "x", dur: 0, overwrite: "none" });
                                    d.contentReset.x = null;
                                }
                            }

                            /* callbacks: onImageLoad, onSelectorChange, onUpdate */
                            if (cb && d) {
                                if (cb === 2 && o.callbacks.onImageLoad && typeof o.callbacks.onImageLoad === "function") {
                                    o.callbacks.onImageLoad.call(this);
                                } else if (cb === 3 && o.callbacks.onSelectorChange && typeof o.callbacks.onSelectorChange === "function") {
                                    o.callbacks.onSelectorChange.call(this);
                                } else if (o.callbacks.onUpdate && typeof o.callbacks.onUpdate === "function") {
                                    o.callbacks.onUpdate.call(this);
                                }
                            }

                            _autoUpdate.call(this); /* initialize automatic updating (for dynamic content, fluid layouts etc.) */

                        }

                    });

                },
                /* ---------------------------------------- */



                /* 
                plugin scrollTo method 
                triggers a scrolling event to a specific value
                ----------------------------------------
                usage: $(selector).mCustomScrollbar("scrollTo",value,options);
                */

                scrollTo: function (val, options) {

                    /* prevent silly things like $(selector).mCustomScrollbar("scrollTo",undefined); */
                    if (typeof val == "undefined" || val == null) { return; }

                    var selector = _selector.call(this); /* validate selector */

                    return $(selector).each(function () {

                        var $this = $(this);

                        if ($this.data(pluginPfx)) { /* check if plugin has initialized */

                            var d = $this.data(pluginPfx), o = d.opt,
                                /* method default options */
                                methodDefaults = {
                                    trigger: "external", /* method is by default triggered externally (e.g. from other scripts) */
                                    scrollInertia: o.scrollInertia, /* scrolling inertia (animation duration) */
                                    scrollEasing: "mcsEaseInOut", /* animation easing */
                                    moveDragger: false, /* move dragger instead of content */
                                    timeout: 60, /* scroll-to delay */
                                    callbacks: true, /* enable/disable callbacks */
                                    onStart: true,
                                    onUpdate: true,
                                    onComplete: true
                                },
                                methodOptions = $.extend(true, {}, methodDefaults, options),
                                to = _arr.call(this, val), dur = methodOptions.scrollInertia > 0 && methodOptions.scrollInertia < 17 ? 17 : methodOptions.scrollInertia;

                            /* translate yx values to actual scroll-to positions */
                            to[0] = _to.call(this, to[0], "y");
                            to[1] = _to.call(this, to[1], "x");

                            /* 
                            check if scroll-to value moves the dragger instead of content. 
                            Only pixel values apply on dragger (e.g. 100, "100px", "-=100" etc.) 
                            */
                            if (methodOptions.moveDragger) {
                                to[0] *= d.scrollRatio.y;
                                to[1] *= d.scrollRatio.x;
                            }

                            methodOptions.dur = _isTabHidden() ? 0 : dur; //skip animations if browser tab is hidden

                            setTimeout(function () {
                                /* do the scrolling */
                                if (to[0] !== null && typeof to[0] !== "undefined" && o.axis !== "x" && d.overflowed[0]) { /* scroll y */
                                    methodOptions.dir = "y";
                                    methodOptions.overwrite = "all";
                                    _scrollTo($this, to[0].toString(), methodOptions);
                                }
                                if (to[1] !== null && typeof to[1] !== "undefined" && o.axis !== "y" && d.overflowed[1]) { /* scroll x */
                                    methodOptions.dir = "x";
                                    methodOptions.overwrite = "none";
                                    _scrollTo($this, to[1].toString(), methodOptions);
                                }
                            }, methodOptions.timeout);

                        }

                    });

                },
                /* ---------------------------------------- */



                /*
                plugin stop method 
                stops scrolling animation
                ----------------------------------------
                usage: $(selector).mCustomScrollbar("stop");
                */
                stop: function () {

                    var selector = _selector.call(this); /* validate selector */

                    return $(selector).each(function () {

                        var $this = $(this);

                        if ($this.data(pluginPfx)) { /* check if plugin has initialized */

                            _stop($this);

                        }

                    });

                },
                /* ---------------------------------------- */



                /*
                plugin disable method 
                temporarily disables the scrollbar(s) 
                ----------------------------------------
                usage: $(selector).mCustomScrollbar("disable",reset); 
                reset (boolean): resets content position to 0 
                */
                disable: function (r) {

                    var selector = _selector.call(this); /* validate selector */

                    return $(selector).each(function () {

                        var $this = $(this);

                        if ($this.data(pluginPfx)) { /* check if plugin has initialized */

                            var d = $this.data(pluginPfx);

                            _autoUpdate.call(this, "remove"); /* remove automatic updating */

                            _unbindEvents.call(this); /* unbind events */

                            if (r) { _resetContentPosition.call(this); } /* reset content position */

                            _scrollbarVisibility.call(this, true); /* show/hide scrollbar(s) */

                            $this.addClass(classes[3]); /* add disable class */

                        }

                    });

                },
                /* ---------------------------------------- */



                /*
                plugin destroy method 
                completely removes the scrollbar(s) and returns the element to its original state
                ----------------------------------------
                usage: $(selector).mCustomScrollbar("destroy"); 
                */
                destroy: function () {

                    var selector = _selector.call(this); /* validate selector */

                    return $(selector).each(function () {

                        var $this = $(this);

                        if ($this.data(pluginPfx)) { /* check if plugin has initialized */

                            var d = $this.data(pluginPfx), o = d.opt,
                                mCustomScrollBox = $("#mCSB_" + d.idx),
                                mCSB_container = $("#mCSB_" + d.idx + "_container"),
                                scrollbar = $(".mCSB_" + d.idx + "_scrollbar");

                            if (o.live) { removeLiveTimers(o.liveSelector || $(selector).selector); } /* remove live timers */

                            _autoUpdate.call(this, "remove"); /* remove automatic updating */

                            _unbindEvents.call(this); /* unbind events */

                            _resetContentPosition.call(this); /* reset content position */

                            $this.removeData(pluginPfx); /* remove plugin data object */

                            _delete(this, "mcs"); /* delete callbacks object */

                            /* remove plugin markup */
                            scrollbar.remove(); /* remove scrollbar(s) first (those can be either inside or outside plugin's inner wrapper) */
                            mCSB_container.find("img." + classes[2]).removeClass(classes[2]); /* remove loaded images flag */
                            mCustomScrollBox.replaceWith(mCSB_container.contents()); /* replace plugin's inner wrapper with the original content */
                            /* remove plugin classes from the element and add destroy class */
                            $this.removeClass(pluginNS + " _" + pluginPfx + "_" + d.idx + " " + classes[6] + " " + classes[7] + " " + classes[5] + " " + classes[3]).addClass(classes[4]);

                        }

                    });

                }
                /* ---------------------------------------- */

            },





            /* 
            ----------------------------------------
            FUNCTIONS
            ----------------------------------------
            */

            /* validates selector (if selector is invalid or undefined uses the default one) */
            _selector = function () {
                return (typeof $(this) !== "object" || $(this).length < 1) ? defaultSelector : this;
            },
            /* -------------------- */


            /* changes options according to theme */
            _theme = function (obj) {
                var fixedSizeScrollbarThemes = ["rounded", "rounded-dark", "rounded-dots", "rounded-dots-dark"],
                    nonExpandedScrollbarThemes = ["rounded-dots", "rounded-dots-dark", "3d", "3d-dark", "3d-thick", "3d-thick-dark", "inset", "inset-dark", "inset-2", "inset-2-dark", "inset-3", "inset-3-dark"],
                    disabledScrollButtonsThemes = ["minimal", "minimal-dark"],
                    enabledAutoHideScrollbarThemes = ["minimal", "minimal-dark"],
                    scrollbarPositionOutsideThemes = ["minimal", "minimal-dark"];
                obj.autoDraggerLength = $.inArray(obj.theme, fixedSizeScrollbarThemes) > -1 ? false : obj.autoDraggerLength;
                obj.autoExpandScrollbar = $.inArray(obj.theme, nonExpandedScrollbarThemes) > -1 ? false : obj.autoExpandScrollbar;
                obj.scrollButtons.enable = $.inArray(obj.theme, disabledScrollButtonsThemes) > -1 ? false : obj.scrollButtons.enable;
                obj.autoHideScrollbar = $.inArray(obj.theme, enabledAutoHideScrollbarThemes) > -1 ? true : obj.autoHideScrollbar;
                obj.scrollbarPosition = $.inArray(obj.theme, scrollbarPositionOutsideThemes) > -1 ? "outside" : obj.scrollbarPosition;
            },
            /* -------------------- */


            /* live option timers removal */
            removeLiveTimers = function (selector) {
                if (liveTimers[selector]) {
                    clearTimeout(liveTimers[selector]);
                    _delete(liveTimers, selector);
                }
            },
            /* -------------------- */


            /* normalizes axis option to valid values: "y", "x", "yx" */
            _findAxis = function (val) {
                return (val === "yx" || val === "xy" || val === "auto") ? "yx" : (val === "x" || val === "horizontal") ? "x" : "y";
            },
            /* -------------------- */


            /* normalizes scrollButtons.scrollType option to valid values: "stepless", "stepped" */
            _findScrollButtonsType = function (val) {
                return (val === "stepped" || val === "pixels" || val === "step" || val === "click") ? "stepped" : "stepless";
            },
            /* -------------------- */


            /* generates plugin markup */
            _pluginMarkup = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    expandClass = o.autoExpandScrollbar ? " " + classes[1] + "_expand" : "",
                    scrollbar = ["<div id='mCSB_" + d.idx + "_scrollbar_vertical' class='mCSB_scrollTools mCSB_" + d.idx + "_scrollbar mCS-" + o.theme + " mCSB_scrollTools_vertical" + expandClass + "'><div class='" + classes[12] + "'><div id='mCSB_" + d.idx + "_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>", "<div id='mCSB_" + d.idx + "_scrollbar_horizontal' class='mCSB_scrollTools mCSB_" + d.idx + "_scrollbar mCS-" + o.theme + " mCSB_scrollTools_horizontal" + expandClass + "'><div class='" + classes[12] + "'><div id='mCSB_" + d.idx + "_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"],
                    wrapperClass = o.axis === "yx" ? "mCSB_vertical_horizontal" : o.axis === "x" ? "mCSB_horizontal" : "mCSB_vertical",
                    scrollbars = o.axis === "yx" ? scrollbar[0] + scrollbar[1] : o.axis === "x" ? scrollbar[1] : scrollbar[0],
                    contentWrapper = o.axis === "yx" ? "<div id='mCSB_" + d.idx + "_container_wrapper' class='mCSB_container_wrapper' />" : "",
                    autoHideClass = o.autoHideScrollbar ? " " + classes[6] : "",
                    scrollbarDirClass = (o.axis !== "x" && d.langDir === "rtl") ? " " + classes[7] : "";
                if (o.setWidth) { $this.css("width", o.setWidth); } /* set element width */
                if (o.setHeight) { $this.css("height", o.setHeight); } /* set element height */
                o.setLeft = (o.axis !== "y" && d.langDir === "rtl") ? "989999px" : o.setLeft; /* adjust left position for rtl direction */
                $this.addClass(pluginNS + " _" + pluginPfx + "_" + d.idx + autoHideClass + scrollbarDirClass).wrapInner("<div id='mCSB_" + d.idx + "' class='mCustomScrollBox mCS-" + o.theme + " " + wrapperClass + "'><div id='mCSB_" + d.idx + "_container' class='mCSB_container' style='position:relative; top:" + o.setTop + "; left:" + o.setLeft + ";' dir='" + d.langDir + "' /></div>");
                var mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container");
                if (o.axis !== "y" && !o.advanced.autoExpandHorizontalScroll) {
                    mCSB_container.css("width", _contentWidth(mCSB_container));
                }
                if (o.scrollbarPosition === "outside") {
                    if ($this.css("position") === "static") { /* requires elements with non-static position */
                        $this.css("position", "relative");
                    }
                    $this.css("overflow", "visible");
                    mCustomScrollBox.addClass("mCSB_outside").after(scrollbars);
                } else {
                    mCustomScrollBox.addClass("mCSB_inside").append(scrollbars);
                    mCSB_container.wrap(contentWrapper);
                }
                _scrollButtons.call(this); /* add scrollbar buttons */
                /* minimum dragger length */
                var mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")];
                mCSB_dragger[0].css("min-height", mCSB_dragger[0].height());
                mCSB_dragger[1].css("min-width", mCSB_dragger[1].width());
            },
            /* -------------------- */


            /* calculates content width */
            _contentWidth = function (el) {
                var val = [el[0].scrollWidth, Math.max.apply(Math, el.children().map(function () { return $(this).outerWidth(true); }).get())], w = el.parent().width();
                return val[0] > w ? val[0] : val[1] > w ? val[1] : "100%";
            },
            /* -------------------- */


            /* expands content horizontally */
            _expandContentHorizontally = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    mCSB_container = $("#mCSB_" + d.idx + "_container");
                if (o.advanced.autoExpandHorizontalScroll && o.axis !== "y") {
                    /* calculate scrollWidth */
                    mCSB_container.css({ "width": "auto", "min-width": 0, "overflow-x": "scroll" });
                    var w = Math.ceil(mCSB_container[0].scrollWidth);
                    if (o.advanced.autoExpandHorizontalScroll === 3 || (o.advanced.autoExpandHorizontalScroll !== 2 && w > mCSB_container.parent().width())) {
                        mCSB_container.css({ "width": w, "min-width": "100%", "overflow-x": "inherit" });
                    } else {
                        /* 
                        wrap content with an infinite width div and set its position to absolute and width to auto. 
                        Setting width to auto before calculating the actual width is important! 
                        We must let the browser set the width as browser zoom values are impossible to calculate.
                        */
                        mCSB_container.css({ "overflow-x": "inherit", "position": "absolute" })
                            .wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />")
                            .css({ /* set actual width, original position and un-wrap */
                                /* 
                                get the exact width (with decimals) and then round-up. 
                                Using jquery outerWidth() will round the width value which will mess up with inner elements that have non-integer width
                                */
                                "width": (Math.ceil(mCSB_container[0].getBoundingClientRect().right + 0.4) - Math.floor(mCSB_container[0].getBoundingClientRect().left)),
                                "min-width": "100%",
                                "position": "relative"
                            }).unwrap();
                    }
                }
            },
            /* -------------------- */


            /* adds scrollbar buttons */
            _scrollButtons = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    mCSB_scrollTools = $(".mCSB_" + d.idx + "_scrollbar:first"),
                    tabindex = !_isNumeric(o.scrollButtons.tabindex) ? "" : "tabindex='" + o.scrollButtons.tabindex + "'",
                    btnHTML = [
                        "<a href='#' class='" + classes[13] + "' " + tabindex + " />",
                        "<a href='#' class='" + classes[14] + "' " + tabindex + " />",
                        "<a href='#' class='" + classes[15] + "' " + tabindex + " />",
                        "<a href='#' class='" + classes[16] + "' " + tabindex + " />"
                    ],
                    btn = [(o.axis === "x" ? btnHTML[2] : btnHTML[0]), (o.axis === "x" ? btnHTML[3] : btnHTML[1]), btnHTML[2], btnHTML[3]];
                if (o.scrollButtons.enable) {
                    mCSB_scrollTools.prepend(btn[0]).append(btn[1]).next(".mCSB_scrollTools").prepend(btn[2]).append(btn[3]);
                }
            },
            /* -------------------- */


            /* auto-adjusts scrollbar dragger length */
            _setDraggerLength = function () {
                var $this = $(this), d = $this.data(pluginPfx),
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")],
                    ratio = [mCustomScrollBox.height() / mCSB_container.outerHeight(false), mCustomScrollBox.width() / mCSB_container.outerWidth(false)],
                    l = [
                        parseInt(mCSB_dragger[0].css("min-height")), Math.round(ratio[0] * mCSB_dragger[0].parent().height()),
                        parseInt(mCSB_dragger[1].css("min-width")), Math.round(ratio[1] * mCSB_dragger[1].parent().width())
                    ],
                    h = oldIE && (l[1] < l[0]) ? l[0] : l[1], w = oldIE && (l[3] < l[2]) ? l[2] : l[3];
                mCSB_dragger[0].css({
                    "height": h, "max-height": (mCSB_dragger[0].parent().height() - 10)
                }).find(".mCSB_dragger_bar").css({ "line-height": l[0] + "px" });
                mCSB_dragger[1].css({
                    "width": w, "max-width": (mCSB_dragger[1].parent().width() - 10)
                });
            },
            /* -------------------- */


            /* calculates scrollbar to content ratio */
            _scrollRatio = function () {
                var $this = $(this), d = $this.data(pluginPfx),
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")],
                    scrollAmount = [mCSB_container.outerHeight(false) - mCustomScrollBox.height(), mCSB_container.outerWidth(false) - mCustomScrollBox.width()],
                    ratio = [
                        scrollAmount[0] / (mCSB_dragger[0].parent().height() - mCSB_dragger[0].height()),
                        scrollAmount[1] / (mCSB_dragger[1].parent().width() - mCSB_dragger[1].width())
                    ];
                d.scrollRatio = { y: ratio[0], x: ratio[1] };
            },
            /* -------------------- */


            /* toggles scrolling classes */
            _onDragClasses = function (el, action, xpnd) {
                var expandClass = xpnd ? classes[0] + "_expanded" : "",
                    scrollbar = el.closest(".mCSB_scrollTools");
                if (action === "active") {
                    el.toggleClass(classes[0] + " " + expandClass); scrollbar.toggleClass(classes[1]);
                    el[0]._draggable = el[0]._draggable ? 0 : 1;
                } else {
                    if (!el[0]._draggable) {
                        if (action === "hide") {
                            el.removeClass(classes[0]); scrollbar.removeClass(classes[1]);
                        } else {
                            el.addClass(classes[0]); scrollbar.addClass(classes[1]);
                        }
                    }
                }
            },
            /* -------------------- */


            /* checks if content overflows its container to determine if scrolling is required */
            _overflowed = function () {
                var $this = $(this), d = $this.data(pluginPfx),
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    contentHeight = d.overflowed == null ? mCSB_container.height() : mCSB_container.outerHeight(false),
                    contentWidth = d.overflowed == null ? mCSB_container.width() : mCSB_container.outerWidth(false),
                    h = mCSB_container[0].scrollHeight, w = mCSB_container[0].scrollWidth;
                if (h > contentHeight) { contentHeight = h; }
                if (w > contentWidth) { contentWidth = w; }
                return [contentHeight > mCustomScrollBox.height(), contentWidth > mCustomScrollBox.width()];
            },
            /* -------------------- */


            /* resets content position to 0 */
            _resetContentPosition = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")];
                _stop($this); /* stop any current scrolling before resetting */
                if ((o.axis !== "x" && !d.overflowed[0]) || (o.axis === "y" && d.overflowed[0])) { /* reset y */
                    mCSB_dragger[0].add(mCSB_container).css("top", 0);
                    _scrollTo($this, "_resetY");
                }
                if ((o.axis !== "y" && !d.overflowed[1]) || (o.axis === "x" && d.overflowed[1])) { /* reset x */
                    var cx = dx = 0;
                    if (d.langDir === "rtl") { /* adjust left position for rtl direction */
                        cx = mCustomScrollBox.width() - mCSB_container.outerWidth(false);
                        dx = Math.abs(cx / d.scrollRatio.x);
                    }
                    mCSB_container.css("left", cx);
                    mCSB_dragger[1].css("left", dx);
                    _scrollTo($this, "_resetX");
                }
            },
            /* -------------------- */


            /* binds scrollbar events */
            _bindEvents = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt;
                if (!d.bindEvents) { /* check if events are already bound */
                    _draggable.call(this);
                    if (o.contentTouchScroll) { _contentDraggable.call(this); }
                    _selectable.call(this);
                    if (o.mouseWheel.enable) { /* bind mousewheel fn when plugin is available */
                        function _mwt() {
                            mousewheelTimeout = setTimeout(function () {
                                if (!$.event.special.mousewheel) {
                                    _mwt();
                                } else {
                                    clearTimeout(mousewheelTimeout);
                                    _mousewheel.call($this[0]);
                                }
                            }, 100);
                        }
                        var mousewheelTimeout;
                        _mwt();
                    }
                    _draggerRail.call(this);
                    _wrapperScroll.call(this);
                    if (o.advanced.autoScrollOnFocus) { _focus.call(this); }
                    if (o.scrollButtons.enable) { _buttons.call(this); }
                    if (o.keyboard.enable) { _keyboard.call(this); }
                    d.bindEvents = true;
                }
            },
            /* -------------------- */


            /* unbinds scrollbar events */
            _unbindEvents = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    namespace = pluginPfx + "_" + d.idx,
                    sb = ".mCSB_" + d.idx + "_scrollbar",
                    sel = $("#mCSB_" + d.idx + ",#mCSB_" + d.idx + "_container,#mCSB_" + d.idx + "_container_wrapper," + sb + " ." + classes[12] + ",#mCSB_" + d.idx + "_dragger_vertical,#mCSB_" + d.idx + "_dragger_horizontal," + sb + ">a"),
                    mCSB_container = $("#mCSB_" + d.idx + "_container");
                if (o.advanced.releaseDraggableSelectors) { sel.add($(o.advanced.releaseDraggableSelectors)); }
                if (o.advanced.extraDraggableSelectors) { sel.add($(o.advanced.extraDraggableSelectors)); }
                if (d.bindEvents) { /* check if events are bound */
                    /* unbind namespaced events from document/selectors */
                    $(document).add($(!_canAccessIFrame() || top.document)).unbind("." + namespace);
                    sel.each(function () {
                        $(this).unbind("." + namespace);
                    });
                    /* clear and delete timeouts/objects */
                    clearTimeout($this[0]._focusTimeout); _delete($this[0], "_focusTimeout");
                    clearTimeout(d.sequential.step); _delete(d.sequential, "step");
                    clearTimeout(mCSB_container[0].onCompleteTimeout); _delete(mCSB_container[0], "onCompleteTimeout");
                    d.bindEvents = false;
                }
            },
            /* -------------------- */


            /* toggles scrollbar visibility */
            _scrollbarVisibility = function (disabled) {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    contentWrapper = $("#mCSB_" + d.idx + "_container_wrapper"),
                    content = contentWrapper.length ? contentWrapper : $("#mCSB_" + d.idx + "_container"),
                    scrollbar = [$("#mCSB_" + d.idx + "_scrollbar_vertical"), $("#mCSB_" + d.idx + "_scrollbar_horizontal")],
                    mCSB_dragger = [scrollbar[0].find(".mCSB_dragger"), scrollbar[1].find(".mCSB_dragger")];
                if (o.axis !== "x") {
                    if (d.overflowed[0] && !disabled) {
                        scrollbar[0].add(mCSB_dragger[0]).add(scrollbar[0].children("a")).css("display", "block");
                        content.removeClass(classes[8] + " " + classes[10]);
                    } else {
                        if (o.alwaysShowScrollbar) {
                            if (o.alwaysShowScrollbar !== 2) { mCSB_dragger[0].css("display", "none"); }
                            content.removeClass(classes[10]);
                        } else {
                            scrollbar[0].css("display", "none");
                            content.addClass(classes[10]);
                        }
                        content.addClass(classes[8]);
                    }
                }
                if (o.axis !== "y") {
                    if (d.overflowed[1] && !disabled) {
                        scrollbar[1].add(mCSB_dragger[1]).add(scrollbar[1].children("a")).css("display", "block");
                        content.removeClass(classes[9] + " " + classes[11]);
                    } else {
                        if (o.alwaysShowScrollbar) {
                            if (o.alwaysShowScrollbar !== 2) { mCSB_dragger[1].css("display", "none"); }
                            content.removeClass(classes[11]);
                        } else {
                            scrollbar[1].css("display", "none");
                            content.addClass(classes[11]);
                        }
                        content.addClass(classes[9]);
                    }
                }
                if (!d.overflowed[0] && !d.overflowed[1]) {
                    $this.addClass(classes[5]);
                } else {
                    $this.removeClass(classes[5]);
                }
            },
            /* -------------------- */


            /* returns input coordinates of pointer, touch and mouse events (relative to document) */
            _coordinates = function (e) {
                var t = e.type, o = e.target.ownerDocument !== document && frameElement !== null ? [$(frameElement).offset().top, $(frameElement).offset().left] : null,
                    io = _canAccessIFrame() && e.target.ownerDocument !== top.document && frameElement !== null ? [$(e.view.frameElement).offset().top, $(e.view.frameElement).offset().left] : [0, 0];
                switch (t) {
                    case "pointerdown": case "MSPointerDown": case "pointermove": case "MSPointerMove": case "pointerup": case "MSPointerUp":
                        return o ? [e.originalEvent.pageY - o[0] + io[0], e.originalEvent.pageX - o[1] + io[1], false] : [e.originalEvent.pageY, e.originalEvent.pageX, false];
                        break;
                    case "touchstart": case "touchmove": case "touchend":
                        var touch = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],
                            touches = e.originalEvent.touches.length || e.originalEvent.changedTouches.length;
                        return e.target.ownerDocument !== document ? [touch.screenY, touch.screenX, touches > 1] : [touch.pageY, touch.pageX, touches > 1];
                        break;
                    default:
                        return o ? [e.pageY - o[0] + io[0], e.pageX - o[1] + io[1], false] : [e.pageY, e.pageX, false];
                }
            },
            /* -------------------- */


            /* 
            SCROLLBAR DRAG EVENTS
            scrolls content via scrollbar dragging 
            */
            _draggable = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    namespace = pluginPfx + "_" + d.idx,
                    draggerId = ["mCSB_" + d.idx + "_dragger_vertical", "mCSB_" + d.idx + "_dragger_horizontal"],
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    mCSB_dragger = $("#" + draggerId[0] + ",#" + draggerId[1]),
                    draggable, dragY, dragX,
                    rds = o.advanced.releaseDraggableSelectors ? mCSB_dragger.add($(o.advanced.releaseDraggableSelectors)) : mCSB_dragger,
                    eds = o.advanced.extraDraggableSelectors ? $(!_canAccessIFrame() || top.document).add($(o.advanced.extraDraggableSelectors)) : $(!_canAccessIFrame() || top.document);
                mCSB_dragger.bind("contextmenu." + namespace, function (e) {
                    e.preventDefault(); //prevent right click
                }).bind("mousedown." + namespace + " touchstart." + namespace + " pointerdown." + namespace + " MSPointerDown." + namespace, function (e) {
                    e.stopImmediatePropagation();
                    e.preventDefault();
                    if (!_mouseBtnLeft(e)) { return; } /* left mouse button only */
                    touchActive = true;
                    if (oldIE) { document.onselectstart = function () { return false; } } /* disable text selection for IE < 9 */
                    _iframe.call(mCSB_container, false); /* enable scrollbar dragging over iframes by disabling their events */
                    _stop($this);
                    draggable = $(this);
                    var offset = draggable.offset(), y = _coordinates(e)[0] - offset.top, x = _coordinates(e)[1] - offset.left,
                        h = draggable.height() + offset.top, w = draggable.width() + offset.left;
                    if (y < h && y > 0 && x < w && x > 0) {
                        dragY = y;
                        dragX = x;
                    }
                    _onDragClasses(draggable, "active", o.autoExpandScrollbar);
                }).bind("touchmove." + namespace, function (e) {
                    e.stopImmediatePropagation();
                    e.preventDefault();
                    var offset = draggable.offset(), y = _coordinates(e)[0] - offset.top, x = _coordinates(e)[1] - offset.left;
                    _drag(dragY, dragX, y, x);
                });
                $(document).add(eds).bind("mousemove." + namespace + " pointermove." + namespace + " MSPointerMove." + namespace, function (e) {
                    if (draggable) {
                        var offset = draggable.offset(), y = _coordinates(e)[0] - offset.top, x = _coordinates(e)[1] - offset.left;
                        if (dragY === y && dragX === x) { return; } /* has it really moved? */
                        _drag(dragY, dragX, y, x);
                    }
                }).add(rds).bind("mouseup." + namespace + " touchend." + namespace + " pointerup." + namespace + " MSPointerUp." + namespace, function (e) {
                    if (draggable) {
                        _onDragClasses(draggable, "active", o.autoExpandScrollbar);
                        draggable = null;
                    }
                    touchActive = false;
                    if (oldIE) { document.onselectstart = null; } /* enable text selection for IE < 9 */
                    _iframe.call(mCSB_container, true); /* enable iframes events */
                });
                function _drag(dragY, dragX, y, x) {
                    mCSB_container[0].idleTimer = o.scrollInertia < 233 ? 250 : 0;
                    if (draggable.attr("id") === draggerId[1]) {
                        var dir = "x", to = ((draggable[0].offsetLeft - dragX) + x) * d.scrollRatio.x;
                    } else {
                        var dir = "y", to = ((draggable[0].offsetTop - dragY) + y) * d.scrollRatio.y;
                    }
                    _scrollTo($this, to.toString(), { dir: dir, drag: true });
                }
            },
            /* -------------------- */


            /* 
            TOUCH SWIPE EVENTS
            scrolls content via touch swipe 
            Emulates the native touch-swipe scrolling with momentum found in iOS, Android and WP devices 
            */
            _contentDraggable = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    namespace = pluginPfx + "_" + d.idx,
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")],
                    draggable, dragY, dragX, touchStartY, touchStartX, touchMoveY = [], touchMoveX = [], startTime, runningTime, endTime, distance, speed, amount,
                    durA = 0, durB, overwrite = o.axis === "yx" ? "none" : "all", touchIntent = [], touchDrag, docDrag,
                    iframe = mCSB_container.find("iframe"),
                    events = [
                        "touchstart." + namespace + " pointerdown." + namespace + " MSPointerDown." + namespace, //start
                        "touchmove." + namespace + " pointermove." + namespace + " MSPointerMove." + namespace, //move
                        "touchend." + namespace + " pointerup." + namespace + " MSPointerUp." + namespace //end
                    ],
                    touchAction = document.body.style.touchAction !== undefined && document.body.style.touchAction !== "";
                mCSB_container.bind(events[0], function (e) {
                    _onTouchstart(e);
                }).bind(events[1], function (e) {
                    _onTouchmove(e);
                });
                mCustomScrollBox.bind(events[0], function (e) {
                    _onTouchstart2(e);
                }).bind(events[2], function (e) {
                    _onTouchend(e);
                });
                if (iframe.length) {
                    iframe.each(function () {
                        $(this).bind("load", function () {
                            /* bind events on accessible iframes */
                            if (_canAccessIFrame(this)) {
                                $(this.contentDocument || this.contentWindow.document).bind(events[0], function (e) {
                                    _onTouchstart(e);
                                    _onTouchstart2(e);
                                }).bind(events[1], function (e) {
                                    _onTouchmove(e);
                                }).bind(events[2], function (e) {
                                    _onTouchend(e);
                                });
                            }
                        });
                    });
                }
                function _onTouchstart(e) {
                    if (!_pointerTouch(e) || touchActive || _coordinates(e)[2]) { touchable = 0; return; }
                    touchable = 1; touchDrag = 0; docDrag = 0; draggable = 1;
                    $this.removeClass("mCS_touch_action");
                    var offset = mCSB_container.offset();
                    dragY = _coordinates(e)[0] - offset.top;
                    dragX = _coordinates(e)[1] - offset.left;
                    touchIntent = [_coordinates(e)[0], _coordinates(e)[1]];
                }
                function _onTouchmove(e) {
                    if (!_pointerTouch(e) || touchActive || _coordinates(e)[2]) { return; }
                    if (!o.documentTouchScroll) { e.preventDefault(); }
                    e.stopImmediatePropagation();
                    if (docDrag && !touchDrag) { return; }
                    if (draggable) {
                        runningTime = _getTime();
                        var offset = mCustomScrollBox.offset(), y = _coordinates(e)[0] - offset.top, x = _coordinates(e)[1] - offset.left,
                            easing = "mcsLinearOut";
                        touchMoveY.push(y);
                        touchMoveX.push(x);
                        touchIntent[2] = Math.abs(_coordinates(e)[0] - touchIntent[0]); touchIntent[3] = Math.abs(_coordinates(e)[1] - touchIntent[1]);
                        if (d.overflowed[0]) {
                            var limit = mCSB_dragger[0].parent().height() - mCSB_dragger[0].height(),
                                prevent = ((dragY - y) > 0 && (y - dragY) > -(limit * d.scrollRatio.y) && (touchIntent[3] * 2 < touchIntent[2] || o.axis === "yx"));
                        }
                        if (d.overflowed[1]) {
                            var limitX = mCSB_dragger[1].parent().width() - mCSB_dragger[1].width(),
                                preventX = ((dragX - x) > 0 && (x - dragX) > -(limitX * d.scrollRatio.x) && (touchIntent[2] * 2 < touchIntent[3] || o.axis === "yx"));
                        }
                        if (prevent || preventX) { /* prevent native document scrolling */
                            if (!touchAction) { e.preventDefault(); }
                            touchDrag = 1;
                        } else {
                            docDrag = 1;
                            $this.addClass("mCS_touch_action");
                        }
                        if (touchAction) { e.preventDefault(); }
                        amount = o.axis === "yx" ? [(dragY - y), (dragX - x)] : o.axis === "x" ? [null, (dragX - x)] : [(dragY - y), null];
                        mCSB_container[0].idleTimer = 250;
                        if (d.overflowed[0]) { _drag(amount[0], durA, easing, "y", "all", true); }
                        if (d.overflowed[1]) { _drag(amount[1], durA, easing, "x", overwrite, true); }
                    }
                }
                function _onTouchstart2(e) {
                    if (!_pointerTouch(e) || touchActive || _coordinates(e)[2]) { touchable = 0; return; }
                    touchable = 1;
                    e.stopImmediatePropagation();
                    _stop($this);
                    startTime = _getTime();
                    var offset = mCustomScrollBox.offset();
                    touchStartY = _coordinates(e)[0] - offset.top;
                    touchStartX = _coordinates(e)[1] - offset.left;
                    touchMoveY = []; touchMoveX = [];
                }
                function _onTouchend(e) {
                    if (!_pointerTouch(e) || touchActive || _coordinates(e)[2]) { return; }
                    draggable = 0;
                    e.stopImmediatePropagation();
                    touchDrag = 0; docDrag = 0;
                    endTime = _getTime();
                    var offset = mCustomScrollBox.offset(), y = _coordinates(e)[0] - offset.top, x = _coordinates(e)[1] - offset.left;
                    if ((endTime - runningTime) > 30) { return; }
                    speed = 1000 / (endTime - startTime);
                    var easing = "mcsEaseOut", slow = speed < 2.5,
                        diff = slow ? [touchMoveY[touchMoveY.length - 2], touchMoveX[touchMoveX.length - 2]] : [0, 0];
                    distance = slow ? [(y - diff[0]), (x - diff[1])] : [y - touchStartY, x - touchStartX];
                    var absDistance = [Math.abs(distance[0]), Math.abs(distance[1])];
                    speed = slow ? [Math.abs(distance[0] / 4), Math.abs(distance[1] / 4)] : [speed, speed];
                    var a = [
                        Math.abs(mCSB_container[0].offsetTop) - (distance[0] * _m((absDistance[0] / speed[0]), speed[0])),
                        Math.abs(mCSB_container[0].offsetLeft) - (distance[1] * _m((absDistance[1] / speed[1]), speed[1]))
                    ];
                    amount = o.axis === "yx" ? [a[0], a[1]] : o.axis === "x" ? [null, a[1]] : [a[0], null];
                    durB = [(absDistance[0] * 4) + o.scrollInertia, (absDistance[1] * 4) + o.scrollInertia];
                    var md = parseInt(o.contentTouchScroll) || 0; /* absolute minimum distance required */
                    amount[0] = absDistance[0] > md ? amount[0] : 0;
                    amount[1] = absDistance[1] > md ? amount[1] : 0;
                    if (d.overflowed[0]) { _drag(amount[0], durB[0], easing, "y", overwrite, false); }
                    if (d.overflowed[1]) { _drag(amount[1], durB[1], easing, "x", overwrite, false); }
                }
                function _m(ds, s) {
                    var r = [s * 1.5, s * 2, s / 1.5, s / 2];
                    if (ds > 90) {
                        return s > 4 ? r[0] : r[3];
                    } else if (ds > 60) {
                        return s > 3 ? r[3] : r[2];
                    } else if (ds > 30) {
                        return s > 8 ? r[1] : s > 6 ? r[0] : s > 4 ? s : r[2];
                    } else {
                        return s > 8 ? s : r[3];
                    }
                }
                function _drag(amount, dur, easing, dir, overwrite, drag) {
                    if (!amount) { return; }
                    _scrollTo($this, amount.toString(), { dur: dur, scrollEasing: easing, dir: dir, overwrite: overwrite, drag: drag });
                }
            },
            /* -------------------- */


            /* 
            SELECT TEXT EVENTS 
            scrolls content when text is selected 
            */
            _selectable = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt, seq = d.sequential,
                    namespace = pluginPfx + "_" + d.idx,
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent(),
                    action;
                mCSB_container.bind("mousedown." + namespace, function (e) {
                    if (touchable) { return; }
                    if (!action) { action = 1; touchActive = true; }
                }).add(document).bind("mousemove." + namespace, function (e) {
                    if (!touchable && action && _sel()) {
                        var offset = mCSB_container.offset(),
                            y = _coordinates(e)[0] - offset.top + mCSB_container[0].offsetTop, x = _coordinates(e)[1] - offset.left + mCSB_container[0].offsetLeft;
                        if (y > 0 && y < wrapper.height() && x > 0 && x < wrapper.width()) {
                            if (seq.step) { _seq("off", null, "stepped"); }
                        } else {
                            if (o.axis !== "x" && d.overflowed[0]) {
                                if (y < 0) {
                                    _seq("on", 38);
                                } else if (y > wrapper.height()) {
                                    _seq("on", 40);
                                }
                            }
                            if (o.axis !== "y" && d.overflowed[1]) {
                                if (x < 0) {
                                    _seq("on", 37);
                                } else if (x > wrapper.width()) {
                                    _seq("on", 39);
                                }
                            }
                        }
                    }
                }).bind("mouseup." + namespace + " dragend." + namespace, function (e) {
                    if (touchable) { return; }
                    if (action) { action = 0; _seq("off", null); }
                    touchActive = false;
                });
                function _sel() {
                    return window.getSelection ? window.getSelection().toString() :
                        document.selection && document.selection.type != "Control" ? document.selection.createRange().text : 0;
                }
                function _seq(a, c, s) {
                    seq.type = s && action ? "stepped" : "stepless";
                    seq.scrollAmount = 10;
                    _sequentialScroll($this, a, c, "mcsLinearOut", s ? 60 : null);
                }
            },
            /* -------------------- */


            /* 
            MOUSE WHEEL EVENT
            scrolls content via mouse-wheel 
            via mouse-wheel plugin (https://github.com/brandonaaron/jquery-mousewheel)
            */
            _mousewheel = function () {
                if (!$(this).data(pluginPfx)) { return; } /* Check if the scrollbar is ready to use mousewheel events (issue: #185) */
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    namespace = pluginPfx + "_" + d.idx,
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_dragger = [$("#mCSB_" + d.idx + "_dragger_vertical"), $("#mCSB_" + d.idx + "_dragger_horizontal")],
                    iframe = $("#mCSB_" + d.idx + "_container").find("iframe");
                if (iframe.length) {
                    iframe.each(function () {
                        $(this).bind("load", function () {
                            /* bind events on accessible iframes */
                            if (_canAccessIFrame(this)) {
                                $(this.contentDocument || this.contentWindow.document).bind("mousewheel." + namespace, function (e, delta) {
                                    _onMousewheel(e, delta);
                                });
                            }
                        });
                    });
                }
                mCustomScrollBox.bind("mousewheel." + namespace, function (e, delta) {
                    _onMousewheel(e, delta);
                });
                function _onMousewheel(e, delta) {
                    _stop($this);
                    if (_disableMousewheel($this, e.target)) { return; } /* disables mouse-wheel when hovering specific elements */
                    var deltaFactor = o.mouseWheel.deltaFactor !== "auto" ? parseInt(o.mouseWheel.deltaFactor) : (oldIE && e.deltaFactor < 100) ? 100 : e.deltaFactor || 100,
                        dur = o.scrollInertia;
                    if (o.axis === "x" || o.mouseWheel.axis === "x") {
                        var dir = "x",
                            px = [Math.round(deltaFactor * d.scrollRatio.x), parseInt(o.mouseWheel.scrollAmount)],
                            amount = o.mouseWheel.scrollAmount !== "auto" ? px[1] : px[0] >= mCustomScrollBox.width() ? mCustomScrollBox.width() * 0.9 : px[0],
                            contentPos = Math.abs($("#mCSB_" + d.idx + "_container")[0].offsetLeft),
                            draggerPos = mCSB_dragger[1][0].offsetLeft,
                            limit = mCSB_dragger[1].parent().width() - mCSB_dragger[1].width(),
                            dlt = o.mouseWheel.axis === "y" ? (e.deltaY || delta) : e.deltaX;
                    } else {
                        var dir = "y",
                            px = [Math.round(deltaFactor * d.scrollRatio.y), parseInt(o.mouseWheel.scrollAmount)],
                            amount = o.mouseWheel.scrollAmount !== "auto" ? px[1] : px[0] >= mCustomScrollBox.height() ? mCustomScrollBox.height() * 0.9 : px[0],
                            contentPos = Math.abs($("#mCSB_" + d.idx + "_container")[0].offsetTop),
                            draggerPos = mCSB_dragger[0][0].offsetTop,
                            limit = mCSB_dragger[0].parent().height() - mCSB_dragger[0].height(),
                            dlt = e.deltaY || delta;
                    }
                    if ((dir === "y" && !d.overflowed[0]) || (dir === "x" && !d.overflowed[1])) { return; }
                    if (o.mouseWheel.invert || e.webkitDirectionInvertedFromDevice) { dlt = -dlt; }
                    if (o.mouseWheel.normalizeDelta) { dlt = dlt < 0 ? -1 : 1; }
                    if ((dlt > 0 && draggerPos !== 0) || (dlt < 0 && draggerPos !== limit) || o.mouseWheel.preventDefault) {
                        e.stopImmediatePropagation();
                        e.preventDefault();
                    }
                    if (e.deltaFactor < 5 && !o.mouseWheel.normalizeDelta) {
                        //very low deltaFactor values mean some kind of delta acceleration (e.g. osx trackpad), so adjusting scrolling accordingly
                        amount = e.deltaFactor; dur = 17;
                    }
                    _scrollTo($this, (contentPos - (dlt * amount)).toString(), { dir: dir, dur: dur });
                }
            },
            /* -------------------- */


            /* checks if iframe can be accessed */
            _canAccessIFrameCache = new Object(),
            _canAccessIFrame = function (iframe) {
                var result = false, cacheKey = false, html = null;
                if (iframe === undefined) {
                    cacheKey = "#empty";
                } else if ($(iframe).attr("id") !== undefined) {
                    cacheKey = $(iframe).attr("id");
                }
                if (cacheKey !== false && _canAccessIFrameCache[cacheKey] !== undefined) {
                    return _canAccessIFrameCache[cacheKey];
                }
                if (!iframe) {
                    try {
                        var doc = top.document;
                        html = doc.body.innerHTML;
                    } catch (err) {/* do nothing */ }
                    result = (html !== null);
                } else {
                    try {
                        var doc = iframe.contentDocument || iframe.contentWindow.document;
                        html = doc.body.innerHTML;
                    } catch (err) {/* do nothing */ }
                    result = (html !== null);
                }
                if (cacheKey !== false) { _canAccessIFrameCache[cacheKey] = result; }
                return result;
            },
            /* -------------------- */


            /* switches iframe's pointer-events property (drag, mousewheel etc. over cross-domain iframes) */
            _iframe = function (evt) {
                var el = this.find("iframe");
                if (!el.length) { return; } /* check if content contains iframes */
                var val = !evt ? "none" : "auto";
                el.css("pointer-events", val); /* for IE11, iframe's display property should not be "block" */
            },
            /* -------------------- */


            /* disables mouse-wheel when hovering specific elements like select, datalist etc. */
            _disableMousewheel = function (el, target) {
                var tag = target.nodeName.toLowerCase(),
                    tags = el.data(pluginPfx).opt.mouseWheel.disableOver,
                    /* elements that require focus */
                    focusTags = ["select", "textarea"];
                return $.inArray(tag, tags) > -1 && !($.inArray(tag, focusTags) > -1 && !$(target).is(":focus"));
            },
            /* -------------------- */


            /* 
            DRAGGER RAIL CLICK EVENT
            scrolls content via dragger rail 
            */
            _draggerRail = function () {
                var $this = $(this), d = $this.data(pluginPfx),
                    namespace = pluginPfx + "_" + d.idx,
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent(),
                    mCSB_draggerContainer = $(".mCSB_" + d.idx + "_scrollbar ." + classes[12]),
                    clickable;
                mCSB_draggerContainer.bind("mousedown." + namespace + " touchstart." + namespace + " pointerdown." + namespace + " MSPointerDown." + namespace, function (e) {
                    touchActive = true;
                    if (!$(e.target).hasClass("mCSB_dragger")) { clickable = 1; }
                }).bind("touchend." + namespace + " pointerup." + namespace + " MSPointerUp." + namespace, function (e) {
                    touchActive = false;
                }).bind("click." + namespace, function (e) {
                    if (!clickable) { return; }
                    clickable = 0;
                    if ($(e.target).hasClass(classes[12]) || $(e.target).hasClass("mCSB_draggerRail")) {
                        _stop($this);
                        var el = $(this), mCSB_dragger = el.find(".mCSB_dragger");
                        if (el.parent(".mCSB_scrollTools_horizontal").length > 0) {
                            if (!d.overflowed[1]) { return; }
                            var dir = "x",
                                clickDir = e.pageX > mCSB_dragger.offset().left ? -1 : 1,
                                to = Math.abs(mCSB_container[0].offsetLeft) - (clickDir * (wrapper.width() * 0.9));
                        } else {
                            if (!d.overflowed[0]) { return; }
                            var dir = "y",
                                clickDir = e.pageY > mCSB_dragger.offset().top ? -1 : 1,
                                to = Math.abs(mCSB_container[0].offsetTop) - (clickDir * (wrapper.height() * 0.9));
                        }
                        _scrollTo($this, to.toString(), { dir: dir, scrollEasing: "mcsEaseInOut" });
                    }
                });
            },
            /* -------------------- */


            /* 
            FOCUS EVENT
            scrolls content via element focus (e.g. clicking an input, pressing TAB key etc.)
            */
            _focus = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    namespace = pluginPfx + "_" + d.idx,
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent();
                mCSB_container.bind("focusin." + namespace, function (e) {
                    var el = $(document.activeElement),
                        nested = mCSB_container.find(".mCustomScrollBox").length,
                        dur = 0;
                    if (!el.is(o.advanced.autoScrollOnFocus)) { return; }
                    _stop($this);
                    clearTimeout($this[0]._focusTimeout);
                    $this[0]._focusTimer = nested ? (dur + 17) * nested : 0;
                    $this[0]._focusTimeout = setTimeout(function () {
                        var to = [_childPos(el)[0], _childPos(el)[1]],
                            contentPos = [mCSB_container[0].offsetTop, mCSB_container[0].offsetLeft],
                            isVisible = [
                                (contentPos[0] + to[0] >= 0 && contentPos[0] + to[0] < wrapper.height() - el.outerHeight(false)),
                                (contentPos[1] + to[1] >= 0 && contentPos[0] + to[1] < wrapper.width() - el.outerWidth(false))
                            ],
                            overwrite = (o.axis === "yx" && !isVisible[0] && !isVisible[1]) ? "none" : "all";
                        if (o.axis !== "x" && !isVisible[0]) {
                            _scrollTo($this, to[0].toString(), { dir: "y", scrollEasing: "mcsEaseInOut", overwrite: overwrite, dur: dur });
                        }
                        if (o.axis !== "y" && !isVisible[1]) {
                            _scrollTo($this, to[1].toString(), { dir: "x", scrollEasing: "mcsEaseInOut", overwrite: overwrite, dur: dur });
                        }
                    }, $this[0]._focusTimer);
                });
            },
            /* -------------------- */


            /* sets content wrapper scrollTop/scrollLeft always to 0 */
            _wrapperScroll = function () {
                var $this = $(this), d = $this.data(pluginPfx),
                    namespace = pluginPfx + "_" + d.idx,
                    wrapper = $("#mCSB_" + d.idx + "_container").parent();
                wrapper.bind("scroll." + namespace, function (e) {
                    if (wrapper.scrollTop() !== 0 || wrapper.scrollLeft() !== 0) {
                        $(".mCSB_" + d.idx + "_scrollbar").css("visibility", "hidden"); /* hide scrollbar(s) */
                    }
                });
            },
            /* -------------------- */


            /* 
            BUTTONS EVENTS
            scrolls content via up, down, left and right buttons 
            */
            _buttons = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt, seq = d.sequential,
                    namespace = pluginPfx + "_" + d.idx,
                    sel = ".mCSB_" + d.idx + "_scrollbar",
                    btn = $(sel + ">a");
                btn.bind("contextmenu." + namespace, function (e) {
                    e.preventDefault(); //prevent right click
                }).bind("mousedown." + namespace + " touchstart." + namespace + " pointerdown." + namespace + " MSPointerDown." + namespace + " mouseup." + namespace + " touchend." + namespace + " pointerup." + namespace + " MSPointerUp." + namespace + " mouseout." + namespace + " pointerout." + namespace + " MSPointerOut." + namespace + " click." + namespace, function (e) {
                    e.preventDefault();
                    if (!_mouseBtnLeft(e)) { return; } /* left mouse button only */
                    var btnClass = $(this).attr("class");
                    seq.type = o.scrollButtons.scrollType;
                    switch (e.type) {
                        case "mousedown": case "touchstart": case "pointerdown": case "MSPointerDown":
                            if (seq.type === "stepped") { return; }
                            touchActive = true;
                            d.tweenRunning = false;
                            _seq("on", btnClass);
                            break;
                        case "mouseup": case "touchend": case "pointerup": case "MSPointerUp":
                        case "mouseout": case "pointerout": case "MSPointerOut":
                            if (seq.type === "stepped") { return; }
                            touchActive = false;
                            if (seq.dir) { _seq("off", btnClass); }
                            break;
                        case "click":
                            if (seq.type !== "stepped" || d.tweenRunning) { return; }
                            _seq("on", btnClass);
                            break;
                    }
                    function _seq(a, c) {
                        seq.scrollAmount = o.scrollButtons.scrollAmount;
                        _sequentialScroll($this, a, c);
                    }
                });
            },
            /* -------------------- */


            /* 
            KEYBOARD EVENTS
            scrolls content via keyboard 
            Keys: up arrow, down arrow, left arrow, right arrow, PgUp, PgDn, Home, End
            */
            _keyboard = function () {
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt, seq = d.sequential,
                    namespace = pluginPfx + "_" + d.idx,
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent(),
                    editables = "input,textarea,select,datalist,keygen,[contenteditable='true']",
                    iframe = mCSB_container.find("iframe"),
                    events = ["blur." + namespace + " keydown." + namespace + " keyup." + namespace];
                if (iframe.length) {
                    iframe.each(function () {
                        $(this).bind("load", function () {
                            /* bind events on accessible iframes */
                            if (_canAccessIFrame(this)) {
                                $(this.contentDocument || this.contentWindow.document).bind(events[0], function (e) {
                                    _onKeyboard(e);
                                });
                            }
                        });
                    });
                }
                mCustomScrollBox.attr("tabindex", "0").bind(events[0], function (e) {
                    _onKeyboard(e);
                });
                function _onKeyboard(e) {
                    switch (e.type) {
                        case "blur":
                            if (d.tweenRunning && seq.dir) { _seq("off", null); }
                            break;
                        case "keydown": case "keyup":
                            var code = e.keyCode ? e.keyCode : e.which, action = "on";
                            if ((o.axis !== "x" && (code === 38 || code === 40)) || (o.axis !== "y" && (code === 37 || code === 39))) {
                                /* up (38), down (40), left (37), right (39) arrows */
                                if (((code === 38 || code === 40) && !d.overflowed[0]) || ((code === 37 || code === 39) && !d.overflowed[1])) { return; }
                                if (e.type === "keyup") { action = "off"; }
                                if (!$(document.activeElement).is(editables)) {
                                    e.preventDefault();
                                    e.stopImmediatePropagation();
                                    _seq(action, code);
                                }
                            } else if (code === 33 || code === 34) {
                                /* PgUp (33), PgDn (34) */
                                if (d.overflowed[0] || d.overflowed[1]) {
                                    e.preventDefault();
                                    e.stopImmediatePropagation();
                                }
                                if (e.type === "keyup") {
                                    _stop($this);
                                    var keyboardDir = code === 34 ? -1 : 1;
                                    if (o.axis === "x" || (o.axis === "yx" && d.overflowed[1] && !d.overflowed[0])) {
                                        var dir = "x", to = Math.abs(mCSB_container[0].offsetLeft) - (keyboardDir * (wrapper.width() * 0.9));
                                    } else {
                                        var dir = "y", to = Math.abs(mCSB_container[0].offsetTop) - (keyboardDir * (wrapper.height() * 0.9));
                                    }
                                    _scrollTo($this, to.toString(), { dir: dir, scrollEasing: "mcsEaseInOut" });
                                }
                            } else if (code === 35 || code === 36) {
                                /* End (35), Home (36) */
                                if (!$(document.activeElement).is(editables)) {
                                    if (d.overflowed[0] || d.overflowed[1]) {
                                        e.preventDefault();
                                        e.stopImmediatePropagation();
                                    }
                                    if (e.type === "keyup") {
                                        if (o.axis === "x" || (o.axis === "yx" && d.overflowed[1] && !d.overflowed[0])) {
                                            var dir = "x", to = code === 35 ? Math.abs(wrapper.width() - mCSB_container.outerWidth(false)) : 0;
                                        } else {
                                            var dir = "y", to = code === 35 ? Math.abs(wrapper.height() - mCSB_container.outerHeight(false)) : 0;
                                        }
                                        _scrollTo($this, to.toString(), { dir: dir, scrollEasing: "mcsEaseInOut" });
                                    }
                                }
                            }
                            break;
                    }
                    function _seq(a, c) {
                        seq.type = o.keyboard.scrollType;
                        seq.scrollAmount = o.keyboard.scrollAmount;
                        if (seq.type === "stepped" && d.tweenRunning) { return; }
                        _sequentialScroll($this, a, c);
                    }
                }
            },
            /* -------------------- */


            /* scrolls content sequentially (used when scrolling via buttons, keyboard arrows etc.) */
            _sequentialScroll = function (el, action, trigger, e, s) {
                var d = el.data(pluginPfx), o = d.opt, seq = d.sequential,
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    once = seq.type === "stepped" ? true : false,
                    steplessSpeed = o.scrollInertia < 26 ? 26 : o.scrollInertia, /* 26/1.5=17 */
                    steppedSpeed = o.scrollInertia < 1 ? 17 : o.scrollInertia;
                switch (action) {
                    case "on":
                        seq.dir = [
                            (trigger === classes[16] || trigger === classes[15] || trigger === 39 || trigger === 37 ? "x" : "y"),
                            (trigger === classes[13] || trigger === classes[15] || trigger === 38 || trigger === 37 ? -1 : 1)
                        ];
                        _stop(el);
                        if (_isNumeric(trigger) && seq.type === "stepped") { return; }
                        _on(once);
                        break;
                    case "off":
                        _off();
                        if (once || (d.tweenRunning && seq.dir)) {
                            _on(true);
                        }
                        break;
                }

                /* starts sequence */
                function _on(once) {
                    if (o.snapAmount) { seq.scrollAmount = !(o.snapAmount instanceof Array) ? o.snapAmount : seq.dir[0] === "x" ? o.snapAmount[1] : o.snapAmount[0]; } /* scrolling snapping */
                    var c = seq.type !== "stepped", /* continuous scrolling */
                        t = s ? s : !once ? 1000 / 60 : c ? steplessSpeed / 1.5 : steppedSpeed, /* timer */
                        m = !once ? 2.5 : c ? 7.5 : 40, /* multiplier */
                        contentPos = [Math.abs(mCSB_container[0].offsetTop), Math.abs(mCSB_container[0].offsetLeft)],
                        ratio = [d.scrollRatio.y > 10 ? 10 : d.scrollRatio.y, d.scrollRatio.x > 10 ? 10 : d.scrollRatio.x],
                        amount = seq.dir[0] === "x" ? contentPos[1] + (seq.dir[1] * (ratio[1] * m)) : contentPos[0] + (seq.dir[1] * (ratio[0] * m)),
                        px = seq.dir[0] === "x" ? contentPos[1] + (seq.dir[1] * parseInt(seq.scrollAmount)) : contentPos[0] + (seq.dir[1] * parseInt(seq.scrollAmount)),
                        to = seq.scrollAmount !== "auto" ? px : amount,
                        easing = e ? e : !once ? "mcsLinear" : c ? "mcsLinearOut" : "mcsEaseInOut",
                        onComplete = !once ? false : true;
                    if (once && t < 17) {
                        to = seq.dir[0] === "x" ? contentPos[1] : contentPos[0];
                    }
                    _scrollTo(el, to.toString(), { dir: seq.dir[0], scrollEasing: easing, dur: t, onComplete: onComplete });
                    if (once) {
                        seq.dir = false;
                        return;
                    }
                    clearTimeout(seq.step);
                    seq.step = setTimeout(function () {
                        _on();
                    }, t);
                }
                /* stops sequence */
                function _off() {
                    clearTimeout(seq.step);
                    _delete(seq, "step");
                    _stop(el);
                }
            },
            /* -------------------- */


            /* returns a yx array from value */
            _arr = function (val) {
                var o = $(this).data(pluginPfx).opt, vals = [];
                if (typeof val === "function") { val = val(); } /* check if the value is a single anonymous function */
                /* check if value is object or array, its length and create an array with yx values */
                if (!(val instanceof Array)) { /* object value (e.g. {y:"100",x:"100"}, 100 etc.) */
                    vals[0] = val.y ? val.y : val.x || o.axis === "x" ? null : val;
                    vals[1] = val.x ? val.x : val.y || o.axis === "y" ? null : val;
                } else { /* array value (e.g. [100,100]) */
                    vals = val.length > 1 ? [val[0], val[1]] : o.axis === "x" ? [null, val[0]] : [val[0], null];
                }
                /* check if array values are anonymous functions */
                if (typeof vals[0] === "function") { vals[0] = vals[0](); }
                if (typeof vals[1] === "function") { vals[1] = vals[1](); }
                return vals;
            },
            /* -------------------- */


            /* translates values (e.g. "top", 100, "100px", "#id") to actual scroll-to positions */
            _to = function (val, dir) {
                if (val == null || typeof val == "undefined") { return; }
                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent(),
                    t = typeof val;
                if (!dir) { dir = o.axis === "x" ? "x" : "y"; }
                var contentLength = dir === "x" ? mCSB_container.outerWidth(false) - wrapper.width() : mCSB_container.outerHeight(false) - wrapper.height(),
                    contentPos = dir === "x" ? mCSB_container[0].offsetLeft : mCSB_container[0].offsetTop,
                    cssProp = dir === "x" ? "left" : "top";
                switch (t) {
                    case "function": /* this currently is not used. Consider removing it */
                        return val();
                        break;
                    case "object": /* js/jquery object */
                        var obj = val.jquery ? val : $(val);
                        if (!obj.length) { return; }
                        return dir === "x" ? _childPos(obj)[1] : _childPos(obj)[0];
                        break;
                    case "string": case "number":
                        if (_isNumeric(val)) { /* numeric value */
                            return Math.abs(val);
                        } else if (val.indexOf("%") !== -1) { /* percentage value */
                            return Math.abs(contentLength * parseInt(val) / 100);
                        } else if (val.indexOf("-=") !== -1) { /* decrease value */
                            return Math.abs(contentPos - parseInt(val.split("-=")[1]));
                        } else if (val.indexOf("+=") !== -1) { /* inrease value */
                            var p = (contentPos + parseInt(val.split("+=")[1]));
                            return p >= 0 ? 0 : Math.abs(p);
                        } else if (val.indexOf("px") !== -1 && _isNumeric(val.split("px")[0])) { /* pixels string value (e.g. "100px") */
                            return Math.abs(val.split("px")[0]);
                        } else {
                            if (val === "top" || val === "left") { /* special strings */
                                return 0;
                            } else if (val === "bottom") {
                                return Math.abs(wrapper.height() - mCSB_container.outerHeight(false));
                            } else if (val === "right") {
                                return Math.abs(wrapper.width() - mCSB_container.outerWidth(false));
                            } else if (val === "first" || val === "last") {
                                var obj = mCSB_container.find(":" + val);
                                return dir === "x" ? _childPos(obj)[1] : _childPos(obj)[0];
                            } else {
                                if ($(val).length) { /* jquery selector */
                                    return dir === "x" ? _childPos($(val))[1] : _childPos($(val))[0];
                                } else { /* other values (e.g. "100em") */
                                    mCSB_container.css(cssProp, val);
                                    methods.update.call(null, $this[0]);
                                    return;
                                }
                            }
                        }
                        break;
                }
            },
            /* -------------------- */


            /* calls the update method automatically */
            _autoUpdate = function (rem) {

                var $this = $(this), d = $this.data(pluginPfx), o = d.opt,
                    mCSB_container = $("#mCSB_" + d.idx + "_container");
                if (rem) {
                    /* 
                    removes autoUpdate timer 
                    usage: _autoUpdate.call(this,"remove");
                    */
                    clearTimeout(mCSB_container[0].autoUpdate);
                    _delete(mCSB_container[0], "autoUpdate");
                    return;
                }
                upd();
                function upd() {
                    clearTimeout(mCSB_container[0].autoUpdate);
                    if ($this.parents("html").length === 0) {
                        /* check element in dom tree */
                        $this = null;
                        return;
                    }

                    mCSB_container[0].autoUpdate = setTimeout(function () {
                        /* update on specific selector(s) length and size change */
                        if (o.advanced.updateOnSelectorChange) {
                            d.poll.change.n = sizesSum();
                            if (d.poll.change.n !== d.poll.change.o) {
                                d.poll.change.o = d.poll.change.n;
                                doUpd(3);
                                return;
                            }
                        }
                        /* update on main element and scrollbar size changes */
                        if (o.advanced.updateOnContentResize) {
                            d.poll.size.n = $this[0].scrollHeight + $this[0].scrollWidth + mCSB_container[0].offsetHeight + $this[0].offsetHeight + $this[0].offsetWidth;

                            //ORIGINAL CODE
                            //if (d.poll.size.n !== d.poll.size.o) {
                            //    d.poll.size.o = d.poll.size.n;

                            //    doUpd(1);
                            //    return;
                            //}
                            //--- NEW
                            if (d.poll.size.n > d.poll.size.o + 1 || d.poll.size.n < d.poll.size.o - 1) {
                                //console.warn("Update");
                                d.poll.size.o = d.poll.size.n;
                                 doUpd(1);
                                return;
                            } else if (d.poll.size.n !== d.poll.size.o) {
                              //  console.warn("Avoid")
                                d.poll.size.o = d.poll.size.n;
                            }
                            //----
                        }
                        /* update on image load */
                        if (o.advanced.updateOnImageLoad) {
                            if (!(o.advanced.updateOnImageLoad === "auto" && o.axis === "y")) { //by default, it doesn't run on vertical content
                                d.poll.img.n = mCSB_container.find("img").length;
                                if (d.poll.img.n !== d.poll.img.o) {
                                    d.poll.img.o = d.poll.img.n;
                                    mCSB_container.find("img").each(function () {
                                        imgLoader(this);
                                    });
                                    return;
                                }
                            }
                        }
                        if (o.advanced.updateOnSelectorChange || o.advanced.updateOnContentResize || o.advanced.updateOnImageLoad) { upd(); }
                    }, o.advanced.autoUpdateTimeout);
                }
                /* a tiny image loader */
                function imgLoader(el) {
                    if ($(el).hasClass(classes[2])) { doUpd(); return; }
                    var img = new Image();
                    function createDelegate(contextObject, delegateMethod) {
                        return function () { return delegateMethod.apply(contextObject, arguments); }
                    }
                    function imgOnLoad() {
                        this.onload = null;
                        $(el).addClass(classes[2]);
                        doUpd(2);
                    }
                    img.onload = createDelegate(img, imgOnLoad);
                    img.src = el.src;
                }
                /* returns the total height and width sum of all elements matching the selector */
                function sizesSum() {
                    if (o.advanced.updateOnSelectorChange === true) { o.advanced.updateOnSelectorChange = "*"; }
                    var total = 0, sel = mCSB_container.find(o.advanced.updateOnSelectorChange);
                    if (o.advanced.updateOnSelectorChange && sel.length > 0) { sel.each(function () { total += this.offsetHeight + this.offsetWidth; }); }
                    return total;
                }
                /* calls the update method */
                function doUpd(cb) {
                    clearTimeout(mCSB_container[0].autoUpdate);                   
                    methods.update.call(null, $this[0], cb);
                }
            },
            /* -------------------- */


            /* snaps scrolling to a multiple of a pixels number */
            _snapAmount = function (to, amount, offset) {
                return (Math.round(to / amount) * amount - offset);
            },
            /* -------------------- */


            /* stops content and scrollbar animations */
            _stop = function (el) {
                var d = el.data(pluginPfx),
                    sel = $("#mCSB_" + d.idx + "_container,#mCSB_" + d.idx + "_container_wrapper,#mCSB_" + d.idx + "_dragger_vertical,#mCSB_" + d.idx + "_dragger_horizontal");
                sel.each(function () {
                    _stopTween.call(this);
                });
            },
            /* -------------------- */


            /* 
            ANIMATES CONTENT 
            This is where the actual scrolling happens
            */
            _scrollTo = function (el, to, options) {
                var d = el.data(pluginPfx), o = d.opt,
                    defaults = {
                        trigger: "internal",
                        dir: "y",
                        scrollEasing: "mcsEaseOut",
                        drag: false,
                        dur: o.scrollInertia,
                        overwrite: "all",
                        callbacks: true,
                        onStart: true,
                        onUpdate: true,
                        onComplete: true
                    },
                    options = $.extend(defaults, options),
                    dur = [options.dur, (options.drag ? 0 : options.dur)],
                    mCustomScrollBox = $("#mCSB_" + d.idx),
                    mCSB_container = $("#mCSB_" + d.idx + "_container"),
                    wrapper = mCSB_container.parent(),
                    totalScrollOffsets = o.callbacks.onTotalScrollOffset ? _arr.call(el, o.callbacks.onTotalScrollOffset) : [0, 0],
                    totalScrollBackOffsets = o.callbacks.onTotalScrollBackOffset ? _arr.call(el, o.callbacks.onTotalScrollBackOffset) : [0, 0];
                d.trigger = options.trigger;
                if (wrapper.scrollTop() !== 0 || wrapper.scrollLeft() !== 0) { /* always reset scrollTop/Left */
                    $(".mCSB_" + d.idx + "_scrollbar").css("visibility", "visible");
                    wrapper.scrollTop(0).scrollLeft(0);
                }
                if (to === "_resetY" && !d.contentReset.y) {
                    /* callbacks: onOverflowYNone */
                    if (_cb("onOverflowYNone")) { o.callbacks.onOverflowYNone.call(el[0]); }
                    d.contentReset.y = 1;
                }
                if (to === "_resetX" && !d.contentReset.x) {
                    /* callbacks: onOverflowXNone */
                    if (_cb("onOverflowXNone")) { o.callbacks.onOverflowXNone.call(el[0]); }
                    d.contentReset.x = 1;
                }
                if (to === "_resetY" || to === "_resetX") { return; }
                if ((d.contentReset.y || !el[0].mcs) && d.overflowed[0]) {
                    /* callbacks: onOverflowY */
                    if (_cb("onOverflowY")) { o.callbacks.onOverflowY.call(el[0]); }
                    d.contentReset.x = null;
                }
                if ((d.contentReset.x || !el[0].mcs) && d.overflowed[1]) {
                    /* callbacks: onOverflowX */
                    if (_cb("onOverflowX")) { o.callbacks.onOverflowX.call(el[0]); }
                    d.contentReset.x = null;
                }
                if (o.snapAmount) { /* scrolling snapping */
                    var snapAmount = !(o.snapAmount instanceof Array) ? o.snapAmount : options.dir === "x" ? o.snapAmount[1] : o.snapAmount[0];
                    to = _snapAmount(to, snapAmount, o.snapOffset);
                }
                switch (options.dir) {
                    case "x":
                        var mCSB_dragger = $("#mCSB_" + d.idx + "_dragger_horizontal"),
                            property = "left",
                            contentPos = mCSB_container[0].offsetLeft,
                            limit = [
                                mCustomScrollBox.width() - mCSB_container.outerWidth(false),
                                mCSB_dragger.parent().width() - mCSB_dragger.width()
                            ],
                            scrollTo = [to, to === 0 ? 0 : (to / d.scrollRatio.x)],
                            tso = totalScrollOffsets[1],
                            tsbo = totalScrollBackOffsets[1],
                            totalScrollOffset = tso > 0 ? tso / d.scrollRatio.x : 0,
                            totalScrollBackOffset = tsbo > 0 ? tsbo / d.scrollRatio.x : 0;
                        break;
                    case "y":
                        var mCSB_dragger = $("#mCSB_" + d.idx + "_dragger_vertical"),
                            property = "top",
                            contentPos = mCSB_container[0].offsetTop,
                            limit = [
                                mCustomScrollBox.height() - mCSB_container.outerHeight(false),
                                mCSB_dragger.parent().height() - mCSB_dragger.height()
                            ],
                            scrollTo = [to, to === 0 ? 0 : (to / d.scrollRatio.y)],
                            tso = totalScrollOffsets[0],
                            tsbo = totalScrollBackOffsets[0],
                            totalScrollOffset = tso > 0 ? tso / d.scrollRatio.y : 0,
                            totalScrollBackOffset = tsbo > 0 ? tsbo / d.scrollRatio.y : 0;
                        break;
                }
                if (scrollTo[1] < 0 || (scrollTo[0] === 0 && scrollTo[1] === 0)) {
                    scrollTo = [0, 0];
                } else if (scrollTo[1] >= limit[1]) {
                    scrollTo = [limit[0], limit[1]];
                } else {
                    scrollTo[0] = -scrollTo[0];
                }
                if (!el[0].mcs) {
                    _mcs();  /* init mcs object (once) to make it available before callbacks */
                    if (_cb("onInit")) { o.callbacks.onInit.call(el[0]); } /* callbacks: onInit */
                }
                clearTimeout(mCSB_container[0].onCompleteTimeout);
                _tweenTo(mCSB_dragger[0], property, Math.round(scrollTo[1]), dur[1], options.scrollEasing);
                if (!d.tweenRunning && ((contentPos === 0 && scrollTo[0] >= 0) || (contentPos === limit[0] && scrollTo[0] <= limit[0]))) { return; }
                _tweenTo(mCSB_container[0], property, Math.round(scrollTo[0]), dur[0], options.scrollEasing, options.overwrite, {
                    onStart: function () {
                        if (options.callbacks && options.onStart && !d.tweenRunning) {
                            /* callbacks: onScrollStart */
                            if (_cb("onScrollStart")) { _mcs(); o.callbacks.onScrollStart.call(el[0]); }
                            d.tweenRunning = true;
                            _onDragClasses(mCSB_dragger);
                            d.cbOffsets = _cbOffsets();
                        }
                    }, onUpdate: function () {
                        if (options.callbacks && options.onUpdate) {
                            /* callbacks: whileScrolling */
                            if (_cb("whileScrolling")) { _mcs(); o.callbacks.whileScrolling.call(el[0]); }
                        }
                    }, onComplete: function () {
                        if (options.callbacks && options.onComplete) {
                            if (o.axis === "yx") { clearTimeout(mCSB_container[0].onCompleteTimeout); }
                            var t = mCSB_container[0].idleTimer || 0;
                            mCSB_container[0].onCompleteTimeout = setTimeout(function () {
                                /* callbacks: onScroll, onTotalScroll, onTotalScrollBack */
                                if (_cb("onScroll")) { _mcs(); o.callbacks.onScroll.call(el[0]); }
                                if (_cb("onTotalScroll") && scrollTo[1] >= limit[1] - totalScrollOffset && d.cbOffsets[0]) { _mcs(); o.callbacks.onTotalScroll.call(el[0]); }
                                if (_cb("onTotalScrollBack") && scrollTo[1] <= totalScrollBackOffset && d.cbOffsets[1]) { _mcs(); o.callbacks.onTotalScrollBack.call(el[0]); }
                                d.tweenRunning = false;
                                mCSB_container[0].idleTimer = 0;
                                _onDragClasses(mCSB_dragger, "hide");
                            }, t);
                        }
                    }
                });
                /* checks if callback function exists */
                function _cb(cb) {
                    return d && o.callbacks[cb] && typeof o.callbacks[cb] === "function";
                }
                /* checks whether callback offsets always trigger */
                function _cbOffsets() {
                    return [o.callbacks.alwaysTriggerOffsets || contentPos >= limit[0] + tso, o.callbacks.alwaysTriggerOffsets || contentPos <= -tsbo];
                }
                /* 
                populates object with useful values for the user 
                values: 
                    content: this.mcs.content
                    content top position: this.mcs.top 
                    content left position: this.mcs.left 
                    dragger top position: this.mcs.draggerTop 
                    dragger left position: this.mcs.draggerLeft 
                    scrolling y percentage: this.mcs.topPct 
                    scrolling x percentage: this.mcs.leftPct 
                    scrolling direction: this.mcs.direction
                */
                function _mcs() {
                    var cp = [mCSB_container[0].offsetTop, mCSB_container[0].offsetLeft], /* content position */
                        dp = [mCSB_dragger[0].offsetTop, mCSB_dragger[0].offsetLeft], /* dragger position */
                        cl = [mCSB_container.outerHeight(false), mCSB_container.outerWidth(false)], /* content length */
                        pl = [mCustomScrollBox.height(), mCustomScrollBox.width()]; /* content parent length */
                    el[0].mcs = {
                        content: mCSB_container, /* original content wrapper as jquery object */
                        top: cp[0], left: cp[1], draggerTop: dp[0], draggerLeft: dp[1],
                        topPct: Math.round((100 * Math.abs(cp[0])) / (Math.abs(cl[0]) - pl[0])), leftPct: Math.round((100 * Math.abs(cp[1])) / (Math.abs(cl[1]) - pl[1])),
                        direction: options.dir
                    };
                    /* 
                    this refers to the original element containing the scrollbar(s)
                    usage: this.mcs.top, this.mcs.leftPct etc. 
                    */
                }
            },
            /* -------------------- */


            /* 
            CUSTOM JAVASCRIPT ANIMATION TWEEN 
            Lighter and faster than jquery animate() and css transitions 
            Animates top/left properties and includes easings 
            */
            _tweenTo = function (el, prop, to, duration, easing, overwrite, callbacks) {
                if (!el._mTween) { el._mTween = { top: {}, left: {} }; }
                var callbacks = callbacks || {},
                    onStart = callbacks.onStart || function () { }, onUpdate = callbacks.onUpdate || function () { }, onComplete = callbacks.onComplete || function () { },
                    startTime = _getTime(), _delay, progress = 0, from = el.offsetTop, elStyle = el.style, _request, tobj = el._mTween[prop];
                if (prop === "left") { from = el.offsetLeft; }
                var diff = to - from;
                tobj.stop = 0;
                if (overwrite !== "none") { _cancelTween(); }
                _startTween();
                function _step() {
                    if (tobj.stop) { return; }
                    if (!progress) { onStart.call(); }
                    progress = _getTime() - startTime;
                    _tween();
                    if (progress >= tobj.time) {
                        tobj.time = (progress > tobj.time) ? progress + _delay - (progress - tobj.time) : progress + _delay - 1;
                        if (tobj.time < progress + 1) { tobj.time = progress + 1; }
                    }
                    if (tobj.time < duration) { tobj.id = _request(_step); } else { onComplete.call(); }
                }
                function _tween() {
                    if (duration > 0) {
                        tobj.currVal = _ease(tobj.time, from, diff, duration, easing);
                        elStyle[prop] = Math.round(tobj.currVal) + "px";
                    } else {
                        elStyle[prop] = to + "px";
                    }
                    onUpdate.call();
                }
                function _startTween() {
                    _delay = 1000 / 60;
                    tobj.time = progress + _delay;
                    _request = (!window.requestAnimationFrame) ? function (f) { _tween(); return setTimeout(f, 0.01); } : window.requestAnimationFrame;
                    tobj.id = _request(_step);
                }
                function _cancelTween() {
                    if (tobj.id == null) { return; }
                    if (!window.requestAnimationFrame) {
                        clearTimeout(tobj.id);
                    } else { window.cancelAnimationFrame(tobj.id); }
                    tobj.id = null;
                }
                function _ease(t, b, c, d, type) {
                    switch (type) {
                        case "linear": case "mcsLinear":
                            return c * t / d + b;
                            break;
                        case "mcsLinearOut":
                            t /= d; t--; return c * Math.sqrt(1 - t * t) + b;
                            break;
                        case "easeInOutSmooth":
                            t /= d / 2;
                            if (t < 1) return c / 2 * t * t + b;
                            t--;
                            return -c / 2 * (t * (t - 2) - 1) + b;
                            break;
                        case "easeInOutStrong":
                            t /= d / 2;
                            if (t < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;
                            t--;
                            return c / 2 * (-Math.pow(2, -10 * t) + 2) + b;
                            break;
                        case "easeInOut": case "mcsEaseInOut":
                            t /= d / 2;
                            if (t < 1) return c / 2 * t * t * t + b;
                            t -= 2;
                            return c / 2 * (t * t * t + 2) + b;
                            break;
                        case "easeOutSmooth":
                            t /= d; t--;
                            return -c * (t * t * t * t - 1) + b;
                            break;
                        case "easeOutStrong":
                            return c * (-Math.pow(2, -10 * t / d) + 1) + b;
                            break;
                        case "easeOut": case "mcsEaseOut": default:
                            var ts = (t /= d) * t, tc = ts * t;
                            return b + c * (0.499999999999997 * tc * ts + -2.5 * ts * ts + 5.5 * tc + -6.5 * ts + 4 * t);
                    }
                }
            },
            /* -------------------- */


            /* returns current time */
            _getTime = function () {
                if (window.performance && window.performance.now) {
                    return window.performance.now();
                } else {
                    if (window.performance && window.performance.webkitNow) {
                        return window.performance.webkitNow();
                    } else {
                        if (Date.now) { return Date.now(); } else { return new Date().getTime(); }
                    }
                }
            },
            /* -------------------- */


            /* stops a tween */
            _stopTween = function () {
                var el = this;
                if (!el._mTween) { el._mTween = { top: {}, left: {} }; }
                var props = ["top", "left"];
                for (var i = 0; i < props.length; i++) {
                    var prop = props[i];
                    if (el._mTween[prop].id) {
                        if (!window.requestAnimationFrame) {
                            clearTimeout(el._mTween[prop].id);
                        } else { window.cancelAnimationFrame(el._mTween[prop].id); }
                        el._mTween[prop].id = null;
                        el._mTween[prop].stop = 1;
                    }
                }
            },
            /* -------------------- */


            /* deletes a property (avoiding the exception thrown by IE) */
            _delete = function (c, m) {
                try { delete c[m]; } catch (e) { c[m] = null; }
            },
            /* -------------------- */


            /* detects left mouse button */
            _mouseBtnLeft = function (e) {
                return !(e.which && e.which !== 1);
            },
            /* -------------------- */


            /* detects if pointer type event is touch */
            _pointerTouch = function (e) {
                var t = e.originalEvent.pointerType;
                return !(t && t !== "touch" && t !== 2);
            },
            /* -------------------- */


            /* checks if value is numeric */
            _isNumeric = function (val) {
                return !isNaN(parseFloat(val)) && isFinite(val);
            },
            /* -------------------- */


            /* returns element position according to content */
            _childPos = function (el) {
                var p = el.parents(".mCSB_container");
                return [el.offset().top - p.offset().top, el.offset().left - p.offset().left];
            },
            /* -------------------- */


            /* checks if browser tab is hidden/inactive via Page Visibility API */
            _isTabHidden = function () {
                var prop = _getHiddenProp();
                if (!prop) return false;
                return document[prop];
                function _getHiddenProp() {
                    var pfx = ["webkit", "moz", "ms", "o"];
                    if ("hidden" in document) return "hidden"; //natively supported
                    for (var i = 0; i < pfx.length; i++) { //prefixed
                        if ((pfx[i] + "Hidden") in document)
                            return pfx[i] + "Hidden";
                    }
                    return null; //not supported
                }
            };
        /* -------------------- */





        /* 
        ----------------------------------------
        PLUGIN SETUP 
        ----------------------------------------
        */

        /* plugin constructor functions */
        $.fn[pluginNS] = function (method) { /* usage: $(selector).mCustomScrollbar(); */
            if (methods[method]) {
                return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
            } else if (typeof method === "object" || !method) {
                return methods.init.apply(this, arguments);
            } else {
                $.error("Method " + method + " does not exist");
            }
        };
        $[pluginNS] = function (method) { /* usage: $.mCustomScrollbar(); */
            if (methods[method]) {
                return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
            } else if (typeof method === "object" || !method) {
                return methods.init.apply(this, arguments);
            } else {
                $.error("Method " + method + " does not exist");
            }
        };

        /* 
        allow setting plugin default options. 
        usage: $.mCustomScrollbar.defaults.scrollInertia=500; 
        to apply any changed default options on default selectors (below), use inside document ready fn 
        e.g.: $(document).ready(function(){ $.mCustomScrollbar.defaults.scrollInertia=500; });
        */
        $[pluginNS].defaults = defaults;

        /* 
        add window object (window.mCustomScrollbar) 
        usage: if(window.mCustomScrollbar){console.log("custom scrollbar plugin loaded");}
        */
        window[pluginNS] = true;

        $(window).bind("load", function () {

            $(defaultSelector)[pluginNS](); /* add scrollbars automatically on default selector */

            /* extend jQuery expressions */
            $.extend($.expr[":"], {
                /* checks if element is within scrollable viewport */
                mcsInView: $.expr[":"].mcsInView || function (el) {
                    var $el = $(el), content = $el.parents(".mCSB_container"), wrapper, cPos;
                    if (!content.length) { return; }
                    wrapper = content.parent();
                    cPos = [content[0].offsetTop, content[0].offsetLeft];
                    return cPos[0] + _childPos($el)[0] >= 0 && cPos[0] + _childPos($el)[0] < wrapper.height() - $el.outerHeight(false) &&
                        cPos[1] + _childPos($el)[1] >= 0 && cPos[1] + _childPos($el)[1] < wrapper.width() - $el.outerWidth(false);
                },
                /* checks if element or part of element is in view of scrollable viewport */
                mcsInSight: $.expr[":"].mcsInSight || function (el, i, m) {
                    var $el = $(el), elD, content = $el.parents(".mCSB_container"), wrapperView, pos, wrapperViewPct,
                        pctVals = m[3] === "exact" ? [[1, 0], [1, 0]] : [[0.9, 0.1], [0.6, 0.4]];
                    if (!content.length) { return; }
                    elD = [$el.outerHeight(false), $el.outerWidth(false)];
                    pos = [content[0].offsetTop + _childPos($el)[0], content[0].offsetLeft + _childPos($el)[1]];
                    wrapperView = [content.parent()[0].offsetHeight, content.parent()[0].offsetWidth];
                    wrapperViewPct = [elD[0] < wrapperView[0] ? pctVals[0] : pctVals[1], elD[1] < wrapperView[1] ? pctVals[0] : pctVals[1]];
                    return pos[0] - (wrapperView[0] * wrapperViewPct[0][0]) < 0 && pos[0] + elD[0] - (wrapperView[0] * wrapperViewPct[0][1]) >= 0 &&
                        pos[1] - (wrapperView[1] * wrapperViewPct[1][0]) < 0 && pos[1] + elD[1] - (wrapperView[1] * wrapperViewPct[1][1]) >= 0;
                },
                /* checks if element is overflowed having visible scrollbar(s) */
                mcsOverflow: $.expr[":"].mcsOverflow || function (el) {
                    var d = $(el).data(pluginPfx);
                    if (!d) { return; }
                    return d.overflowed[0] || d.overflowed[1];
                }
            });

        });

    }))
}));;
// noUISlider
// https://github.com/leongersen/noUiSlider

/**@preserve
$.fn.noUiSlider - WTFPL - refreshless.com/nouislider/ */

/*jslint browser: true */
/*jslint sub: true */
/*jslint white: true */
/*jslint continue: true */
/*jslint plusplus: true */

(function( $ ){

	'use strict';

	var
	// Cache the document selector;
	/** @const */
	doc = $(document),
	// Make a backup of the original jQuery/Zepto .val() method.
	/** @const */
	$val = $.fn.val,
	// Namespace for binding and unbinding slider events;
	/** @const */
	namespace = '.nui',
	// Determine the events to bind. IE11 implements pointerEvents without
	// a prefix, which breaks compatibility with the IE10 implementation.
	/** @const */
	actions = window.navigator['pointerEnabled'] ? {
		start: 'pointerdown',
		move: 'pointermove',
		end: 'pointerup'
	} : window.navigator['msPointerEnabled'] ? {
		start: 'MSPointerDown',
		move: 'MSPointerMove',
		end: 'MSPointerUp'
	} : {
		start: 'mousedown touchstart',
		move: 'mousemove touchmove',
		end: 'mouseup touchend'
	},
	// Re-usable list of classes;
	/** @const */
	Classes = [
/*  0 */  'noUi-target'
/*  1 */ ,'noUi-base'
/*  2 */ ,'noUi-origin'
/*  3 */ ,'noUi-handle'
/*  4 */ ,'noUi-horizontal'
/*  5 */ ,'noUi-vertical'
/*  6 */ ,'noUi-background'
/*  7 */ ,'noUi-connect'
/*  8 */ ,'noUi-ltr'
/*  9 */ ,'noUi-rtl'
/* 10 */ ,'noUi-dragable'
/* 11 */ ,''
/* 12 */ ,'noUi-state-drag'
/* 13 */ ,''
/* 14 */ ,'noUi-state-tap'
/* 15 */ ,'noUi-active'
/* 16 */ ,'noUi-extended'
/* 17 */ ,'noUi-stacking'
	];


// General helpers

	// Limits a value to 0 - 100
	function limit ( a ) {
		return Math.max(Math.min(a, 100), 0);
	}

	// Round a value to the closest 'to'.
	function closest ( value, to ) {
		return Math.round(value / to) * to;
	}

	// Determine the size of a sub-range in relation to a full range.
	function subRangeRatio ( pa, pb ) {
		return (100 / (pb - pa));
	}


// Type validation

	// Checks whether a value is numerical.
	function isNumeric ( a ) {
		return typeof a === 'number' && !isNaN( a ) && isFinite( a );
	}

	// Wraps a variable as an array, if it isn't one yet.
	function asArray ( a ) {
		return $.isArray(a) ? a : [a];
	}


// Class handling

	// Sets a class and removes it after [duration] ms.
	function addClassFor ( element, className, duration ) {
		element.addClass(className);
		setTimeout(function(){
			element.removeClass(className);
		}, duration);
	}


// Value calculation

	// (percentage) How many percent is this value of this range?
	function fromPercentage ( range, value ) {
		return (value * 100) / ( range[1] - range[0] );
	}

	// (percentage) Where is this value on this range?
	function toPercentage ( range, value ) {
		return fromPercentage( range, range[0] < 0 ?
			value + Math.abs(range[0]) :
				value - range[0] );
	}

	// (value) How much is this percentage on this range?
	function isPercentage ( range, value ) {
		return ((value * ( range[1] - range[0] )) / 100) + range[0];
	}

	// (percentage)
	function toStepping ( options, value ) {

		if ( value >= options.xVal.slice(-1)[0] ){
			return 100;
		}

		var j = 1, va, vb, pa, pb;
		while ( value >= options.xVal[j] ){
			j++;
		}

		va = options.xVal[j-1];
		vb = options.xVal[j];
		pa = options.xPct[j-1];
		pb = options.xPct[j];

		return pa + (toPercentage([va, vb], value) / subRangeRatio (pa, pb));
	}

	// (value)
	function fromStepping ( options, value ) {

		// There is no range group that fits 100
		if ( value >= 100 ){
			return options.xVal.slice(-1)[0];
		}

		var j = 1, va, vb, pa, pb;
		while ( value >= options.xPct[j] ){
			j++;
		}

		va = options.xVal[j-1];
		vb = options.xVal[j];
		pa = options.xPct[j-1];
		pb = options.xPct[j];

		return isPercentage([va, vb], (value - pa) * subRangeRatio (pa, pb));
	}

	// (percentage) Get the step that applies at a certain value.
	function getStep ( options, value ){

		var j = 1, a, b;

		// Find the proper step for rtl sliders by search in inverse direction.
		// Fixes issue #262.
		while ( (options.dir ? (100 - value) : value) >= options.xPct[j] ){
			j++;
		}

		if ( options.snap ) {

			a = options.xPct[j-1];
			b = options.xPct[j];

			if ((value - a) > ((b-a)/2)){
				return b;
			}

			return a;
		}

		if ( !options.xSteps[j-1] ){
			return value;
		}

		return options.xPct[j-1] + closest(
			value - options.xPct[j-1],
			options.xSteps[j-1]
		);
	}


// Event handling

	// Provide a clean event with standardized offset values.
	function fixEvent ( e ) {

		// Prevent scrolling and panning on touch events, while
		// attempting to slide. The tap event also depends on this.
		e.preventDefault();

		// Filter the event to register the type, which can be
		// touch, mouse or pointer. Offset changes need to be
		// made on an event specific basis.
		var  touch = e.type.indexOf('touch') === 0
			,mouse = e.type.indexOf('mouse') === 0
			,pointer = e.type.indexOf('pointer') === 0
			,x,y, event = e;

		// IE10 implemented pointer events with a prefix;
		if ( e.type.indexOf('MSPointer') === 0 ) {
			pointer = true;
		}

		// Get the originalEvent, if the event has been wrapped
		// by jQuery. Zepto doesn't wrap the event.
		if ( e.originalEvent ) {
			e = e.originalEvent;
		}

		if ( touch ) {
			// noUiSlider supports one movement at a time,
			// so we can select the first 'changedTouch'.
			x = e.changedTouches[0].pageX;
			y = e.changedTouches[0].pageY;
		}

		if ( mouse || pointer ) {

			// Polyfill the pageXOffset and pageYOffset
			// variables for IE7 and IE8;
			if( !pointer && window.pageXOffset === undefined ){
				window.pageXOffset = document.documentElement.scrollLeft;
				window.pageYOffset = document.documentElement.scrollTop;
			}

			x = e.clientX + window.pageXOffset;
			y = e.clientY + window.pageYOffset;
		}

		event.points = [x, y];
		event.cursor = mouse;

		return event;
	}


// Input validation

	function testStep ( parsed, entry ) {

		if ( !isNumeric( entry ) ) {
			throw new Error("noUiSlider: 'step' is not numeric.");
		}

		// The step option can still be used to set stepping
		// for linear sliders. Overwritten if set in 'range'.
		parsed.xSteps[0] = entry;
	}

	function testRange ( parsed, entry ) {

		// Filter incorrect input.
		if ( typeof entry !== 'object' || $.isArray(entry) ) {
			throw new Error("noUiSlider: 'range' is not an object.");
		}

		// Catch missing start or end.
		if ( entry['min'] === undefined ||
				entry['max'] === undefined ) {
			throw new Error("noUiSlider: Missing 'min' or 'max' in 'range'.");
		}

		// Loop all entries.
		$.each( entry, function ( index, value ) {

			var percentage;

			// Wrap numerical input in an array.
			if ( typeof value === "number" ) {
				value = [value];
			}

			// Reject any invalid input.
			if ( !$.isArray( value ) ){
				throw new Error("noUiSlider: 'range' contains invalid value.");
			}

			// Covert min/max syntax to 0 and 100.
			if ( index === 'min' ) {
				percentage = 0;
			} else if ( index === 'max' ) {
				percentage = 100;
			} else {
				percentage = parseFloat( index );
			}

			// Check for correct input.
			if ( !isNumeric( percentage ) || !isNumeric( value[0] ) ) {
				throw new Error("noUiSlider: 'range' value isn't numeric.");
			}

			// Store values.
			parsed.xPct.push( percentage );
			parsed.xVal.push( value[0] );

			// NaN will evaluate to false too, but to keep
			// logging clear, set step explicitly. Make sure
			// not to override the 'step' setting with false.
			if ( !percentage ) {
				if ( !isNaN( value[1] ) ) {
					parsed.xSteps[0] = value[1];
				}
			} else {
				parsed.xSteps.push( isNaN(value[1]) ? false : value[1] );
			}
		});

		$.each(parsed.xSteps, function(i,n){

			// Ignore 'false' stepping.
			if ( !n ) {
				return true;
			}

			// Check if step fits. Not required, but this might serve some goal.
			// !((parsed.xVal[i+1] - parsed.xVal[i]) % n);

			// Factor to range ratio
			parsed.xSteps[i] = fromPercentage([
				 parsed.xVal[i]
				,parsed.xVal[i+1]
			], n) / subRangeRatio (
				parsed.xPct[i],
				parsed.xPct[i+1] );
		});
	}

	function testStart ( parsed, entry ) {

		if ( typeof entry === "number" ) {
			entry = [entry];
		}

		// Validate input. Values aren't tested, the internal Link will do
		// that and provide a valid location.
		if ( !$.isArray( entry ) || !entry.length || entry.length > 2 ) {
			throw new Error("noUiSlider: 'start' option is incorrect.");
		}

		// Store the number of handles.
		parsed.handles = entry.length;

		// When the slider is initialized, the .val method will
		// be called with the start options.
		parsed.start = entry;
	}

	function testSnap ( parsed, entry ) {

		// Enforce 100% stepping within subranges.
		parsed.snap = entry;

		if ( typeof entry !== 'boolean' ){
			throw new Error("noUiSlider: 'snap' option must be a boolean.");
		}
	}

	function testConnect ( parsed, entry ) {

		if ( entry === 'lower' && parsed.handles === 1 ) {
			parsed.connect = 1;
		} else if ( entry === 'upper' && parsed.handles === 1 ) {
			parsed.connect = 2;
		} else if ( entry === true && parsed.handles === 2 ) {
			parsed.connect = 3;
		} else if ( entry === false ) {
			parsed.connect = 0;
		} else {
			throw new Error("noUiSlider: 'connect' option doesn't match handle count.");
		}
	}

	function testOrientation ( parsed, entry ) {

		// Set orientation to an a numerical value for easy
		// array selection.
		switch ( entry ){
		  case 'horizontal':
			parsed.ort = 0;
			break;
		  case 'vertical':
			parsed.ort = 1;
			break;
		  default:
			throw new Error("noUiSlider: 'orientation' option is invalid.");
		}
	}

	function testMargin ( parsed, entry ) {

		if ( parsed.xPct.length > 2 ) {
			throw new Error("noUiSlider: 'margin' option is only supported on linear sliders.");
		}

		// Parse value to range and store. As xVal is checked
		// to be no bigger than 2, use it as range.
		parsed.margin = fromPercentage(parsed.xVal, entry);

		if ( !isNumeric(entry) ){
			throw new Error("noUiSlider: 'margin' option must be numeric.");
		}
	}

	function testDirection ( parsed, entry ) {

		// Set direction as a numerical value for easy parsing.
		// Invert connection for RTL sliders, so that the proper
		// handles get the connect/background classes.
		switch ( entry ) {
		  case 'ltr':
			parsed.dir = 0;
			break;
		  case 'rtl':
			parsed.dir = 1;
			parsed.connect = [0,2,1,3][parsed.connect];
			break;
		  default:
			throw new Error("noUiSlider: 'direction' option was not recognized.");
		}
	}

	function testBehaviour ( parsed, entry ) {

		// Make sure the input is a string.
		if ( typeof entry !== 'string' ) {
			throw new Error("noUiSlider: 'behaviour' must be a string containing options.");
		}

		// Check if the string contains any keywords.
		// None are required.
		var tap = entry.indexOf('tap') >= 0,
			extend = entry.indexOf('extend') >= 0,
			drag = entry.indexOf('drag') >= 0,
			fixed = entry.indexOf('fixed') >= 0,
			snap = entry.indexOf('snap') >= 0;

		parsed.events = {
			tap: tap || snap,
			extend: extend,
			drag: drag,
			fixed: fixed,
			snap: snap
		};
	}

	function testSerialization ( parsed, entry, sliders ) {

		parsed.ser = [ entry['lower'], entry['upper'] ];
		parsed.formatting = entry['format'];

		$.each( parsed.ser, function( index, linkInstances ){

			// Check if the provided option is an array.
			if ( !$.isArray(linkInstances) ) {
				throw new Error("noUiSlider: 'serialization."+(!index ? 'lower' : 'upper')+"' must be an array.");
			}

			$.each(linkInstances, function(){

				// Check if entry is a Link.
				if ( !(this instanceof $.Link) ) {
					throw new Error("noUiSlider: 'serialization."+(!index ? 'lower' : 'upper')+"' can only contain Link instances.");
				}

				// Assign properties.
				this.setIndex ( index );
				this.setObject( sliders );
				this.setFormatting( entry['format'] );
			});
		});

		// If the slider has two handles and is RTL,
		// reverse the serialization input. For one handle,
		// lower is still lower.
		if ( parsed.dir && parsed.handles > 1 ) {
			parsed.ser.reverse();
		}
	}

	// Test all developer settings and parse to assumption-safe values.
	function test ( options, sliders ){

	/*	Every input option is tested and parsed. This'll prevent
		endless validation in internal methods. These tests are
		structured with an item for every option available. An
		option can be marked as required by setting the 'r' flag.
		The testing function is provided with three arguments:
			- The provided value for the option;
			- A reference to the options object;
			- The name for the option;

		The testing function returns false when an error is detected,
		or true when everything is OK. It can also modify the option
		object, to make sure all values can be correctly looped elsewhere. */

		var parsed = {
			 xPct: []
			,xVal: []
			,xSteps: [ false ]
			,margin: 0
		}, tests;

		// Tests are executed in the order they are presented here.
		tests = {
			'step': { r: false, t: testStep },
			'start': { r: true, t: testStart },
			'connect': { r: true, t: testConnect },
			'direction': { r: true, t: testDirection },
			'range': { r: true, t: testRange },
			'snap': { r: false, t: testSnap },
			'orientation': { r: false, t: testOrientation },
			'margin': { r: false, t: testMargin },
			'behaviour': { r: true, t: testBehaviour },
			'serialization': { r: true, t: testSerialization }
		};

		// Set defaults where applicable.
		options = $.extend({
			'connect': false,
			'direction': 'ltr',
			'behaviour': 'tap',
			'orientation': 'horizontal'
		}, options);

		// Make sure the test for serialization runs.
		options['serialization'] = $.extend({
			 'lower': []
			,'upper': []
			,'format': {}
		}, options['serialization']);

		// Run all options through a testing mechanism to ensure correct
		// input. It should be noted that options might get modified to
		// be handled properly. E.g. wrapping integers in arrays.
		$.each( tests, function( name, test ){

			if ( options[name] === undefined ) {

				if ( test.r ) {
					throw new Error("noUiSlider: '" + name + "' is required.");
				}

				return true;
			}

			test.t( parsed, options[name], sliders );
		});

		// Pre-define the styles.
		parsed.style = parsed.ort ? 'top' : 'left';

		return parsed;
	}


// DOM additions

	// Append a handle to the base.
	function addHandle ( options, index ) {

		var handle = $('<div><div/></div>').addClass( Classes[2] ),
			additions = [ '-lower', '-upper' ];

		if ( options.dir ) {
			additions.reverse();
		}

		handle.children().addClass(
			Classes[3] + " " + Classes[3]+additions[index]
		);

		return handle;
	}

	// Create a copy of an element-creating Link.
	function addElement ( handle, link ) {

		// If the Link requires creation of a new element,
		// create this element and return a new Link instance.
		if ( link.el ) {

			link = new $.Link({
				'target': $(link.el).clone().appendTo( handle ),
				'method': link.method,
				'format': link.formatting
			}, true);
		}

		// Otherwise, return the reference.
		return link;
	}

	// Loop all links for a handle.
	function addElements ( elements, handle, formatting ) {
		var index, list = [], standard = new $.Link({}, true);

		// Use the Link interface to provide unified
		// formatting for the .val() method.
		standard.setFormatting(formatting);

		// The list now contains at least one element.
		list.push( standard );

		// Loop all links in either 'lower' or 'upper'.
		for ( index = 0; index < elements.length; index++ ) {
			list.push(addElement(handle, elements[index]));
		}

		return list;
	}

	// Go over all Links and assign them to a handle.
	function addLinks ( options, handles ) {

		var index, links = [];

		// Copy the links into a new array, instead of modifying
		// the 'options.ser' list. This allows replacement of the invalid
		// '.el' Links, while the others are still passed by reference.
		for ( index = 0; index < options.handles; index++ ) {

			// Append a new array.
			links[index] = addElements(
				options.ser[index],
				handles[index].children(),
				options.formatting
			);
		}

		return links;
	}

	// Add the proper connection classes.
	function addConnection ( connect, target, handles ) {

		// Apply the required connection classes to the elements
		// that need them. Some classes are made up for several
		// segments listed in the class list, to allow easy
		// renaming and provide a minor compression benefit.
		switch ( connect ) {
			case 1:	target.addClass( Classes[7] );
					handles[0].addClass( Classes[6] );
					break;
			case 3: handles[1].addClass( Classes[6] );
					/* falls through */
			case 2: handles[0].addClass( Classes[7] );
					/* falls through */
			case 0: target.addClass(Classes[6]);
					break;
		}
	}

	// Add handles and loop Link elements.
	function addHandles ( options, base ) {

		var index, handles = [];

		// Append handles.
		for ( index = 0; index < options.handles; index++ ) {

			// Keep a list of all added handles.
			handles.push( addHandle( options, index ).appendTo(base) );
		}

		return handles;
	}

	// Initialize a single slider.
	function addSlider ( options, target ) {

		// Apply classes and data to the target.
		target.addClass([
			Classes[0],
			Classes[8 + options.dir],
			Classes[4 + options.ort]
		].join(' '));

		return $('<div/>').appendTo(target).addClass( Classes[1] );
	}


// Slider scope

function closure ( target, options, originalOptions ){

// Internal variables

	// All variables local to 'closure' are marked $.
	var $Target = $(target),
		$Locations = [-1, -1],
		$Base,
		$Serialization,
		$Handles;

	// Shorthand for base dimensions.
	function baseSize ( ) {
		return $Base[['width', 'height'][options.ort]]();
	}


// External event handling

	function fireEvents ( events ) {

		// Use the external api to get the values.
		// Wrap the values in an array, as .trigger takes
		// only one additional argument.
		var index, values = [ $Target.val() ];

		for ( index = 0; index < events.length; index++ ){
			$Target.trigger(events[index], values);
		}
	}


// Handle placement

	// Test suggested values and apply margin, step.
	function setHandle ( handle, to, delimit ) {

		var n = handle[0] !== $Handles[0][0] ? 1 : 0,
			lower = $Locations[0] + options.margin,
			upper = $Locations[1] - options.margin;

		// Don't delimit range dragging.
		if ( delimit && $Handles.length > 1 ) {
			to = n ? Math.max( to, lower ) : Math.min( to, upper );
		}

		// Handle the step option.
		if ( to < 100 ){
			to = getStep(options, to);
		}

		// Limit to 0/100 for .val input, trim anything beyond 7 digits, as
		// JavaScript has some issues in its floating point implementation.
		to = limit(parseFloat(to.toFixed(7)));

		// Return falsy if handle can't move. False for 0 or 100 limit,
		// '0' for limiting by another handle.
		if ( to === $Locations[n] ) {
			if ( $Handles.length === 1 ) {
				return false;
			}
			return ( to === lower || to === upper ) ? 0 : false;
		}

		// Set the handle to the new position.
		handle.css( options.style, to + '%' );

		// Force proper handle stacking
		if ( handle.is(':first-child') ) {
			handle.toggleClass(Classes[17], to > 50 );
		}

		// Update locations.
		$Locations[n] = to;

		// Invert the value if this is a right-to-left slider.
		if ( options.dir ) {
			to = 100 - to;
		}

		// Write values to serialization Links.
		// Convert the value to the correct relative representation.
		// Convert the value to the slider stepping/range.
		$($Serialization[n]).each(function(){
			this.write( fromStepping( options, to ), handle.children(), $Target );
		});

		return true;
	}

	// Delimit proposed values for handle positions.
	function getPositions ( a, b, delimit ) {

		// Add movement to current position.
		var c = a + b[0], d = a + b[1];

		// Only alter the other position on drag,
		// not on standard sliding.
		if ( delimit ) {
			if ( c < 0 ) {
				d += Math.abs(c);
			}
			if ( d > 100 ) {
				c -= ( d - 100 );
			}

			// Limit values to 0 and 100.
			return [limit(c), limit(d)];
		}

		return [c,d];
	}

	// Handles movement by tapping.
	function jump ( handle, to, instant ) {

		if ( !instant ) {
			// Flag the slider as it is now in a transitional state.
			// Transition takes 300 ms, so re-enable the slider afterwards.
			addClassFor( $Target, Classes[14], 300 );
		}

		// Move the handle to the new position.
		setHandle( handle, to, false );

		fireEvents(['slide', 'set', 'change']);
	}


// Events

	// Handler for attaching events trough a proxy.
	function attach ( events, element, callback, data ) {

		// Add the noUiSlider namespace to all events.
		events = events.replace( /\s/g, namespace + ' ' ) + namespace;

		// Bind a closure on the target.
		return element.on( events, function( e ){

			// jQuery and Zepto handle unset attributes differently.
			var disabled = $Target.attr('disabled');
				disabled = !( disabled === undefined || disabled === null );

			// Test if there is anything that should prevent an event
			// from being handled, such as a disabled state or an active
			// 'tap' transition.
			if( $Target.hasClass( Classes[14] ) || disabled ) {
				return false;
			}

			e = fixEvent(e);
			e.calcPoint = e.points[ options.ort ];

			// Call the event handler with the event [ and additional data ].
			callback ( e, data );
		});
	}

	// Handle movement on document for handle and range drag.
	function move ( event, data ) {

		var handles = data.handles || $Handles, positions, state = false,
			proposal = ((event.calcPoint - data.start) * 100) / baseSize(),
			h = handles[0][0] !== $Handles[0][0] ? 1 : 0;

		// Calculate relative positions for the handles.
		positions = getPositions( proposal, data.positions, handles.length > 1);

		state = setHandle ( handles[0], positions[h], handles.length === 1 );

		if ( handles.length > 1 ) {
			state = setHandle ( handles[1], positions[h?0:1], false ) || state;
		}

		// Fire the 'slide' event if any handle moved.
		if ( state ) {
			fireEvents(['slide']);
		}
	}

	// Unbind move events on document, call callbacks.
	function end ( event ) {

		// The handle is no longer active, so remove the class.
		$('.' + Classes[15]).removeClass(Classes[15]);

		// Remove cursor styles and text-selection events bound to the body.
		if ( event.cursor ) {
			$('body').css('cursor', '').off( namespace );
		}

		// Unbind the move and end events, which are added on 'start'.
		doc.off( namespace );

		// Remove dragging class.
		$Target.removeClass(Classes[12]);

		// Fire the change and set events.
		fireEvents(['set', 'change']);
	}

	// Bind move events on document.
	function start ( event, data ) {

		// Mark the handle as 'active' so it can be styled.
		if( data.handles.length === 1 ) {
			data.handles[0].children().addClass(Classes[15]);
		}

		// A drag should never propagate up to the 'tap' event.
		event.stopPropagation();

		// Attach the move event.
		attach ( actions.move, doc, move, {
			start: event.calcPoint,
			handles: data.handles,
			positions: [
				$Locations[0],
				$Locations[$Handles.length - 1]
			]
		});

		// Unbind all movement when the drag ends.
		attach ( actions.end, doc, end, null );

		// Text selection isn't an issue on touch devices,
		// so adding cursor styles can be skipped.
		if ( event.cursor ) {

			// Prevent the 'I' cursor and extend the range-drag cursor.
			$('body').css('cursor', $(event.target).css('cursor'));

			// Mark the target with a dragging state.
			if ( $Handles.length > 1 ) {
				$Target.addClass(Classes[12]);
			}

			// Prevent text selection when dragging the handles.
			$('body').on('selectstart' + namespace, false);
		}
	}

	// Move closest handle to tapped location.
	function tap ( event ) {

		var location = event.calcPoint, total = 0, to;

		// The tap event shouldn't propagate up and cause 'edge' to run.
		event.stopPropagation();

		// Add up the handle offsets.
		$.each( $Handles, function(){
			total += this.offset()[ options.style ];
		});

		// Find the handle closest to the tapped position.
		total = ( location < total/2 || $Handles.length === 1 ) ? 0 : 1;

		location -= $Base.offset()[ options.style ];

		// Calculate the new position.
		to = ( location * 100 ) / baseSize();

		// Find the closest handle and calculate the tapped point.
		// The set handle to the new position.
		jump( $Handles[total], to, options.events.snap );

		if ( options.events.snap ) {
			start(event, { handles: [$Handles[total]] });
		}
	}

	// Move handle to edges when target gets tapped.
	function edge ( event ) {

		var i = event.calcPoint < $Base.offset()[ options.style ],
			to = i ? 0 : 100;

		i = i ? 0 : $Handles.length - 1;

		jump( $Handles[i], to, false );
	}

	// Attach events to several slider parts.
	function events ( behaviour ) {

		var i, drag;

		// Attach the standard drag event to the handles.
		if ( !behaviour.fixed ) {

			for ( i = 0; i < $Handles.length; i++ ) {

				// These events are only bound to the visual handle
				// element, not the 'real' origin element.
				attach ( actions.start, $Handles[i].children(), start, {
					handles: [ $Handles[i] ]
				});
			}
		}

		// Attach the tap event to the slider base.
		if ( behaviour.tap ) {
			attach ( actions.start, $Base, tap, {
				handles: $Handles
			});
		}

		// Extend tapping behaviour to target
		if ( behaviour.extend ) {

			$Target.addClass( Classes[16] );

			if ( behaviour.tap ) {
				attach ( actions.start, $Target, edge, {
					handles: $Handles
				});
			}
		}

		// Make the range dragable.
		if ( behaviour.drag ){

			drag = $Base.find( '.' + Classes[7] ).addClass( Classes[10] );

			// When the range is fixed, the entire range can
			// be dragged by the handles. The handle in the first
			// origin will propagate the start event upward,
			// but it needs to be bound manually on the other.
			if ( behaviour.fixed ) {
				drag = drag.add($Base.children().not( drag ).children());
			}

			attach ( actions.start, drag, start, {
				handles: $Handles
			});
		}
	}


// Initialize slider

	// Throw an error if the slider was already initialized.
	if ( $Target.hasClass(Classes[0]) ) {
		throw new Error('Slider was already initialized.');
	}

	// Create the base element, initialise HTML and set classes.
	// Add handles and links.
	$Base = addSlider( options, $Target );
	$Handles = addHandles( options, $Base );
	$Serialization = addLinks( options, $Handles );

	// Set the connect classes.
	addConnection ( options.connect, $Target, $Handles );

	// Attach user events.
	events( options.events );


// Methods

	// Set the slider value.
	/** @expose */
	target.vSet = function ( ) {

		var args = Array.prototype.slice.call( arguments, 0 ),
			callback, link, update, animate,
			i, count, actual, to, values = asArray( args[0] );

		// Extract modifiers for value method.
		if ( typeof args[1] === 'object' ) {
			callback = args[1]['set'];
			link = args[1]['link'];
			update = args[1]['update'];
			animate = args[1]['animate'];

		// Support the 'true' option.
		} else if ( args[1] === true ) {
			callback = true;
		}

		// The RTL settings is implemented by reversing the front-end,
		// internal mechanisms are the same.
		if ( options.dir && options.handles > 1 ) {
			values.reverse();
		}

		// Animation is optional.
		if ( animate ) {
			addClassFor( $Target, Classes[14], 300 );
		}

		// Determine how often to set the handles.
		count = $Handles.length > 1 ? 3 : 1;
		if ( values.length === 1 ) {
			count = 1;
		}

		// If there are multiple handles to be set run the setting
		// mechanism twice for the first handle, to make sure it
		// can be bounced of the second one properly.
		for ( i = 0; i < count; i++ ) {

			to = link || $Serialization[i%2][0];
			to = to.getValue( values[i%2] );

			if ( to === false ) {
				continue;
			}

			// Calculate the new handle position
			to = toStepping( options, to );

			// Invert the value if this is a right-to-left slider.
			if ( options.dir ) {
				to = 100 - to;
			}

			// Force delimitation.
			if ( setHandle( $Handles[i%2], to, true ) === true ) {
				continue;
			}

			// Reset the input if it doesn't match the slider.
			$($Serialization[i%2]).each(function(index){

				if (!index) {
					actual = this.actual;
					return true;
				}

				this.write(
					actual,
					$Handles[i%2].children(),
					$Target,
					update
				);
			});
		}

		// Optionally fire the 'set' event.
		if( callback === true ) {
			fireEvents(['set']);
		}

		return this;
	};

	// Get the slider value.
	/** @expose */
	target.vGet = function ( ) {

		var i, retour = [];

		// Get the value from all handles.
		for ( i = 0; i < options.handles; i++ ){
			retour[i] = $Serialization[i][0].saved;
		}

		// If only one handle is used, return a single value.
		if ( retour.length === 1 ){
			return retour[0];
		}

		if ( options.dir ) {
			return retour.reverse();
		}

		return retour;
	};

	// Destroy the slider and unbind all events.
	/** @expose */
	target.destroy = function ( ) {

		// Loop all linked serialization objects and unbind all
		// events in the noUiSlider namespace.
		$.each($Serialization, function(){
			$.each(this, function(){
				// Won't remove 'change' when bound implicitly.
				if ( this.target ) {
					this.target.off( namespace );
				}
			});
		});

		// Unbind events on the slider, remove all classes and child elements.
		$(this).off(namespace)
			.removeClass(Classes.join(' '))
			.empty();

		// Return the original options from the closure.
		return originalOptions;
	};


// Value setting

	// Use the public value method to set the start values.
	$Target.val( options.start );
}


// Access points

	// Run the standard initializer
	function initialize ( originalOptions ) {

		// Throw error if group is empty.
		if ( !this.length ){
			throw new Error("noUiSlider: Can't initialize slider on empty selection.");
		}

		// Test the options once, not for every slider.
		var options = test( originalOptions, this );

		// Loop all items, and provide a new closed-scope environment.
		return this.each(function(){
			closure(this, options, originalOptions);
		});
	}

	// Destroy the slider, then re-enter initialization.
	function rebuild ( options ) {

		return this.each(function(){

			// Get the current values from the slider,
			// including the initialization options.
			var values = $(this).val(),
				originalOptions = this.destroy(),

				// Extend the previous options with the newly provided ones.
				newOptions = $.extend( {}, originalOptions, options );

			// Run the standard initializer.
			$(this).noUiSlider( newOptions );

			// If the start option hasn't changed,
			// reset the previous values.
			if ( originalOptions.start === newOptions.start ) {
				$(this).val(values);
			}
		});
	}

	// Access the internal getting and setting methods based on argument count.
	function value ( ) {
		return this[0][ !arguments.length ? 'vGet' : 'vSet' ].apply(this[0], arguments);
	}

	// Override the .val() method. Test every element. Is it a slider? Go to
	// the slider value handling. No? Use the standard method.
	// Note how $.fn.val extects 'this' to be an instance of $. For convenience,
	// the above 'value' function does too.
	$.fn.val = function ( ) {

		// this === instanceof $

		function valMethod( a ){
			return a.hasClass(Classes[0]) ? value : $val;
		}

		var args = arguments,
			first = $(this[0]);

		if ( !arguments.length ) {
			return valMethod(first).call(first);
		}

		// Return the set so it remains chainable
		return this.each(function(){
			valMethod($(this)).apply($(this), args);
		});
	};

// Remap the serialization constructor for legacy support.
	/** @expose */
	$.noUiSlider = { 'Link': $.Link };

// Extend jQuery/Zepto with the noUiSlider method.
	/** @expose */
	$.fn.noUiSlider = function ( options, re ) {
		return ( re ? rebuild : initialize ).call(this, options);
	};

}( window['jQuery'] || window['Zepto'] ));
;
/**@preserve
$.Link (part of noUiSlider) - WTFPL */

/*jslint browser: true */
/*jslint sub: true */
/*jslint white: true */

(function ($) {

    'use strict';

    // Throw an error if formatting options are incompatible.
    function throwEqualError(F, a, b) {
        if ((F[a] || F[b]) && (F[a] === F[b])) {
            throw new Error("(Link) '" + a + "' can't match '" + b + "'.'");
        }
    }

    // Test in an object is an instance of jQuery or Zepto.
    function isInstance(a) {
        return a instanceof $ || ($['zepto'] && $['zepto']['isZ'](a));
    }

    var
    /** @const */ Formatting = [
    /*  0 */  'decimals'
    /*  1 */, 'mark'
    /*  2 */, 'thousand'
    /*  3 */, 'prefix'
    /*  4 */, 'postfix'
    /*  5 */, 'encoder'
    /*  6 */, 'decoder'
    /*  7 */, 'negative'
    /*  8 */, 'negativeBefore'
    /*  9 */, 'to'
    /* 10 */, 'from'
    ],
    /** @const */ FormatDefaults = [
    /*  0 */  2
    /*  1 */, '.'
    /*  2 */, ''
    /*  3 */, ''
    /*  4 */, ''
    /*  5 */, function (a) { return a; }
    /*  6 */, function (a) { return a; }
    /*  7 */, '-'
    /*  8 */, ''
    /*  9 */, function (a) { return a; }
    /* 10 */, function (a) { return a; }
    ];


    /** @constructor */
    function Format(options) {

        // If no settings where provided, the defaults will be loaded.
        if (options === undefined) {
            options = {};
        }

        if (typeof options !== 'object') {
            throw new Error("(Format) 'format' option must be an object.");
        }

        var settings = {};

        // Copy all values into a new object.
        $(Formatting).each(function (i, val) {

            if (options[val] === undefined) {

                settings[val] = FormatDefaults[i];

                // When we aren't loading defaults, validate the entry.
            } else if ((typeof options[val]) === (typeof FormatDefaults[i])) {

                // Support for up to 7 decimals.
                // More can't be guaranteed due to floating point issues.
                if (val === 'decimals') {
                    if (options[val] < 0 || options[val] > 7) {
                        throw new Error("(Format) 'format.decimals' option must be between 0 and 7.");
                    }
                }

                settings[val] = options[val];

                // If the value isn't valid, emit an error.
            } else {
                throw new Error("(Format) 'format." + val + "' must be a " + typeof FormatDefaults[i] + ".");
            }
        });

        // Some values can't be extracted from a
        // string if certain combinations are present.
        throwEqualError(settings, 'mark', 'thousand');
        throwEqualError(settings, 'prefix', 'negative');
        throwEqualError(settings, 'prefix', 'negativeBefore');

        this.settings = settings;
    }

    // Shorthand for internal value get
    Format.prototype.v = function (a) {
        return this.settings[a];
    };

    Format.prototype.to = function (number) {

        function reverse(a) {
            return a.split('').reverse().join('');
        }

        number = this.v('encoder')(number);

        var decimals = this.v('decimals'),
			negative = '', preNegative = '', base = '', mark = '';

        // Rounding away decimals might cause a value of -0
        // when using very small ranges. Remove those cases.
        if (parseFloat(number.toFixed(decimals)) === 0) {
            number = '0';
        }

        if (number < 0) {
            negative = this.v('negative');
            preNegative = this.v('negativeBefore');
        }

        // Round to proper decimal count
        number = Math.abs(number).toFixed(decimals).toString();
        number = number.split('.');

        // Group numbers in sets of three.
        if (this.v('thousand')) {
            base = reverse(number[0]).match(/.{1,3}/g);
            base = reverse(base.join(reverse(this.v('thousand'))));
        } else {
            base = number[0];
        }

        // Ignore the decimal separator if decimals are set to 0.
        if (this.v('mark') && number.length > 1) {
            mark = this.v('mark') + number[1];
        }

        // Return the finalized formatted number.
        return this.v('to')(preNegative +
			this.v('prefix') +
			negative +
			base +
			mark +
			this.v('postfix'));
    };

    Format.prototype.from = function (input) {

        function esc(s) {
            return s.replace(/[\-\/\\\^$*+?.()|\[\]{}]/g, '\\$&');
        }

        var isNeg;
        // The set request might want to ignore this handle.
        // Test for 'undefined' too, as a two-handle slider
        // can still be set with an integer.
        if (input === null || input === undefined) {
            return false;
        }

        input = this.v('from')(input);

        // Remove formatting and set period for float parsing.
        input = input.toString();

        // Replace the preNegative indicator.
        isNeg = input.replace(new RegExp('^' + esc(this.v('negativeBefore'))), '');

        // Check if the value changed by removing the negativeBefore symbol.
        if (input !== isNeg) {
            input = isNeg;
            isNeg = '-';
        } else {
            isNeg = '';
        }

        // If prefix is set and the number is actually prefixed.
        input = input.replace(new RegExp('^' + esc(this.v('prefix'))), '');

        // Only replace if a negative sign is set.
        if (this.v('negative')) {

            // Reset isNeg to prevent double '-' insertion.
            isNeg = '';

            // Reset the negative sign to '-'
            input = input.replace(new RegExp('^' + esc(this.v('negative'))), '-');
        }

        // Clean the input string
        input = input
		// If postfix is set and the number is postfixed.
			.replace(new RegExp(esc(this.v('postfix')) + '$'), '')
		// Remove the separator every three digits.
			.replace(new RegExp(esc(this.v('thousand')), 'g'), '')
		// Set the decimal separator back to period.
			.replace(this.v('mark'), '.');

        // Run the user defined decoder. Returns input by default.
        input = this.v('decoder')(parseFloat(isNeg + input));

        // Ignore invalid input
        if (isNaN(input)) {
            return false;
        }

        return input;
    };


    /** @expose */
    /** @constructor */
    function Link(entry, update) {

        if (typeof entry !== "object") {
            $.error("(Link) Initialize with an object.");
        }

        // Make sure Link isn't called as a function, in which case
        // the 'this' scope would be the window.
        return new Link.prototype.init(entry['target'] || function () { }, entry['method'], entry['format'] || {}, update);
    }

    Link.prototype.setTooltip = function (target, method) {

        // By default, use the 'html' method.
        this.method = method || 'html';

        // Use jQuery to create the element
        this.el = $(target.replace('-tooltip-', '') || '<div/>')[0];
    };

    Link.prototype.setHidden = function (target) {

        this.method = 'val';

        this.el = document.createElement('input');
        this.el.name = target;
        this.el.type = 'hidden';
    };

    Link.prototype.setField = function (target) {

        // Returns nulled array.
        function at(a, b, c) {
            return [c ? a : b, c ? b : a];
        }

        // In IE < 9, .bind() isn't available, need this link in .change().
        var that = this;

        // Default to .val if this is an input element.
        this.method = 'val';
        // Set the slider to a new value on change.
        this.target = target.on('change', function (e) {
            that.obj.val(
				at(null, $(e.target).val(), that.N),
				{ 'link': that, 'set': true }
			);
        });
    };


    // Initialisor
    /** @constructor */
    Link.prototype.init = function (target, method, format, update) {

        // Write all formatting to this object.
        // No validation needed, as we'll merge these with the parent
        // format options first.
        this.formatting = format;

        // Store the update option.
        this.update = !update;

        // If target is a string, a new hidden input will be created.
        if (typeof target === 'string' && target.indexOf('-tooltip-') === 0) {
            this.setTooltip(target, method);
            return;
        }

        // If the string doesn't begin with '-', which is reserved, add a new hidden input.
        if (typeof target === 'string' && target.indexOf('-') !== 0) {
            this.setHidden(target);
            return;
        }

        // The target can also be a function, which will be called.
        if (typeof target === 'function') {
            this.target = false;
            this.method = target;
            return;
        }

        if (isInstance(target)) {
            // If a jQuery/Zepto input element is provided, but no method is set,
            // the element can assume it needs to respond to 'change'...

            if (!method) {

                if (target.is('input, select, textarea')) {
                    this.setField(target);
                    return;
                }

                // If no method is set, and we are not auto-binding an input, default to 'html'.
                method = 'html';
            }

            // The method must exist on the element.
            if (typeof method === 'function' || (typeof method === 'string' && target[method])) {
                this.method = method;
                this.target = target;
                return;
            }
        }

        // Nothing matched, throw error.
        throw new RangeError("(Link) Invalid Link.");
    };

    // Provides external items with the slider value.
    Link.prototype.write = function (value, handle, slider, update) {

        // Don't synchronize this Link.
        if (this.update && update === false) {
            return;
        }

        this.actual = value;

        // Format values for display.
        value = this.format(value);

        // Store the numerical value.
        this.saved = value;

        // Branch between serialization to a function or an object.
        if (typeof this.method === 'function') {
            // When target is undefined, the target was a function.
            // In that case, provided the slider as the calling scope.
            // Use [0] to get the DOM element, not the $ instance.
            this.method.call(this.target[0] || slider[0], value, handle, slider);
        } else {
            this.target[this.method](value, handle, slider);
        }
    };

    // Set formatting options.
    Link.prototype.setFormatting = function (options) {
        this.formatting = new Format($.extend({},
			options,
			this.formatting instanceof Format ? this.formatting.settings : this.formatting
		));
    };

    Link.prototype.setObject = function (obj) {
        this.obj = obj;
    };

    Link.prototype.setIndex = function (index) {
        this.N = index;
    };

    // Parses slider value to user defined display.
    Link.prototype.format = function (a) {
        return this.formatting.to(a);
    };

    // Converts a formatted value back to a real number.
    Link.prototype.getValue = function (a) {
        return this.formatting.from(a);
    };

    // We can now test for Link.init to be an instance of Link.
    Link.prototype.init.prototype = Link.prototype;

    /** @expose */
    $.Link = Link;

}(window['jQuery'] || window['Zepto']));

;
!function(){"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n};!function(e){function a(n,e){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},t=Object.create(n.prototype);for(var o in a)t[o]=a[o];return t.constructor=e,e.prototype=t,e}function t(n){n=n||{},this.defaultProtocol=n.hasOwnProperty("defaultProtocol")?n.defaultProtocol:h.defaultProtocol,this.events=n.hasOwnProperty("events")?n.events:h.events,this.format=n.hasOwnProperty("format")?n.format:h.format,this.formatHref=n.hasOwnProperty("formatHref")?n.formatHref:h.formatHref,this.nl2br=n.hasOwnProperty("nl2br")?n.nl2br:h.nl2br,this.tagName=n.hasOwnProperty("tagName")?n.tagName:h.tagName,this.target=n.hasOwnProperty("target")?n.target:h.target,this.validate=n.hasOwnProperty("validate")?n.validate:h.validate,this.ignoreTags=[],this.attributes=n.attributes||n.linkAttributes||h.attributes,this.className=n.hasOwnProperty("className")?n.className:n.linkClass||h.className;for(var e=n.hasOwnProperty("ignoreTags")?n.ignoreTags:h.ignoreTags,a=0;a<e.length;a++)this.ignoreTags.push(e[a].toUpperCase())}function o(n,e){for(var a=0;a<n.length;a++)if(n[a]===e)return!0;return!1}function r(n){return n}function i(n,e){return"url"===e?"_blank":null}function s(){return function(n){this.j=[],this.T=n||null}}function c(n,e,a,t){for(var o=0,r=n.length,i=e,s=[],c=void 0;o<r&&(c=i.next(n[o]));)i=c,o++;if(o>=r)return[];for(;o<r-1;)c=new m(t),s.push(c),i.on(n[o],c),i=c,o++;return c=new m(a),s.push(c),i.on(n[r-1],c),s}function l(){return function(n){n&&(this.v=n)}}function u(n){var e=n?{v:n}:{};return a(d,l(),e)}function g(n){return n instanceof x||n instanceof C}var h={defaultProtocol:"http",events:null,format:r,formatHref:r,nl2br:!1,tagName:"a",target:i,validate:!0,ignoreTags:[],attributes:null,className:"linkified"};t.prototype={resolve:function(n){var e=n.toHref(this.defaultProtocol);return{formatted:this.get("format",n.toString(),n),formattedHref:this.get("formatHref",e,n),tagName:this.get("tagName",e,n),className:this.get("className",e,n),target:this.get("target",e,n),events:this.getObject("events",e,n),attributes:this.getObject("attributes",e,n)}},check:function(n){return this.get("validate",n.toString(),n)},get:function(e,a,t){var o=void 0,r=this[e];if(!r)return r;switch("undefined"==typeof r?"undefined":n(r)){case"function":return r(a,t.type);case"object":return o=r.hasOwnProperty(t.type)?r[t.type]:h[e],"function"==typeof o?o(a,t.type):o}return r},getObject:function(n,e,a){var t=this[n];return"function"==typeof t?t(e,a.type):t}};var b=Object.freeze({defaults:h,Options:t,contains:o}),p=s();p.prototype={defaultTransition:!1,on:function(n,e){if(n instanceof Array){for(var a=0;a<n.length;a++)this.j.push([n[a],e]);return this}return this.j.push([n,e]),this},next:function(n){for(var e=0;e<this.j.length;e++){var a=this.j[e],t=a[0],o=a[1];if(this.test(n,t))return o}return this.defaultTransition},accepts:function(){return!!this.T},test:function(n,e){return n===e},emit:function(){return this.T}};var m=a(p,s(),{test:function(n,e){return n===e||e instanceof RegExp&&e.test(n)}}),f=a(p,s(),{jump:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=this.next(new n(""));return a===this.defaultTransition?(a=new this.constructor(e),this.on(n,a)):e&&(a.T=e),a},test:function(n,e){return n instanceof e}}),d=l();d.prototype={toString:function(){return this.v+""}};var x=u(),y=u("@"),v=u(":"),k=u("."),w=u(),j=u(),z=u("\n"),O=u(),q=u("+"),N=u("#"),S=u(),T=u("mailto:"),A=u("?"),L=u("/"),P=u("_"),E=u(),C=u(),R=u(),H=u("{"),B=u("["),U=u("<"),M=u("("),D=u("}"),I=u("]"),K=u(">"),_=u(")"),G=u("&"),Y=Object.freeze({Base:d,DOMAIN:x,AT:y,COLON:v,DOT:k,PUNCTUATION:w,LOCALHOST:j,NL:z,NUM:O,PLUS:q,POUND:N,QUERY:A,PROTOCOL:S,MAILTO:T,SLASH:L,UNDERSCORE:P,SYM:E,TLD:C,WS:R,OPENBRACE:H,OPENBRACKET:B,OPENANGLEBRACKET:U,OPENPAREN:M,CLOSEBRACE:D,CLOSEBRACKET:I,CLOSEANGLEBRACKET:K,CLOSEPAREN:_,AMPERSAND:G}),Q="aaa|aarp|abarth|abb|abbott|abbvie|abc|able|abogado|abudhabi|ac|academy|accenture|accountant|accountants|aco|active|actor|ad|adac|ads|adult|ae|aeg|aero|aetna|af|afamilycompany|afl|africa|ag|agakhan|agency|ai|aig|aigo|airbus|airforce|airtel|akdn|al|alfaromeo|alibaba|alipay|allfinanz|allstate|ally|alsace|alstom|am|americanexpress|americanfamily|amex|amfam|amica|amsterdam|analytics|android|anquan|anz|ao|aol|apartments|app|apple|aq|aquarelle|ar|arab|aramco|archi|army|arpa|art|arte|as|asda|asia|associates|at|athleta|attorney|au|auction|audi|audible|audio|auspost|author|auto|autos|avianca|aw|aws|ax|axa|az|azure|ba|baby|baidu|banamex|bananarepublic|band|bank|bar|barcelona|barclaycard|barclays|barefoot|bargains|baseball|basketball|bauhaus|bayern|bb|bbc|bbt|bbva|bcg|bcn|bd|be|beats|beauty|beer|bentley|berlin|best|bestbuy|bet|bf|bg|bh|bharti|bi|bible|bid|bike|bing|bingo|bio|biz|bj|black|blackfriday|blanco|blockbuster|blog|bloomberg|blue|bm|bms|bmw|bn|bnl|bnpparibas|bo|boats|boehringer|bofa|bom|bond|boo|book|booking|boots|bosch|bostik|boston|bot|boutique|box|br|bradesco|bridgestone|broadway|broker|brother|brussels|bs|bt|budapest|bugatti|build|builders|business|buy|buzz|bv|bw|by|bz|bzh|ca|cab|cafe|cal|call|calvinklein|cam|camera|camp|cancerresearch|canon|capetown|capital|capitalone|car|caravan|cards|care|career|careers|cars|cartier|casa|case|caseih|cash|casino|cat|catering|catholic|cba|cbn|cbre|cbs|cc|cd|ceb|center|ceo|cern|cf|cfa|cfd|cg|ch|chanel|channel|chase|chat|cheap|chintai|chloe|christmas|chrome|chrysler|church|ci|cipriani|circle|cisco|citadel|citi|citic|city|cityeats|ck|cl|claims|cleaning|click|clinic|clinique|clothing|cloud|club|clubmed|cm|cn|co|coach|codes|coffee|college|cologne|com|comcast|commbank|community|company|compare|computer|comsec|condos|construction|consulting|contact|contractors|cooking|cookingchannel|cool|coop|corsica|country|coupon|coupons|courses|cr|credit|creditcard|creditunion|cricket|crown|crs|cruise|cruises|csc|cu|cuisinella|cv|cw|cx|cy|cymru|cyou|cz|dabur|dad|dance|data|date|dating|datsun|day|dclk|dds|de|deal|dealer|deals|degree|delivery|dell|deloitte|delta|democrat|dental|dentist|desi|design|dev|dhl|diamonds|diet|digital|direct|directory|discount|discover|dish|diy|dj|dk|dm|dnp|do|docs|doctor|dodge|dog|doha|domains|dot|download|drive|dtv|dubai|duck|dunlop|duns|dupont|durban|dvag|dvr|dz|earth|eat|ec|eco|edeka|edu|education|ee|eg|email|emerck|energy|engineer|engineering|enterprises|epost|epson|equipment|er|ericsson|erni|es|esq|estate|esurance|et|etisalat|eu|eurovision|eus|events|everbank|exchange|expert|exposed|express|extraspace|fage|fail|fairwinds|faith|family|fan|fans|farm|farmers|fashion|fast|fedex|feedback|ferrari|ferrero|fi|fiat|fidelity|fido|film|final|finance|financial|fire|firestone|firmdale|fish|fishing|fit|fitness|fj|fk|flickr|flights|flir|florist|flowers|fly|fm|fo|foo|food|foodnetwork|football|ford|forex|forsale|forum|foundation|fox|fr|free|fresenius|frl|frogans|frontdoor|frontier|ftr|fujitsu|fujixerox|fun|fund|furniture|futbol|fyi|ga|gal|gallery|gallo|gallup|game|games|gap|garden|gb|gbiz|gd|gdn|ge|gea|gent|genting|george|gf|gg|ggee|gh|gi|gift|gifts|gives|giving|gl|glade|glass|gle|global|globo|gm|gmail|gmbh|gmo|gmx|gn|godaddy|gold|goldpoint|golf|goo|goodhands|goodyear|goog|google|gop|got|gov|gp|gq|gr|grainger|graphics|gratis|green|gripe|grocery|group|gs|gt|gu|guardian|gucci|guge|guide|guitars|guru|gw|gy|hair|hamburg|hangout|haus|hbo|hdfc|hdfcbank|health|healthcare|help|helsinki|here|hermes|hgtv|hiphop|hisamitsu|hitachi|hiv|hk|hkt|hm|hn|hockey|holdings|holiday|homedepot|homegoods|homes|homesense|honda|honeywell|horse|hospital|host|hosting|hot|hoteles|hotels|hotmail|house|how|hr|hsbc|ht|htc|hu|hughes|hyatt|hyundai|ibm|icbc|ice|icu|id|ie|ieee|ifm|ikano|il|im|imamat|imdb|immo|immobilien|in|industries|infiniti|info|ing|ink|institute|insurance|insure|int|intel|international|intuit|investments|io|ipiranga|iq|ir|irish|is|iselect|ismaili|ist|istanbul|it|itau|itv|iveco|iwc|jaguar|java|jcb|jcp|je|jeep|jetzt|jewelry|jio|jlc|jll|jm|jmp|jnj|jo|jobs|joburg|jot|joy|jp|jpmorgan|jprs|juegos|juniper|kaufen|kddi|ke|kerryhotels|kerrylogistics|kerryproperties|kfh|kg|kh|ki|kia|kim|kinder|kindle|kitchen|kiwi|km|kn|koeln|komatsu|kosher|kp|kpmg|kpn|kr|krd|kred|kuokgroup|kw|ky|kyoto|kz|la|lacaixa|ladbrokes|lamborghini|lamer|lancaster|lancia|lancome|land|landrover|lanxess|lasalle|lat|latino|latrobe|law|lawyer|lb|lc|lds|lease|leclerc|lefrak|legal|lego|lexus|lgbt|li|liaison|lidl|life|lifeinsurance|lifestyle|lighting|like|lilly|limited|limo|lincoln|linde|link|lipsy|live|living|lixil|lk|loan|loans|locker|locus|loft|lol|london|lotte|lotto|love|lpl|lplfinancial|lr|ls|lt|ltd|ltda|lu|lundbeck|lupin|luxe|luxury|lv|ly|ma|macys|madrid|maif|maison|makeup|man|management|mango|map|market|marketing|markets|marriott|marshalls|maserati|mattel|mba|mc|mckinsey|md|me|med|media|meet|melbourne|meme|memorial|men|menu|meo|merckmsd|metlife|mg|mh|miami|microsoft|mil|mini|mint|mit|mitsubishi|mk|ml|mlb|mls|mm|mma|mn|mo|mobi|mobile|mobily|moda|moe|moi|mom|monash|money|monster|mopar|mormon|mortgage|moscow|moto|motorcycles|mov|movie|movistar|mp|mq|mr|ms|msd|mt|mtn|mtr|mu|museum|mutual|mv|mw|mx|my|mz|na|nab|nadex|nagoya|name|nationwide|natura|navy|nba|nc|ne|nec|net|netbank|netflix|network|neustar|new|newholland|news|next|nextdirect|nexus|nf|nfl|ng|ngo|nhk|ni|nico|nike|nikon|ninja|nissan|nissay|nl|no|nokia|northwesternmutual|norton|now|nowruz|nowtv|np|nr|nra|nrw|ntt|nu|nyc|nz|obi|observer|off|office|okinawa|olayan|olayangroup|oldnavy|ollo|om|omega|one|ong|onl|online|onyourside|ooo|open|oracle|orange|org|organic|origins|osaka|otsuka|ott|ovh|pa|page|panasonic|panerai|paris|pars|partners|parts|party|passagens|pay|pccw|pe|pet|pf|pfizer|pg|ph|pharmacy|phd|philips|phone|photo|photography|photos|physio|piaget|pics|pictet|pictures|pid|pin|ping|pink|pioneer|pizza|pk|pl|place|play|playstation|plumbing|plus|pm|pn|pnc|pohl|poker|politie|porn|post|pr|pramerica|praxi|press|prime|pro|prod|productions|prof|progressive|promo|properties|property|protection|pru|prudential|ps|pt|pub|pw|pwc|py|qa|qpon|quebec|quest|qvc|racing|radio|raid|re|read|realestate|realtor|realty|recipes|red|redstone|redumbrella|rehab|reise|reisen|reit|reliance|ren|rent|rentals|repair|report|republican|rest|restaurant|review|reviews|rexroth|rich|richardli|ricoh|rightathome|ril|rio|rip|rmit|ro|rocher|rocks|rodeo|rogers|room|rs|rsvp|ru|rugby|ruhr|run|rw|rwe|ryukyu|sa|saarland|safe|safety|sakura|sale|salon|samsclub|samsung|sandvik|sandvikcoromant|sanofi|sap|sapo|sarl|sas|save|saxo|sb|sbi|sbs|sc|sca|scb|schaeffler|schmidt|scholarships|school|schule|schwarz|science|scjohnson|scor|scot|sd|se|search|seat|secure|security|seek|select|sener|services|ses|seven|sew|sex|sexy|sfr|sg|sh|shangrila|sharp|shaw|shell|shia|shiksha|shoes|shop|shopping|shouji|show|showtime|shriram|si|silk|sina|singles|site|sj|sk|ski|skin|sky|skype|sl|sling|sm|smart|smile|sn|sncf|so|soccer|social|softbank|software|sohu|solar|solutions|song|sony|soy|space|spiegel|spot|spreadbetting|sr|srl|srt|st|stada|staples|star|starhub|statebank|statefarm|statoil|stc|stcgroup|stockholm|storage|store|stream|studio|study|style|su|sucks|supplies|supply|support|surf|surgery|suzuki|sv|swatch|swiftcover|swiss|sx|sy|sydney|symantec|systems|sz|tab|taipei|talk|taobao|target|tatamotors|tatar|tattoo|tax|taxi|tc|tci|td|tdk|team|tech|technology|tel|telecity|telefonica|temasek|tennis|teva|tf|tg|th|thd|theater|theatre|tiaa|tickets|tienda|tiffany|tips|tires|tirol|tj|tjmaxx|tjx|tk|tkmaxx|tl|tm|tmall|tn|to|today|tokyo|tools|top|toray|toshiba|total|tours|town|toyota|toys|tr|trade|trading|training|travel|travelchannel|travelers|travelersinsurance|trust|trv|tt|tube|tui|tunes|tushu|tv|tvs|tw|tz|ua|ubank|ubs|uconnect|ug|uk|unicom|university|uno|uol|ups|us|uy|uz|va|vacations|vana|vanguard|vc|ve|vegas|ventures|verisign|versicherung|vet|vg|vi|viajes|video|vig|viking|villas|vin|vip|virgin|visa|vision|vista|vistaprint|viva|vivo|vlaanderen|vn|vodka|volkswagen|volvo|vote|voting|voto|voyage|vu|vuelos|wales|walmart|walter|wang|wanggou|warman|watch|watches|weather|weatherchannel|webcam|weber|website|wed|wedding|weibo|weir|wf|whoswho|wien|wiki|williamhill|win|windows|wine|winners|wme|wolterskluwer|woodside|work|works|world|wow|ws|wtc|wtf|xbox|xerox|xfinity|xihuan|xin|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--30rr7y|xn--3bst00m|xn--3ds443g|xn--3e0b707e|xn--3hcrj9c|xn--3oq18vl8pn36a|xn--3pxu8k|xn--42c2d9a|xn--45br5cyl|xn--45brj9c|xn--45q11c|xn--4gbrim|xn--54b7fta0cc|xn--55qw42g|xn--55qx5d|xn--5su34j936bgsg|xn--5tzm5g|xn--6frz82g|xn--6qq986b3xl|xn--80adxhks|xn--80ao21a|xn--80aqecdr1a|xn--80asehdb|xn--80aswg|xn--8y0a063a|xn--90a3ac|xn--90ae|xn--90ais|xn--9dbq2a|xn--9et52u|xn--9krt00a|xn--b4w605ferd|xn--bck1b9a5dre4c|xn--c1avg|xn--c2br7g|xn--cck2b3b|xn--cg4bki|xn--clchc0ea0b2g2a9gcd|xn--czr694b|xn--czrs0t|xn--czru2d|xn--d1acj3b|xn--d1alf|xn--e1a4c|xn--eckvdtc9d|xn--efvy88h|xn--estv75g|xn--fct429k|xn--fhbei|xn--fiq228c5hs|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--fjq720a|xn--flw351e|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--fzys8d69uvgm|xn--g2xx48c|xn--gckr3f0f|xn--gecrj9c|xn--gk3at1e|xn--h2breg3eve|xn--h2brj9c|xn--h2brj9c8c|xn--hxt814e|xn--i1b6b1a6a2e|xn--imr513n|xn--io0a7i|xn--j1aef|xn--j1amh|xn--j6w193g|xn--jlq61u9w7b|xn--jvr189m|xn--kcrx77d1x4a|xn--kprw13d|xn--kpry57d|xn--kpu716f|xn--kput3i|xn--l1acc|xn--lgbbat1ad8j|xn--mgb9awbf|xn--mgba3a3ejt|xn--mgba3a4f16a|xn--mgba7c0bbn0a|xn--mgbaakc7dvf|xn--mgbaam7a8h|xn--mgbab2bd|xn--mgbai9azgqp6j|xn--mgbayh7gpa|xn--mgbb9fbpob|xn--mgbbh1a|xn--mgbbh1a71e|xn--mgbc0a9azcg|xn--mgbca7dzdo|xn--mgberp4a5d4ar|xn--mgbgu82a|xn--mgbi4ecexp|xn--mgbpl2fh|xn--mgbt3dhd|xn--mgbtx2b|xn--mgbx4cd0ab|xn--mix891f|xn--mk1bu44c|xn--mxtq1m|xn--ngbc5azd|xn--ngbe9e0a|xn--ngbrx|xn--node|xn--nqv7f|xn--nqv7fs00ema|xn--nyqy26a|xn--o3cw4h|xn--ogbpf8fl|xn--p1acf|xn--p1ai|xn--pbt977c|xn--pgbs0dh|xn--pssy2u|xn--q9jyb4c|xn--qcka1pmc|xn--qxam|xn--rhqv96g|xn--rovu88b|xn--rvc1e0am3e|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--tckwe|xn--tiq49xqyj|xn--unup4y|xn--vermgensberater-ctb|xn--vermgensberatung-pwb|xn--vhquv|xn--vuq861b|xn--w4r85el8fhu5dnra|xn--w4rs40l|xn--wgbh1c|xn--wgbl6a|xn--xhq521b|xn--xkc2al3hye2a|xn--xkc2dl3a5ee0h|xn--y9a3aq|xn--yfro4i67o|xn--ygbi2ammx|xn--zfr164b|xperia|xxx|xyz|yachts|yahoo|yamaxun|yandex|ye|yodobashi|yoga|yokohama|you|youtube|yt|yun|za|zappos|zara|zero|zip|zippo|zm|zone|zuerich|zw".split("|"),W="0123456789".split(""),X="0123456789abcdefghijklmnopqrstuvwxyz".split(""),Z=[" ","\f","\r","\t","\x0B"," "," ","᠎"],F=[],J=function(n){return new m(n)},V=J(),$=J(O),nn=J(x),en=J(),an=J(R);V.on("@",J(y)).on(".",J(k)).on("+",J(q)).on("#",J(N)).on("?",J(A)).on("/",J(L)).on("_",J(P)).on(":",J(v)).on("{",J(H)).on("[",J(B)).on("<",J(U)).on("(",J(M)).on("}",J(D)).on("]",J(I)).on(">",J(K)).on(")",J(_)).on("&",J(G)).on([",",";","!",'"',"'"],J(w)),V.on("\n",J(z)).on(Z,an),an.on(Z,an);for(var tn=0;tn<Q.length;tn++){var on=c(Q[tn],V,C,x);F.push.apply(F,on)}var rn=c("file",V,x,x),sn=c("ftp",V,x,x),cn=c("http",V,x,x),ln=c("mailto",V,x,x);F.push.apply(F,rn),F.push.apply(F,sn),F.push.apply(F,cn),F.push.apply(F,ln);var un=rn.pop(),gn=sn.pop(),hn=cn.pop(),bn=ln.pop(),pn=J(x),mn=J(S),fn=J(T);gn.on("s",pn).on(":",mn),hn.on("s",pn).on(":",mn),F.push(pn),un.on(":",mn),pn.on(":",mn),bn.on(":",fn);var dn=c("localhost",V,j,x);F.push.apply(F,dn),V.on(W,$),$.on("-",en).on(W,$).on(X,nn),nn.on("-",en).on(X,nn);for(var xn=0;xn<F.length;xn++)F[xn].on("-",en).on(X,nn);en.on("-",en).on(W,nn).on(X,nn),V.defaultTransition=J(E);var yn=function(n){for(var e=n.replace(/[A-Z]/g,function(n){return n.toLowerCase()}),a=n.length,t=[],o=0;o<a;){for(var r=V,i=null,s=0,c=null,l=-1;o<a&&(i=r.next(e[o]));)r=i,r.accepts()?(l=0,c=r):l>=0&&l++,s++,o++;if(!(l<0)){o-=l,s-=l;var u=c.emit();t.push(new u(n.substr(o-s,s)))}}return t},vn=V,kn=Object.freeze({State:m,TOKENS:Y,run:yn,start:vn}),wn=l();wn.prototype={type:"token",isLink:!1,toString:function(){for(var n=[],e=0;e<this.v.length;e++)n.push(this.v[e].toString());return n.join("")},toHref:function(){return this.toString()},toObject:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"http";return{type:this.type,value:this.toString(),href:this.toHref(n)}}};var jn=a(wn,l(),{type:"email",isLink:!0}),zn=a(wn,l(),{type:"email",isLink:!0,toHref:function(){return"mailto:"+this.toString()}}),On=a(wn,l(),{type:"text"}),qn=a(wn,l(),{type:"nl"}),Nn=a(wn,l(),{type:"url",isLink:!0,toHref:function(){for(var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"http",e=!1,a=!1,t=this.v,o=[],r=0;t[r]instanceof S;)e=!0,o.push(t[r].toString().toLowerCase()),r++;for(;t[r]instanceof L;)a=!0,o.push(t[r].toString()),r++;for(;g(t[r]);)o.push(t[r].toString().toLowerCase()),r++;for(;r<t.length;r++)o.push(t[r].toString());return o=o.join(""),e||a||(o=n+"://"+o),o},hasProtocol:function(){return this.v[0]instanceof S}}),Sn=Object.freeze({Base:wn,MAILTOEMAIL:jn,EMAIL:zn,NL:qn,TEXT:On,URL:Nn}),Tn=function(n){return new f(n)},An=Tn(),Ln=Tn(),Pn=Tn(),En=Tn(),Cn=Tn(),Rn=Tn(),Hn=Tn(),Bn=Tn(Nn),Un=Tn(),Mn=Tn(Nn),Dn=Tn(Nn),In=Tn(),Kn=Tn(),_n=Tn(),Gn=Tn(),Yn=Tn(),Qn=Tn(Nn),Wn=Tn(Nn),Xn=Tn(Nn),Zn=Tn(Nn),Fn=Tn(),Jn=Tn(),Vn=Tn(),$n=Tn(),ne=Tn(),ee=Tn(),ae=Tn(zn),te=Tn(),oe=Tn(zn),re=Tn(jn),ie=Tn(),se=Tn(),ce=Tn(),le=Tn(),ue=Tn(qn);An.on(z,ue).on(S,Ln).on(T,Pn).on(L,En),Ln.on(L,En),En.on(L,Cn),An.on(C,Rn).on(x,Rn).on(j,Bn).on(O,Rn),Cn.on(C,Dn).on(x,Dn).on(O,Dn).on(j,Dn),Rn.on(k,Hn),ne.on(k,ee),Hn.on(C,Bn).on(x,Rn).on(O,Rn).on(j,Rn),ee.on(C,ae).on(x,ne).on(O,ne).on(j,ne),Bn.on(k,Hn),ae.on(k,ee),Bn.on(v,Un).on(L,Dn),Un.on(O,Mn),Mn.on(L,Dn),ae.on(v,te),te.on(O,oe);var ge=[x,y,j,O,q,N,S,L,C,P,E,G],he=[v,k,A,w,D,I,K,_,H,B,U,M];Dn.on(H,Kn).on(B,_n).on(U,Gn).on(M,Yn),In.on(H,Kn).on(B,_n).on(U,Gn).on(M,Yn),Kn.on(D,Dn),_n.on(I,Dn),Gn.on(K,Dn),Yn.on(_,Dn),Qn.on(D,Dn),Wn.on(I,Dn),Xn.on(K,Dn),Zn.on(_,Dn),Fn.on(D,Dn),Jn.on(I,Dn),Vn.on(K,Dn),$n.on(_,Dn),Kn.on(ge,Qn),_n.on(ge,Wn),Gn.on(ge,Xn),Yn.on(ge,Zn),Kn.on(he,Fn),_n.on(he,Jn),Gn.on(he,Vn),Yn.on(he,$n),Qn.on(ge,Qn),Wn.on(ge,Wn),Xn.on(ge,Xn),Zn.on(ge,Zn),Qn.on(he,Qn),Wn.on(he,Wn),Xn.on(he,Xn),Zn.on(he,Zn),Fn.on(ge,Qn),Jn.on(ge,Wn),Vn.on(ge,Xn),$n.on(ge,Zn),Fn.on(he,Fn),Jn.on(he,Jn),Vn.on(he,Vn),$n.on(he,$n),Dn.on(ge,Dn),In.on(ge,Dn),Dn.on(he,In),In.on(he,In),Pn.on(C,re).on(x,re).on(O,re).on(j,re),re.on(ge,re).on(he,ie),ie.on(ge,re).on(he,ie);var be=[x,O,q,N,A,P,E,G,C];Rn.on(be,se).on(y,ce),Bn.on(be,se).on(y,ce),Hn.on(be,se),se.on(be,se).on(y,ce).on(k,le),le.on(be,se),ce.on(C,ne).on(x,ne).on(j,ae);var pe=function(n){for(var e=n.length,a=0,t=[],o=[];a<e;){for(var r=An,i=null,s=null,c=0,l=null,u=-1;a<e&&!(i=r.next(n[a]));)o.push(n[a++]);for(;a<e&&(s=i||r.next(n[a]));)i=null,r=s,r.accepts()?(u=0,l=r):u>=0&&u++,a++,c++;if(u<0)for(var g=a-c;g<a;g++)o.push(n[g]);else{o.length>0&&(t.push(new On(o)),o=[]),a-=u,c-=u;var h=l.emit();t.push(new h(n.slice(a-c,a)))}}return o.length>0&&t.push(new On(o)),t},me=Object.freeze({State:f,TOKENS:Sn,run:pe,start:An});Array.isArray||(Array.isArray=function(n){return"[object Array]"===Object.prototype.toString.call(n)});var fe=function(n){return pe(yn(n))},de=function(n){for(var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=fe(n),t=[],o=0;o<a.length;o++){var r=a[o];!r.isLink||e&&r.type!==e||t.push(r.toObject())}return t},xe=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,a=fe(n);return 1===a.length&&a[0].isLink&&(!e||a[0].type===e)};e.find=de,e.inherits=a,e.options=b,e.parser=me,e.scanner=kn,e.test=xe,e.tokenize=fe}(self.linkify=self.linkify||{})}();;
"use strict";!function(t,i){var s=function(t){function i(t){this.a=t}function s(t){return v.test(t)}function e(t){return k.test(t)}function h(t){return t.replace(A,"\n")}function r(t,i){this.b=t,this.c=i,this.d=null,this.input=null,this.e=-1,this.f=-1,this.g=-1,this.h=-1,this.i=-1,this.j()}function n(t,i){this.k=null,this.startLine=1,this.startColumn=0,this.options=i||{},this.tokenizer=new r(this,t)}function a(t,s){var e=new n(new i(p),s);return e.tokenize(t)}function o(t){var i,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},e=z.tokenize(t),h=[],r=[];for(s=new D(s),i=0;i<e.length;i++){var n=e[i];if(n.type!==y)if(n.type===T){var a=u(n.chars,s);h.push.apply(h,a)}else h.push(n);else{h.push(n);var o=n.tagName.toUpperCase(),c="A"===o||N.contains(s.ignoreTags,o);if(!c)continue;var p=h.length;f(o,e,++i,h),i+=h.length-p-1}}for(i=0;i<h.length;i++){var l=h[i];switch(l.type){case y:var m="<"+l.tagName;if(l.attributes.length>0){var g=d(l.attributes);m+=" "+g.join(" ")}m+=">",r.push(m);break;case C:r.push("</"+l.tagName+">");break;case T:r.push(b(l.chars));break;case F:r.push("<!--"+b(l.chars)+"-->")}}return r.join("")}function u(i,s){for(var e=t.tokenize(i),h=[],r=0;r<e.length;r++){var n=e[r];if("nl"===n.type&&s.nl2br)h.push({type:y,tagName:"br",attributes:[],l:!0});else if(n.isLink&&s.check(n)){var a=s.resolve(n),o=a.formatted,u=a.formattedHref,f=a.tagName,b=a.className,c=a.target,d=a.attributes,p=[["href",u]];b&&p.push(["class",b]),c&&p.push(["target",c]);for(var l in d)p.push([l,d[l]]);h.push({type:y,tagName:f,attributes:p,l:!1}),h.push({type:T,chars:o}),h.push({type:C,tagName:f})}else h.push({type:T,chars:n.toString()})}return h}function f(t,i,s,e){for(var h=1;s<i.length&&h>0;){var r=i[s];r.type===y&&r.tagName.toUpperCase()===t?h++:r.type===C&&r.tagName.toUpperCase()===t&&h--,e.push(r),s++}return e}function b(t){return t}function c(t){return t.replace(/"/g,"&quot;")}function d(t){for(var i=[],s=0;s<t.length;s++){var e=t[s],h=e[0],r=e[1];i.push(h+'="'+c(r)+'"')}return i}var p={m:" "},l=/^#[xX]([A-Fa-f0-9]+)$/,m=/^#([0-9]+)$/,g=/^([A-Za-z0-9]+)$/;i.prototype.parse=function(t){if(t){var i=t.match(l);return i?"&#x"+i[1]+";":(i=t.match(m))?"&#"+i[1]+";":(i=t.match(g),i?this.a[i[1]]||"&"+i[1]+";":void 0)}};var v=/[\t\n\f ]/,k=/[A-Za-z]/,A=/\r\n?/g;r.prototype={j:function(){this.d="beforeData",this.input="",this.e=0,this.f=1,this.g=0,this.h=-1,this.i=-1,this.b.j()},tokenize:function(t){this.j(),this.tokenizePart(t),this.tokenizeEOF()},tokenizePart:function(t){for(this.input+=h(t);this.e<this.input.length;)this.n[this.d].call(this)},tokenizeEOF:function(){this.o()},o:function(){"data"===this.d&&(this.b.p(),this.d="beforeData")},q:function(){return this.input.charAt(this.e)},r:function(){var t=this.q();return this.e++,"\n"===t?(this.f++,this.g=0):this.g++,t},s:function(){var t=this.input.indexOf(";",this.e);if(t!==-1){var i=this.input.slice(this.e,t),s=this.c.parse(i);if(s){for(var e=i.length;e;)this.r(),e--;return this.r(),s}}},t:function(){this.h=this.f,this.i=this.g,this.b.tagOpen&&this.b.tagOpen()},n:{beforeData:function(){var t=this.q();"<"===t?(this.d="tagOpen",this.t(),this.r()):(this.d="data",this.b.u())},data:function(){var t=this.q();"<"===t?(this.b.p(),this.d="tagOpen",this.t(),this.r()):"&"===t?(this.r(),this.b.v(this.s()||"&")):(this.r(),this.b.v(t))},tagOpen:function(){var t=this.r();"!"===t?this.d="markupDeclaration":"/"===t?this.d="endTagOpen":e(t)&&(this.d="tagName",this.b.w(),this.b.x(t.toLowerCase()))},markupDeclaration:function(){var t=this.r();"-"===t&&"-"===this.input.charAt(this.e)&&(this.r(),this.d="commentStart",this.b.y())},commentStart:function(){var t=this.r();"-"===t?this.d="commentStartDash":">"===t?(this.b.z(),this.d="beforeData"):(this.b.A(t),this.d="comment")},commentStartDash:function(){var t=this.r();"-"===t?this.d="commentEnd":">"===t?(this.b.z(),this.d="beforeData"):(this.b.A("-"),this.d="comment")},comment:function(){var t=this.r();"-"===t?this.d="commentEndDash":this.b.A(t)},commentEndDash:function(){var t=this.r();"-"===t?this.d="commentEnd":(this.b.A("-"+t),this.d="comment")},commentEnd:function(){var t=this.r();">"===t?(this.b.z(),this.d="beforeData"):(this.b.A("--"+t),this.d="comment")},tagName:function(){var t=this.r();s(t)?this.d="beforeAttributeName":"/"===t?this.d="selfClosingStartTag":">"===t?(this.b.B(),this.d="beforeData"):this.b.x(t)},beforeAttributeName:function(){var t=this.q();return s(t)?void this.r():void("/"===t?(this.d="selfClosingStartTag",this.r()):">"===t?(this.r(),this.b.B(),this.d="beforeData"):(this.d="attributeName",this.b.C(),this.r(),this.b.D(t)))},attributeName:function(){var t=this.q();s(t)?(this.d="afterAttributeName",this.r()):"/"===t?(this.b.F(!1),this.b.G(),this.r(),this.d="selfClosingStartTag"):"="===t?(this.d="beforeAttributeValue",this.r()):">"===t?(this.b.F(!1),this.b.G(),this.r(),this.b.B(),this.d="beforeData"):(this.r(),this.b.D(t))},afterAttributeName:function(){var t=this.q();return s(t)?void this.r():void("/"===t?(this.b.F(!1),this.b.G(),this.r(),this.d="selfClosingStartTag"):"="===t?(this.r(),this.d="beforeAttributeValue"):">"===t?(this.b.F(!1),this.b.G(),this.r(),this.b.B(),this.d="beforeData"):(this.b.F(!1),this.b.G(),this.r(),this.d="attributeName",this.b.C(),this.b.D(t)))},beforeAttributeValue:function(){var t=this.q();s(t)?this.r():'"'===t?(this.d="attributeValueDoubleQuoted",this.b.F(!0),this.r()):"'"===t?(this.d="attributeValueSingleQuoted",this.b.F(!0),this.r()):">"===t?(this.b.F(!1),this.b.G(),this.r(),this.b.B(),this.d="beforeData"):(this.d="attributeValueUnquoted",this.b.F(!1),this.r(),this.b.H(t))},attributeValueDoubleQuoted:function(){var t=this.r();'"'===t?(this.b.G(),this.d="afterAttributeValueQuoted"):"&"===t?this.b.H(this.s('"')||"&"):this.b.H(t)},attributeValueSingleQuoted:function(){var t=this.r();"'"===t?(this.b.G(),this.d="afterAttributeValueQuoted"):"&"===t?this.b.H(this.s("'")||"&"):this.b.H(t)},attributeValueUnquoted:function(){var t=this.q();s(t)?(this.b.G(),this.r(),this.d="beforeAttributeName"):"&"===t?(this.r(),this.b.H(this.s(">")||"&")):">"===t?(this.b.G(),this.r(),this.b.B(),this.d="beforeData"):(this.r(),this.b.H(t))},afterAttributeValueQuoted:function(){var t=this.q();s(t)?(this.r(),this.d="beforeAttributeName"):"/"===t?(this.r(),this.d="selfClosingStartTag"):">"===t?(this.r(),this.b.B(),this.d="beforeData"):this.d="beforeAttributeName"},selfClosingStartTag:function(){var t=this.q();">"===t?(this.r(),this.b.I(),this.b.B(),this.d="beforeData"):this.d="beforeAttributeName"},endTagOpen:function(){var t=this.r();e(t)&&(this.d="tagName",this.b.J(),this.b.x(t.toLowerCase()))}}},n.prototype={tokenize:function(t){return this.K=[],this.tokenizer.tokenize(t),this.K},tokenizePart:function(t){return this.K=[],this.tokenizer.tokenizePart(t),this.K},tokenizeEOF:function(){return this.K=[],this.tokenizer.tokenizeEOF(),this.K[0]},j:function(){this.k=null,this.startLine=1,this.startColumn=0},L:function(){this.options.M&&(this.k.M={start:{f:this.startLine,g:this.startColumn},N:{f:this.tokenizer.f,g:this.tokenizer.g}}),this.startLine=this.tokenizer.f,this.startColumn=this.tokenizer.g},u:function(){this.k={type:"Chars",chars:""},this.K.push(this.k)},v:function(t){this.k.chars+=t},p:function(){this.L()},y:function(){this.k={type:"Comment",chars:""},this.K.push(this.k)},A:function(t){this.k.chars+=t},z:function(){this.L()},w:function(){this.k={type:"StartTag",tagName:"",attributes:[],l:!1},this.K.push(this.k)},J:function(){this.k={type:"EndTag",tagName:""},this.K.push(this.k)},B:function(){this.L()},I:function(){this.k.l=!0},x:function(t){this.k.tagName+=t},C:function(){this._currentAttribute=["","",null],this.k.attributes.push(this._currentAttribute)},D:function(t){this._currentAttribute[0]+=t},F:function(t){this._currentAttribute[2]=t},H:function(t){this._currentAttribute[1]=this._currentAttribute[1]||"",this._currentAttribute[1]+=t},G:function(){}};var z={HTML5NamedCharRefs:p,EntityParser:i,EventedTokenizer:r,Tokenizer:n,tokenize:a},N=t.options,D=N.Options,y="StartTag",C="EndTag",T="Chars",F="Comment";return o}(i);t.linkifyHtml=s}(window,linkify);;
/*!
 * Knockout JavaScript library v3.4.0
 * (c) Steven Sanderson - http://knockoutjs.com/
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

(function () {
    (function (n) {
        var x = this || (0, eval)("this"), u = x.document, M = x.navigator, v = x.jQuery, F = x.JSON; (function (n) { "function" === typeof define && define.amd ? define(["exports", "require"], n) : "object" === typeof exports && "object" === typeof module ? n(module.exports || exports) : n(x.ko = {}) })(function (N, O) {
            function J(a, c) { return null === a || typeof a in T ? a === c : !1 } function U(b, c) { var d; return function () { d || (d = a.a.setTimeout(function () { d = n; b() }, c)) } } function V(b, c) { var d; return function () { clearTimeout(d); d = a.a.setTimeout(b, c) } } function W(a,
            c) { c && c !== I ? "beforeChange" === c ? this.Kb(a) : this.Ha(a, c) : this.Lb(a) } function X(a, c) { null !== c && c.k && c.k() } function Y(a, c) { var d = this.Hc, e = d[s]; e.R || (this.lb && this.Ma[c] ? (d.Pb(c, a, this.Ma[c]), this.Ma[c] = null, --this.lb) : e.r[c] || d.Pb(c, a, e.s ? { ia: a } : d.uc(a))) } function K(b, c, d, e) {
                a.d[b] = { init: function (b, g, k, l, m) { var h, r; a.m(function () { var q = a.a.c(g()), p = !d !== !q, A = !r; if (A || c || p !== h) A && a.va.Aa() && (r = a.a.ua(a.f.childNodes(b), !0)), p ? (A || a.f.da(b, a.a.ua(r)), a.eb(e ? e(m, q) : m, b)) : a.f.xa(b), h = p }, null, { i: b }); return { controlsDescendantBindings: !0 } } };
                a.h.ta[b] = !1; a.f.Z[b] = !0
            } var a = "undefined" !== typeof N ? N : {}; a.b = function (b, c) { for (var d = b.split("."), e = a, f = 0; f < d.length - 1; f++) e = e[d[f]]; e[d[d.length - 1]] = c }; a.G = function (a, c, d) { a[c] = d }; a.version = "3.4.0"; a.b("version", a.version); a.options = { deferUpdates: !1, useOnlyNativeEvents: !1 }; a.a = function () {
                function b(a, b) { for (var c in a) a.hasOwnProperty(c) && b(c, a[c]) } function c(a, b) { if (b) for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]); return a } function d(a, b) { a.__proto__ = b; return a } function e(b, c, d, e) {
                    var h = b[c].match(r) ||
                    []; a.a.q(d.match(r), function (b) { a.a.pa(h, b, e) }); b[c] = h.join(" ")
                } var f = { __proto__: [] } instanceof Array, g = "function" === typeof Symbol, k = {}, l = {}; k[M && /Firefox\/2/i.test(M.userAgent) ? "KeyboardEvent" : "UIEvents"] = ["keyup", "keydown", "keypress"]; k.MouseEvents = "click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave".split(" "); b(k, function (a, b) { if (b.length) for (var c = 0, d = b.length; c < d; c++) l[b[c]] = a }); var m = { propertychange: !0 }, h = u && function () {
                    for (var a = 3, b = u.createElement("div"), c =
                    b.getElementsByTagName("i") ; b.innerHTML = "\x3c!--[if gt IE " + ++a + "]><i></i><![endif]--\x3e", c[0];); return 4 < a ? a : n
                }(), r = /\S+/g; return {
                    cc: ["authenticity_token", /^__RequestVerificationToken(_.*)?$/], q: function (a, b) { for (var c = 0, d = a.length; c < d; c++) b(a[c], c) }, o: function (a, b) { if ("function" == typeof Array.prototype.indexOf) return Array.prototype.indexOf.call(a, b); for (var c = 0, d = a.length; c < d; c++) if (a[c] === b) return c; return -1 }, Sb: function (a, b, c) {
                        for (var d = 0, e = a.length; d < e; d++) if (b.call(c, a[d], d)) return a[d];
                        return null
                    }, La: function (b, c) { var d = a.a.o(b, c); 0 < d ? b.splice(d, 1) : 0 === d && b.shift() }, Tb: function (b) { b = b || []; for (var c = [], d = 0, e = b.length; d < e; d++) 0 > a.a.o(c, b[d]) && c.push(b[d]); return c }, fb: function (a, b) { a = a || []; for (var c = [], d = 0, e = a.length; d < e; d++) c.push(b(a[d], d)); return c }, Ka: function (a, b) { a = a || []; for (var c = [], d = 0, e = a.length; d < e; d++) b(a[d], d) && c.push(a[d]); return c }, ra: function (a, b) { if (b instanceof Array) a.push.apply(a, b); else for (var c = 0, d = b.length; c < d; c++) a.push(b[c]); return a }, pa: function (b, c, d) {
                        var e =
                        a.a.o(a.a.zb(b), c); 0 > e ? d && b.push(c) : d || b.splice(e, 1)
                    }, ka: f, extend: c, Xa: d, Ya: f ? d : c, D: b, Ca: function (a, b) { if (!a) return a; var c = {}, d; for (d in a) a.hasOwnProperty(d) && (c[d] = b(a[d], d, a)); return c }, ob: function (b) { for (; b.firstChild;) a.removeNode(b.firstChild) }, jc: function (b) { b = a.a.V(b); for (var c = (b[0] && b[0].ownerDocument || u).createElement("div"), d = 0, e = b.length; d < e; d++) c.appendChild(a.$(b[d])); return c }, ua: function (b, c) { for (var d = 0, e = b.length, h = []; d < e; d++) { var m = b[d].cloneNode(!0); h.push(c ? a.$(m) : m) } return h },
                    da: function (b, c) { a.a.ob(b); if (c) for (var d = 0, e = c.length; d < e; d++) b.appendChild(c[d]) }, qc: function (b, c) { var d = b.nodeType ? [b] : b; if (0 < d.length) { for (var e = d[0], h = e.parentNode, m = 0, l = c.length; m < l; m++) h.insertBefore(c[m], e); m = 0; for (l = d.length; m < l; m++) a.removeNode(d[m]) } }, za: function (a, b) {
                        if (a.length) {
                            for (b = 8 === b.nodeType && b.parentNode || b; a.length && a[0].parentNode !== b;) a.splice(0, 1); for (; 1 < a.length && a[a.length - 1].parentNode !== b;) a.length--; if (1 < a.length) {
                                var c = a[0], d = a[a.length - 1]; for (a.length = 0; c !== d;) a.push(c),
                                c = c.nextSibling; a.push(d)
                            }
                        } return a
                    }, sc: function (a, b) { 7 > h ? a.setAttribute("selected", b) : a.selected = b }, $a: function (a) { return null === a || a === n ? "" : a.trim ? a.trim() : a.toString().replace(/^[\s\xa0]+|[\s\xa0]+$/g, "") }, nd: function (a, b) { a = a || ""; return b.length > a.length ? !1 : a.substring(0, b.length) === b }, Mc: function (a, b) {
                        if (a === b) return !0; if (11 === a.nodeType) return !1; if (b.contains) return b.contains(3 === a.nodeType ? a.parentNode : a); if (b.compareDocumentPosition) return 16 == (b.compareDocumentPosition(a) & 16); for (; a && a !=
                        b;) a = a.parentNode; return !!a
                    }, nb: function (b) { return a.a.Mc(b, b.ownerDocument.documentElement) }, Qb: function (b) { return !!a.a.Sb(b, a.a.nb) }, A: function (a) { return a && a.tagName && a.tagName.toLowerCase() }, Wb: function (b) { return a.onError ? function () { try { return b.apply(this, arguments) } catch (c) { throw a.onError && a.onError(c), c; } } : b }, setTimeout: function (b, c) { return setTimeout(a.a.Wb(b), c) }, $b: function (b) { setTimeout(function () { a.onError && a.onError(b); throw b; }, 0) }, p: function (b, c, d) {
                        var e = a.a.Wb(d); d = h && m[c]; if (a.options.useOnlyNativeEvents ||
                        d || !v) if (d || "function" != typeof b.addEventListener) if ("undefined" != typeof b.attachEvent) { var l = function (a) { e.call(b, a) }, f = "on" + c; b.attachEvent(f, l); a.a.F.oa(b, function () { b.detachEvent(f, l) }) } else throw Error("Browser doesn't support addEventListener or attachEvent"); else b.addEventListener(c, e, !1); else v(b).bind(c, e)
                    }, Da: function (b, c) {
                        if (!b || !b.nodeType) throw Error("element must be a DOM node when calling triggerEvent"); var d; "input" === a.a.A(b) && b.type && "click" == c.toLowerCase() ? (d = b.type, d = "checkbox" ==
                        d || "radio" == d) : d = !1; if (a.options.useOnlyNativeEvents || !v || d) if ("function" == typeof u.createEvent) if ("function" == typeof b.dispatchEvent) d = u.createEvent(l[c] || "HTMLEvents"), d.initEvent(c, !0, !0, x, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, b), b.dispatchEvent(d); else throw Error("The supplied element doesn't support dispatchEvent"); else if (d && b.click) b.click(); else if ("undefined" != typeof b.fireEvent) b.fireEvent("on" + c); else throw Error("Browser doesn't support triggering events"); else v(b).trigger(c)
                    }, c: function (b) {
                        return a.H(b) ?
                        b() : b
                    }, zb: function (b) { return a.H(b) ? b.t() : b }, bb: function (b, c, d) { var h; c && ("object" === typeof b.classList ? (h = b.classList[d ? "add" : "remove"], a.a.q(c.match(r), function (a) { h.call(b.classList, a) })) : "string" === typeof b.className.baseVal ? e(b.className, "baseVal", c, d) : e(b, "className", c, d)) }, Za: function (b, c) { var d = a.a.c(c); if (null === d || d === n) d = ""; var e = a.f.firstChild(b); !e || 3 != e.nodeType || a.f.nextSibling(e) ? a.f.da(b, [b.ownerDocument.createTextNode(d)]) : e.data = d; a.a.Rc(b) }, rc: function (a, b) {
                        a.name = b; if (7 >= h) try {
                            a.mergeAttributes(u.createElement("<input name='" +
                            a.name + "'/>"), !1)
                        } catch (c) { }
                    }, Rc: function (a) { 9 <= h && (a = 1 == a.nodeType ? a : a.parentNode, a.style && (a.style.zoom = a.style.zoom)) }, Nc: function (a) { if (h) { var b = a.style.width; a.style.width = 0; a.style.width = b } }, hd: function (b, c) { b = a.a.c(b); c = a.a.c(c); for (var d = [], e = b; e <= c; e++) d.push(e); return d }, V: function (a) { for (var b = [], c = 0, d = a.length; c < d; c++) b.push(a[c]); return b }, Yb: function (a) { return g ? Symbol(a) : a }, rd: 6 === h, sd: 7 === h, C: h, ec: function (b, c) {
                        for (var d = a.a.V(b.getElementsByTagName("input")).concat(a.a.V(b.getElementsByTagName("textarea"))),
                        e = "string" == typeof c ? function (a) { return a.name === c } : function (a) { return c.test(a.name) }, h = [], m = d.length - 1; 0 <= m; m--) e(d[m]) && h.push(d[m]); return h
                    }, ed: function (b) { return "string" == typeof b && (b = a.a.$a(b)) ? F && F.parse ? F.parse(b) : (new Function("return " + b))() : null }, Eb: function (b, c, d) {
                        if (!F || !F.stringify) throw Error("Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js");
                        return F.stringify(a.a.c(b), c, d)
                    }, fd: function (c, d, e) {
                        e = e || {}; var h = e.params || {}, m = e.includeFields || this.cc, l = c; if ("object" == typeof c && "form" === a.a.A(c)) for (var l = c.action, f = m.length - 1; 0 <= f; f--) for (var g = a.a.ec(c, m[f]), k = g.length - 1; 0 <= k; k--) h[g[k].name] = g[k].value; d = a.a.c(d); var r = u.createElement("form"); r.style.display = "none"; r.action = l; r.method = "post"; for (var n in d) c = u.createElement("input"), c.type = "hidden", c.name = n, c.value = a.a.Eb(a.a.c(d[n])), r.appendChild(c); b(h, function (a, b) {
                            var c = u.createElement("input");
                            c.type = "hidden"; c.name = a; c.value = b; r.appendChild(c)
                        }); u.body.appendChild(r); e.submitter ? e.submitter(r) : r.submit(); setTimeout(function () { r.parentNode.removeChild(r) }, 0)
                    }
                }
            }(); a.b("utils", a.a); a.b("utils.arrayForEach", a.a.q); a.b("utils.arrayFirst", a.a.Sb); a.b("utils.arrayFilter", a.a.Ka); a.b("utils.arrayGetDistinctValues", a.a.Tb); a.b("utils.arrayIndexOf", a.a.o); a.b("utils.arrayMap", a.a.fb); a.b("utils.arrayPushAll", a.a.ra); a.b("utils.arrayRemoveItem", a.a.La); a.b("utils.extend", a.a.extend); a.b("utils.fieldsIncludedWithJsonPost",
            a.a.cc); a.b("utils.getFormFields", a.a.ec); a.b("utils.peekObservable", a.a.zb); a.b("utils.postJson", a.a.fd); a.b("utils.parseJson", a.a.ed); a.b("utils.registerEventHandler", a.a.p); a.b("utils.stringifyJson", a.a.Eb); a.b("utils.range", a.a.hd); a.b("utils.toggleDomNodeCssClass", a.a.bb); a.b("utils.triggerEvent", a.a.Da); a.b("utils.unwrapObservable", a.a.c); a.b("utils.objectForEach", a.a.D); a.b("utils.addOrRemoveItem", a.a.pa); a.b("utils.setTextContent", a.a.Za); a.b("unwrap", a.a.c); Function.prototype.bind || (Function.prototype.bind =
            function (a) { var c = this; if (1 === arguments.length) return function () { return c.apply(a, arguments) }; var d = Array.prototype.slice.call(arguments, 1); return function () { var e = d.slice(0); e.push.apply(e, arguments); return c.apply(a, e) } }); a.a.e = new function () {
                function a(b, g) { var k = b[d]; if (!k || "null" === k || !e[k]) { if (!g) return n; k = b[d] = "ko" + c++; e[k] = {} } return e[k] } var c = 0, d = "__ko__" + (new Date).getTime(), e = {}; return {
                    get: function (c, d) { var e = a(c, !1); return e === n ? n : e[d] }, set: function (c, d, e) {
                        if (e !== n || a(c, !1) !== n) a(c, !0)[d] =
                        e
                    }, clear: function (a) { var b = a[d]; return b ? (delete e[b], a[d] = null, !0) : !1 }, I: function () { return c++ + d }
                }
            }; a.b("utils.domData", a.a.e); a.b("utils.domData.clear", a.a.e.clear); a.a.F = new function () {
                function b(b, c) { var e = a.a.e.get(b, d); e === n && c && (e = [], a.a.e.set(b, d, e)); return e } function c(d) { var e = b(d, !1); if (e) for (var e = e.slice(0), l = 0; l < e.length; l++) e[l](d); a.a.e.clear(d); a.a.F.cleanExternalData(d); if (f[d.nodeType]) for (e = d.firstChild; d = e;) e = d.nextSibling, 8 === d.nodeType && c(d) } var d = a.a.e.I(), e = { 1: !0, 8: !0, 9: !0 },
                f = { 1: !0, 9: !0 }; return { oa: function (a, c) { if ("function" != typeof c) throw Error("Callback must be a function"); b(a, !0).push(c) }, pc: function (c, e) { var l = b(c, !1); l && (a.a.La(l, e), 0 == l.length && a.a.e.set(c, d, n)) }, $: function (b) { if (e[b.nodeType] && (c(b), f[b.nodeType])) { var d = []; a.a.ra(d, b.getElementsByTagName("*")); for (var l = 0, m = d.length; l < m; l++) c(d[l]) } return b }, removeNode: function (b) { a.$(b); b.parentNode && b.parentNode.removeChild(b) }, cleanExternalData: function (a) { v && "function" == typeof v.cleanData && v.cleanData([a]) } }
            };
            a.$ = a.a.F.$; a.removeNode = a.a.F.removeNode; a.b("cleanNode", a.$); a.b("removeNode", a.removeNode); a.b("utils.domNodeDisposal", a.a.F); a.b("utils.domNodeDisposal.addDisposeCallback", a.a.F.oa); a.b("utils.domNodeDisposal.removeDisposeCallback", a.a.F.pc); (function () {
                var b = [0, "", ""], c = [1, "<table>", "</table>"], d = [3, "<table><tbody><tr>", "</tr></tbody></table>"], e = [1, "<select multiple='multiple'>", "</select>"], f = { thead: c, tbody: c, tfoot: c, tr: [2, "<table><tbody>", "</tbody></table>"], td: d, th: d, option: e, optgroup: e },
                g = 8 >= a.a.C; a.a.ma = function (c, d) {
                    var e; if (v) if (v.parseHTML) e = v.parseHTML(c, d) || []; else { if ((e = v.clean([c], d)) && e[0]) { for (var h = e[0]; h.parentNode && 11 !== h.parentNode.nodeType;) h = h.parentNode; h.parentNode && h.parentNode.removeChild(h) } } else {
                        (e = d) || (e = u); var h = e.parentWindow || e.defaultView || x, r = a.a.$a(c).toLowerCase(), q = e.createElement("div"), p; p = (r = r.match(/^<([a-z]+)[ >]/)) && f[r[1]] || b; r = p[0]; p = "ignored<div>" + p[1] + c + p[2] + "</div>"; "function" == typeof h.innerShiv ? q.appendChild(h.innerShiv(p)) : (g && e.appendChild(q),
                        q.innerHTML = p, g && q.parentNode.removeChild(q)); for (; r--;) q = q.lastChild; e = a.a.V(q.lastChild.childNodes)
                    } return e
                }; a.a.Cb = function (b, c) { a.a.ob(b); c = a.a.c(c); if (null !== c && c !== n) if ("string" != typeof c && (c = c.toString()), v) v(b).html(c); else for (var d = a.a.ma(c, b.ownerDocument), e = 0; e < d.length; e++) b.appendChild(d[e]) }
            })(); a.b("utils.parseHtmlFragment", a.a.ma); a.b("utils.setHtml", a.a.Cb); a.M = function () {
                function b(c, e) {
                    if (c) if (8 == c.nodeType) { var f = a.M.lc(c.nodeValue); null != f && e.push({ Lc: c, cd: f }) } else if (1 == c.nodeType) for (var f =
                    0, g = c.childNodes, k = g.length; f < k; f++) b(g[f], e)
                } var c = {}; return {
                    wb: function (a) { if ("function" != typeof a) throw Error("You can only pass a function to ko.memoization.memoize()"); var b = (4294967296 * (1 + Math.random()) | 0).toString(16).substring(1) + (4294967296 * (1 + Math.random()) | 0).toString(16).substring(1); c[b] = a; return "\x3c!--[ko_memo:" + b + "]--\x3e" }, xc: function (a, b) {
                        var f = c[a]; if (f === n) throw Error("Couldn't find any memo with ID " + a + ". Perhaps it's already been unmemoized."); try {
                            return f.apply(null, b || []),
                            !0
                        } finally { delete c[a] }
                    }, yc: function (c, e) { var f = []; b(c, f); for (var g = 0, k = f.length; g < k; g++) { var l = f[g].Lc, m = [l]; e && a.a.ra(m, e); a.M.xc(f[g].cd, m); l.nodeValue = ""; l.parentNode && l.parentNode.removeChild(l) } }, lc: function (a) { return (a = a.match(/^\[ko_memo\:(.*?)\]$/)) ? a[1] : null }
                }
            }(); a.b("memoization", a.M); a.b("memoization.memoize", a.M.wb); a.b("memoization.unmemoize", a.M.xc); a.b("memoization.parseMemoText", a.M.lc); a.b("memoization.unmemoizeDomNodeAndDescendants", a.M.yc); a.Y = function () {
                function b() {
                    if (e) for (var b =
                    e, c = 0, m; g < e;) if (m = d[g++]) { if (g > b) { if (5E3 <= ++c) { g = e; a.a.$b(Error("'Too much recursion' after processing " + c + " task groups.")); break } b = e } try { m() } catch (h) { a.a.$b(h) } }
                } function c() { b(); g = e = d.length = 0 } var d = [], e = 0, f = 1, g = 0; return {
                    scheduler: x.MutationObserver ? function (a) { var b = u.createElement("div"); (new MutationObserver(a)).observe(b, { attributes: !0 }); return function () { b.classList.toggle("foo") } }(c) : u && "onreadystatechange" in u.createElement("script") ? function (a) {
                        var b = u.createElement("script"); b.onreadystatechange =
                        function () { b.onreadystatechange = null; u.documentElement.removeChild(b); b = null; a() }; u.documentElement.appendChild(b)
                    } : function (a) { setTimeout(a, 0) }, Wa: function (b) { e || a.Y.scheduler(c); d[e++] = b; return f++ }, cancel: function (a) { a -= f - e; a >= g && a < e && (d[a] = null) }, resetForTesting: function () { var a = e - g; g = e = d.length = 0; return a }, md: b
                }
            }(); a.b("tasks", a.Y); a.b("tasks.schedule", a.Y.Wa); a.b("tasks.runEarly", a.Y.md); a.ya = {
                throttle: function (b, c) {
                    b.throttleEvaluation = c; var d = null; return a.B({
                        read: b, write: function (e) {
                            clearTimeout(d);
                            d = a.a.setTimeout(function () { b(e) }, c)
                        }
                    })
                }, rateLimit: function (a, c) { var d, e, f; "number" == typeof c ? d = c : (d = c.timeout, e = c.method); a.cb = !1; f = "notifyWhenChangesStop" == e ? V : U; a.Ta(function (a) { return f(a, d) }) }, deferred: function (b, c) { if (!0 !== c) throw Error("The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled."); b.cb || (b.cb = !0, b.Ta(function (c) { var e; return function () { a.Y.cancel(e); e = a.Y.Wa(c); b.notifySubscribers(n, "dirty") } })) }, notify: function (a, c) {
                    a.equalityComparer =
                    "always" == c ? null : J
                }
            }; var T = { undefined: 1, "boolean": 1, number: 1, string: 1 }; a.b("extenders", a.ya); a.vc = function (b, c, d) { this.ia = b; this.gb = c; this.Kc = d; this.R = !1; a.G(this, "dispose", this.k) }; a.vc.prototype.k = function () { this.R = !0; this.Kc() }; a.J = function () { a.a.Ya(this, D); D.rb(this) }; var I = "change", D = {
                rb: function (a) { a.K = {}; a.Nb = 1 }, X: function (b, c, d) { var e = this; d = d || I; var f = new a.vc(e, c ? b.bind(c) : b, function () { a.a.La(e.K[d], f); e.Ia && e.Ia(d) }); e.sa && e.sa(d); e.K[d] || (e.K[d] = []); e.K[d].push(f); return f }, notifySubscribers: function (b,
                c) { c = c || I; c === I && this.zc(); if (this.Pa(c)) try { a.l.Ub(); for (var d = this.K[c].slice(0), e = 0, f; f = d[e]; ++e) f.R || f.gb(b) } finally { a.l.end() } }, Na: function () { return this.Nb }, Uc: function (a) { return this.Na() !== a }, zc: function () { ++this.Nb }, Ta: function (b) { var c = this, d = a.H(c), e, f, g; c.Ha || (c.Ha = c.notifySubscribers, c.notifySubscribers = W); var k = b(function () { c.Mb = !1; d && g === c && (g = c()); e = !1; c.tb(f, g) && c.Ha(f = g) }); c.Lb = function (a) { c.Mb = e = !0; g = a; k() }; c.Kb = function (a) { e || (f = a, c.Ha(a, "beforeChange")) } }, Pa: function (a) {
                    return this.K[a] &&
                    this.K[a].length
                }, Sc: function (b) { if (b) return this.K[b] && this.K[b].length || 0; var c = 0; a.a.D(this.K, function (a, b) { "dirty" !== a && (c += b.length) }); return c }, tb: function (a, c) { return !this.equalityComparer || !this.equalityComparer(a, c) }, extend: function (b) { var c = this; b && a.a.D(b, function (b, e) { var f = a.ya[b]; "function" == typeof f && (c = f(c, e) || c) }); return c }
            }; a.G(D, "subscribe", D.X); a.G(D, "extend", D.extend); a.G(D, "getSubscriptionsCount", D.Sc); a.a.ka && a.a.Xa(D, Function.prototype); a.J.fn = D; a.hc = function (a) {
                return null !=
                a && "function" == typeof a.X && "function" == typeof a.notifySubscribers
            }; a.b("subscribable", a.J); a.b("isSubscribable", a.hc); a.va = a.l = function () { function b(a) { d.push(e); e = a } function c() { e = d.pop() } var d = [], e, f = 0; return { Ub: b, end: c, oc: function (b) { if (e) { if (!a.hc(b)) throw Error("Only subscribable things can act as dependencies"); e.gb.call(e.Gc, b, b.Cc || (b.Cc = ++f)) } }, w: function (a, d, e) { try { return b(), a.apply(d, e || []) } finally { c() } }, Aa: function () { if (e) return e.m.Aa() }, Sa: function () { if (e) return e.Sa } } }(); a.b("computedContext",
            a.va); a.b("computedContext.getDependenciesCount", a.va.Aa); a.b("computedContext.isInitial", a.va.Sa); a.b("ignoreDependencies", a.qd = a.l.w); var E = a.a.Yb("_latestValue"); a.N = function (b) { function c() { if (0 < arguments.length) return c.tb(c[E], arguments[0]) && (c.ga(), c[E] = arguments[0], c.fa()), this; a.l.oc(c); return c[E] } c[E] = b; a.a.ka || a.a.extend(c, a.J.fn); a.J.fn.rb(c); a.a.Ya(c, B); a.options.deferUpdates && a.ya.deferred(c, !0); return c }; var B = {
                equalityComparer: J, t: function () { return this[E] }, fa: function () { this.notifySubscribers(this[E]) },
                ga: function () { this.notifySubscribers(this[E], "beforeChange") }
            }; a.a.ka && a.a.Xa(B, a.J.fn); var H = a.N.gd = "__ko_proto__"; B[H] = a.N; a.Oa = function (b, c) { return null === b || b === n || b[H] === n ? !1 : b[H] === c ? !0 : a.Oa(b[H], c) }; a.H = function (b) { return a.Oa(b, a.N) }; a.Ba = function (b) { return "function" == typeof b && b[H] === a.N || "function" == typeof b && b[H] === a.B && b.Vc ? !0 : !1 }; a.b("observable", a.N); a.b("isObservable", a.H); a.b("isWriteableObservable", a.Ba); a.b("isWritableObservable", a.Ba); a.b("observable.fn", B); a.G(B, "peek", B.t); a.G(B,
            "valueHasMutated", B.fa); a.G(B, "valueWillMutate", B.ga); a.la = function (b) { b = b || []; if ("object" != typeof b || !("length" in b)) throw Error("The argument passed when initializing an observable array must be an array, or null, or undefined."); b = a.N(b); a.a.Ya(b, a.la.fn); return b.extend({ trackArrayChanges: !0 }) }; a.la.fn = {
                remove: function (b) {
                    for (var c = this.t(), d = [], e = "function" != typeof b || a.H(b) ? function (a) { return a === b } : b, f = 0; f < c.length; f++) { var g = c[f]; e(g) && (0 === d.length && this.ga(), d.push(g), c.splice(f, 1), f--) } d.length &&
                    this.fa(); return d
                }, removeAll: function (b) { if (b === n) { var c = this.t(), d = c.slice(0); this.ga(); c.splice(0, c.length); this.fa(); return d } return b ? this.remove(function (c) { return 0 <= a.a.o(b, c) }) : [] }, destroy: function (b) { var c = this.t(), d = "function" != typeof b || a.H(b) ? function (a) { return a === b } : b; this.ga(); for (var e = c.length - 1; 0 <= e; e--) d(c[e]) && (c[e]._destroy = !0); this.fa() }, destroyAll: function (b) { return b === n ? this.destroy(function () { return !0 }) : b ? this.destroy(function (c) { return 0 <= a.a.o(b, c) }) : [] }, indexOf: function (b) {
                    var c =
                    this(); return a.a.o(c, b)
                }, replace: function (a, c) { var d = this.indexOf(a); 0 <= d && (this.ga(), this.t()[d] = c, this.fa()) }
            }; a.a.ka && a.a.Xa(a.la.fn, a.N.fn); a.a.q("pop push reverse shift sort splice unshift".split(" "), function (b) { a.la.fn[b] = function () { var a = this.t(); this.ga(); this.Vb(a, b, arguments); var d = a[b].apply(a, arguments); this.fa(); return d === a ? this : d } }); a.a.q(["slice"], function (b) { a.la.fn[b] = function () { var a = this(); return a[b].apply(a, arguments) } }); a.b("observableArray", a.la); a.ya.trackArrayChanges = function (b,
            c) {
                function d() { if (!e) { e = !0; var c = b.notifySubscribers; b.notifySubscribers = function (a, b) { b && b !== I || ++k; return c.apply(this, arguments) }; var d = [].concat(b.t() || []); f = null; g = b.X(function (c) { c = [].concat(c || []); if (b.Pa("arrayChange")) { var e; if (!f || 1 < k) f = a.a.ib(d, c, b.hb); e = f } d = c; f = null; k = 0; e && e.length && b.notifySubscribers(e, "arrayChange") }) } } b.hb = {}; c && "object" == typeof c && a.a.extend(b.hb, c); b.hb.sparse = !0; if (!b.Vb) {
                    var e = !1, f = null, g, k = 0, l = b.sa, m = b.Ia; b.sa = function (a) { l && l.call(b, a); "arrayChange" === a && d() };
                    b.Ia = function (a) { m && m.call(b, a); "arrayChange" !== a || b.Pa("arrayChange") || (g.k(), e = !1) }; b.Vb = function (b, c, d) {
                        function m(a, b, c) { return l[l.length] = { status: a, value: b, index: c } } if (e && !k) {
                            var l = [], g = b.length, t = d.length, G = 0; switch (c) {
                                case "push": G = g; case "unshift": for (c = 0; c < t; c++) m("added", d[c], G + c); break; case "pop": G = g - 1; case "shift": g && m("deleted", b[G], G); break; case "splice": c = Math.min(Math.max(0, 0 > d[0] ? g + d[0] : d[0]), g); for (var g = 1 === t ? g : Math.min(c + (d[1] || 0), g), t = c + t - 2, G = Math.max(g, t), P = [], n = [], Q = 2; c < G; ++c,
                                ++Q) c < g && n.push(m("deleted", b[c], c)), c < t && P.push(m("added", d[Q], c)); a.a.dc(n, P); break; default: return
                            } f = l
                        }
                    }
                }
            }; var s = a.a.Yb("_state"); a.m = a.B = function (b, c, d) {
                function e() { if (0 < arguments.length) { if ("function" === typeof f) f.apply(g.pb, arguments); else throw Error("Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters."); return this } a.l.oc(e); (g.S || g.s && e.Qa()) && e.aa(); return g.T } "object" === typeof b ? d = b : (d = d || {}, b && (d.read =
                b)); if ("function" != typeof d.read) throw Error("Pass a function that returns the value of the ko.computed"); var f = d.write, g = { T: n, S: !0, Ra: !1, Fb: !1, R: !1, Va: !1, s: !1, jd: d.read, pb: c || d.owner, i: d.disposeWhenNodeIsRemoved || d.i || null, wa: d.disposeWhen || d.wa, mb: null, r: {}, L: 0, bc: null }; e[s] = g; e.Vc = "function" === typeof f; a.a.ka || a.a.extend(e, a.J.fn); a.J.fn.rb(e); a.a.Ya(e, z); d.pure ? (g.Va = !0, g.s = !0, a.a.extend(e, $)) : d.deferEvaluation && a.a.extend(e, aa); a.options.deferUpdates && a.ya.deferred(e, !0); g.i && (g.Fb = !0, g.i.nodeType ||
                (g.i = null)); g.s || d.deferEvaluation || e.aa(); g.i && e.ba() && a.a.F.oa(g.i, g.mb = function () { e.k() }); return e
            }; var z = {
                equalityComparer: J, Aa: function () { return this[s].L }, Pb: function (a, c, d) { if (this[s].Va && c === this) throw Error("A 'pure' computed must not be called recursively"); this[s].r[a] = d; d.Ga = this[s].L++; d.na = c.Na() }, Qa: function () { var a, c, d = this[s].r; for (a in d) if (d.hasOwnProperty(a) && (c = d[a], c.ia.Uc(c.na))) return !0 }, bd: function () { this.Fa && !this[s].Ra && this.Fa() }, ba: function () { return this[s].S || 0 < this[s].L },
                ld: function () { this.Mb || this.ac() }, uc: function (a) { if (a.cb && !this[s].i) { var c = a.X(this.bd, this, "dirty"), d = a.X(this.ld, this); return { ia: a, k: function () { c.k(); d.k() } } } return a.X(this.ac, this) }, ac: function () { var b = this, c = b.throttleEvaluation; c && 0 <= c ? (clearTimeout(this[s].bc), this[s].bc = a.a.setTimeout(function () { b.aa(!0) }, c)) : b.Fa ? b.Fa() : b.aa(!0) }, aa: function (b) {
                    var c = this[s], d = c.wa; if (!c.Ra && !c.R) {
                        if (c.i && !a.a.nb(c.i) || d && d()) { if (!c.Fb) { this.k(); return } } else c.Fb = !1; c.Ra = !0; try { this.Qc(b) } finally { c.Ra = !1 } c.L ||
                        this.k()
                    }
                }, Qc: function (b) { var c = this[s], d = c.Va ? n : !c.L, e = { Hc: this, Ma: c.r, lb: c.L }; a.l.Ub({ Gc: e, gb: Y, m: this, Sa: d }); c.r = {}; c.L = 0; e = this.Pc(c, e); this.tb(c.T, e) && (c.s || this.notifySubscribers(c.T, "beforeChange"), c.T = e, c.s ? this.zc() : b && this.notifySubscribers(c.T)); d && this.notifySubscribers(c.T, "awake") }, Pc: function (b, c) { try { var d = b.jd; return b.pb ? d.call(b.pb) : d() } finally { a.l.end(), c.lb && !b.s && a.a.D(c.Ma, X), b.S = !1 } }, t: function () { var a = this[s]; (a.S && !a.L || a.s && this.Qa()) && this.aa(); return a.T }, Ta: function (b) {
                    a.J.fn.Ta.call(this,
                    b); this.Fa = function () { this.Kb(this[s].T); this[s].S = !0; this.Lb(this) }
                }, k: function () { var b = this[s]; !b.s && b.r && a.a.D(b.r, function (a, b) { b.k && b.k() }); b.i && b.mb && a.a.F.pc(b.i, b.mb); b.r = null; b.L = 0; b.R = !0; b.S = !1; b.s = !1; b.i = null }
            }, $ = {
                sa: function (b) { var c = this, d = c[s]; if (!d.R && d.s && "change" == b) { d.s = !1; if (d.S || c.Qa()) d.r = null, d.L = 0, d.S = !0, c.aa(); else { var e = []; a.a.D(d.r, function (a, b) { e[b.Ga] = a }); a.a.q(e, function (a, b) { var e = d.r[a], l = c.uc(e.ia); l.Ga = b; l.na = e.na; d.r[a] = l }) } d.R || c.notifySubscribers(d.T, "awake") } },
                Ia: function (b) { var c = this[s]; c.R || "change" != b || this.Pa("change") || (a.a.D(c.r, function (a, b) { b.k && (c.r[a] = { ia: b.ia, Ga: b.Ga, na: b.na }, b.k()) }), c.s = !0, this.notifySubscribers(n, "asleep")) }, Na: function () { var b = this[s]; b.s && (b.S || this.Qa()) && this.aa(); return a.J.fn.Na.call(this) }
            }, aa = { sa: function (a) { "change" != a && "beforeChange" != a || this.t() } }; a.a.ka && a.a.Xa(z, a.J.fn); var R = a.N.gd; a.m[R] = a.N; z[R] = a.m; a.Xc = function (b) { return a.Oa(b, a.m) }; a.Yc = function (b) { return a.Oa(b, a.m) && b[s] && b[s].Va }; a.b("computed", a.m);
            a.b("dependentObservable", a.m); a.b("isComputed", a.Xc); a.b("isPureComputed", a.Yc); a.b("computed.fn", z); a.G(z, "peek", z.t); a.G(z, "dispose", z.k); a.G(z, "isActive", z.ba); a.G(z, "getDependenciesCount", z.Aa); a.nc = function (b, c) { if ("function" === typeof b) return a.m(b, c, { pure: !0 }); b = a.a.extend({}, b); b.pure = !0; return a.m(b, c) }; a.b("pureComputed", a.nc); (function () {
                function b(a, f, g) {
                    g = g || new d; a = f(a); if ("object" != typeof a || null === a || a === n || a instanceof RegExp || a instanceof Date || a instanceof String || a instanceof
                    Number || a instanceof Boolean) return a; var k = a instanceof Array ? [] : {}; g.save(a, k); c(a, function (c) { var d = f(a[c]); switch (typeof d) { case "boolean": case "number": case "string": case "function": k[c] = d; break; case "object": case "undefined": var h = g.get(d); k[c] = h !== n ? h : b(d, f, g) } }); return k
                } function c(a, b) { if (a instanceof Array) { for (var c = 0; c < a.length; c++) b(c); "function" == typeof a.toJSON && b("toJSON") } else for (c in a) b(c) } function d() { this.keys = []; this.Ib = [] } a.wc = function (c) {
                    if (0 == arguments.length) throw Error("When calling ko.toJS, pass the object you want to convert.");
                    return b(c, function (b) { for (var c = 0; a.H(b) && 10 > c; c++) b = b(); return b })
                }; a.toJSON = function (b, c, d) { b = a.wc(b); return a.a.Eb(b, c, d) }; d.prototype = { save: function (b, c) { var d = a.a.o(this.keys, b); 0 <= d ? this.Ib[d] = c : (this.keys.push(b), this.Ib.push(c)) }, get: function (b) { b = a.a.o(this.keys, b); return 0 <= b ? this.Ib[b] : n } }
            })(); a.b("toJS", a.wc); a.b("toJSON", a.toJSON); (function () {
                a.j = {
                    u: function (b) {
                        switch (a.a.A(b)) {
                            case "option": return !0 === b.__ko__hasDomDataOptionValue__ ? a.a.e.get(b, a.d.options.xb) : 7 >= a.a.C ? b.getAttributeNode("value") &&
                            b.getAttributeNode("value").specified ? b.value : b.text : b.value; case "select": return 0 <= b.selectedIndex ? a.j.u(b.options[b.selectedIndex]) : n; default: return b.value
                        }
                    }, ha: function (b, c, d) {
                        switch (a.a.A(b)) {
                            case "option": switch (typeof c) { case "string": a.a.e.set(b, a.d.options.xb, n); "__ko__hasDomDataOptionValue__" in b && delete b.__ko__hasDomDataOptionValue__; b.value = c; break; default: a.a.e.set(b, a.d.options.xb, c), b.__ko__hasDomDataOptionValue__ = !0, b.value = "number" === typeof c ? c : "" } break; case "select": if ("" === c ||
                            null === c) c = n; for (var e = -1, f = 0, g = b.options.length, k; f < g; ++f) if (k = a.j.u(b.options[f]), k == c || "" == k && c === n) { e = f; break } if (d || 0 <= e || c === n && 1 < b.size) b.selectedIndex = e; break; default: if (null === c || c === n) c = ""; b.value = c
                        }
                    }
                }
            })(); a.b("selectExtensions", a.j); a.b("selectExtensions.readValue", a.j.u); a.b("selectExtensions.writeValue", a.j.ha); a.h = function () {
                function b(b) {
                    b = a.a.$a(b); 123 === b.charCodeAt(0) && (b = b.slice(1, -1)); var c = [], d = b.match(e), r, k = [], p = 0; if (d) {
                        d.push(","); for (var A = 0, y; y = d[A]; ++A) {
                            var t = y.charCodeAt(0);
                            if (44 === t) { if (0 >= p) { c.push(r && k.length ? { key: r, value: k.join("") } : { unknown: r || k.join("") }); r = p = 0; k = []; continue } } else if (58 === t) { if (!p && !r && 1 === k.length) { r = k.pop(); continue } } else 47 === t && A && 1 < y.length ? (t = d[A - 1].match(f)) && !g[t[0]] && (b = b.substr(b.indexOf(y) + 1), d = b.match(e), d.push(","), A = -1, y = "/") : 40 === t || 123 === t || 91 === t ? ++p : 41 === t || 125 === t || 93 === t ? --p : r || k.length || 34 !== t && 39 !== t || (y = y.slice(1, -1)); k.push(y)
                        }
                    } return c
                } var c = ["true", "false", "null", "undefined"], d = /^(?:[$_a-z][$\w]*|(.+)(\.\s*[$_a-z][$\w]*|\[.+\]))$/i,
                e = RegExp("\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|/(?:[^/\\\\]|\\\\.)*/w*|[^\\s:,/][^,\"'{}()/:[\\]]*[^\\s,\"'{}()/:[\\]]|[^\\s]", "g"), f = /[\])"'A-Za-z0-9_$]+$/, g = { "in": 1, "return": 1, "typeof": 1 }, k = {}; return {
                    ta: [], ea: k, yb: b, Ua: function (e, m) {
                        function h(b, e) {
                            var m; if (!A) { var l = a.getBindingHandler(b); if (l && l.preprocess && !(e = l.preprocess(e, b, h))) return; if (l = k[b]) m = e, 0 <= a.a.o(c, m) ? m = !1 : (l = m.match(d), m = null === l ? !1 : l[1] ? "Object(" + l[1] + ")" + l[2] : m), l = m; l && g.push("'" + b + "':function(_z){" + m + "=_z}") } p && (e =
                            "function(){return " + e + " }"); f.push("'" + b + "':" + e)
                        } m = m || {}; var f = [], g = [], p = m.valueAccessors, A = m.bindingParams, y = "string" === typeof e ? b(e) : e; a.a.q(y, function (a) { h(a.key || a.unknown, a.value) }); g.length && h("_ko_property_writers", "{" + g.join(",") + " }"); return f.join(",")
                    }, ad: function (a, b) { for (var c = 0; c < a.length; c++) if (a[c].key == b) return !0; return !1 }, Ea: function (b, c, d, e, f) { if (b && a.H(b)) !a.Ba(b) || f && b.t() === e || b(e); else if ((b = c.get("_ko_property_writers")) && b[d]) b[d](e) }
                }
            }(); a.b("expressionRewriting", a.h); a.b("expressionRewriting.bindingRewriteValidators",
            a.h.ta); a.b("expressionRewriting.parseObjectLiteral", a.h.yb); a.b("expressionRewriting.preProcessBindings", a.h.Ua); a.b("expressionRewriting._twoWayBindings", a.h.ea); a.b("jsonExpressionRewriting", a.h); a.b("jsonExpressionRewriting.insertPropertyAccessorsIntoJson", a.h.Ua); (function () {
                function b(a) { return 8 == a.nodeType && g.test(f ? a.text : a.nodeValue) } function c(a) { return 8 == a.nodeType && k.test(f ? a.text : a.nodeValue) } function d(a, d) {
                    for (var e = a, f = 1, l = []; e = e.nextSibling;) {
                        if (c(e) && (f--, 0 === f)) return l; l.push(e);
                        b(e) && f++
                    } if (!d) throw Error("Cannot find closing comment tag to match: " + a.nodeValue); return null
                } function e(a, b) { var c = d(a, b); return c ? 0 < c.length ? c[c.length - 1].nextSibling : a.nextSibling : null } var f = u && "\x3c!--test--\x3e" === u.createComment("test").text, g = f ? /^\x3c!--\s*ko(?:\s+([\s\S]+))?\s*--\x3e$/ : /^\s*ko(?:\s+([\s\S]+))?\s*$/, k = f ? /^\x3c!--\s*\/ko\s*--\x3e$/ : /^\s*\/ko\s*$/, l = { ul: !0, ol: !0 }; a.f = {
                    Z: {}, childNodes: function (a) { return b(a) ? d(a) : a.childNodes }, xa: function (c) {
                        if (b(c)) {
                            c = a.f.childNodes(c); for (var d =
                            0, e = c.length; d < e; d++) a.removeNode(c[d])
                        } else a.a.ob(c)
                    }, da: function (c, d) { if (b(c)) { a.f.xa(c); for (var e = c.nextSibling, f = 0, l = d.length; f < l; f++) e.parentNode.insertBefore(d[f], e) } else a.a.da(c, d) }, mc: function (a, c) { b(a) ? a.parentNode.insertBefore(c, a.nextSibling) : a.firstChild ? a.insertBefore(c, a.firstChild) : a.appendChild(c) }, gc: function (c, d, e) { e ? b(c) ? c.parentNode.insertBefore(d, e.nextSibling) : e.nextSibling ? c.insertBefore(d, e.nextSibling) : c.appendChild(d) : a.f.mc(c, d) }, firstChild: function (a) {
                        return b(a) ? !a.nextSibling ||
                        c(a.nextSibling) ? null : a.nextSibling : a.firstChild
                    }, nextSibling: function (a) { b(a) && (a = e(a)); return a.nextSibling && c(a.nextSibling) ? null : a.nextSibling }, Tc: b, pd: function (a) { return (a = (f ? a.text : a.nodeValue).match(g)) ? a[1] : null }, kc: function (d) {
                        if (l[a.a.A(d)]) {
                            var h = d.firstChild; if (h) {
                                do if (1 === h.nodeType) {
                                    var f; f = h.firstChild; var g = null; if (f) { do if (g) g.push(f); else if (b(f)) { var k = e(f, !0); k ? f = k : g = [f] } else c(f) && (g = [f]); while (f = f.nextSibling) } if (f = g) for (g = h.nextSibling, k = 0; k < f.length; k++) g ? d.insertBefore(f[k],
                                    g) : d.appendChild(f[k])
                                } while (h = h.nextSibling)
                            }
                        }
                    }
                }
            })(); a.b("virtualElements", a.f); a.b("virtualElements.allowedBindings", a.f.Z); a.b("virtualElements.emptyNode", a.f.xa); a.b("virtualElements.insertAfter", a.f.gc); a.b("virtualElements.prepend", a.f.mc); a.b("virtualElements.setDomNodeChildren", a.f.da); (function () {
                a.Q = function () { this.Fc = {} }; a.a.extend(a.Q.prototype, {
                    nodeHasBindings: function (b) {
                        switch (b.nodeType) {
                            case 1: return null != b.getAttribute("data-bind") || a.g.getComponentNameForNode(b); case 8: return a.f.Tc(b);
                            default: return !1
                        }
                    }, getBindings: function (b, c) { var d = this.getBindingsString(b, c), d = d ? this.parseBindingsString(d, c, b) : null; return a.g.Ob(d, b, c, !1) }, getBindingAccessors: function (b, c) { var d = this.getBindingsString(b, c), d = d ? this.parseBindingsString(d, c, b, { valueAccessors: !0 }) : null; return a.g.Ob(d, b, c, !0) }, getBindingsString: function (b) { switch (b.nodeType) { case 1: return b.getAttribute("data-bind"); case 8: return a.f.pd(b); default: return null } }, parseBindingsString: function (b, c, d, e) {
                        try {
                            var f = this.Fc, g = b + (e && e.valueAccessors ||
                            ""), k; if (!(k = f[g])) { var l, m = "with($context){with($data||{}){return{" + a.h.Ua(b, e) + "}}}"; l = new Function("$context", "$element", m); k = f[g] = l } return k(c, d)
                        } catch (h) { throw h.message = "Unable to parse bindings.\nBindings value: " + b + "\nMessage: " + h.message, h; }
                    }
                }); a.Q.instance = new a.Q
            })(); a.b("bindingProvider", a.Q); (function () {
                function b(a) { return function () { return a } } function c(a) { return a() } function d(b) { return a.a.Ca(a.l.w(b), function (a, c) { return function () { return b()[c] } }) } function e(c, e, h) {
                    return "function" ===
                    typeof c ? d(c.bind(null, e, h)) : a.a.Ca(c, b)
                } function f(a, b) { return d(this.getBindings.bind(this, a, b)) } function g(b, c, d) { var e, h = a.f.firstChild(c), f = a.Q.instance, m = f.preprocessNode; if (m) { for (; e = h;) h = a.f.nextSibling(e), m.call(f, e); h = a.f.firstChild(c) } for (; e = h;) h = a.f.nextSibling(e), k(b, e, d) } function k(b, c, d) { var e = !0, h = 1 === c.nodeType; h && a.f.kc(c); if (h && d || a.Q.instance.nodeHasBindings(c)) e = m(c, null, b, d).shouldBindDescendants; e && !r[a.a.A(c)] && g(b, c, !h) } function l(b) {
                    var c = [], d = {}, e = []; a.a.D(b, function Z(h) {
                        if (!d[h]) {
                            var f =
                            a.getBindingHandler(h); f && (f.after && (e.push(h), a.a.q(f.after, function (c) { if (b[c]) { if (-1 !== a.a.o(e, c)) throw Error("Cannot combine the following bindings, because they have a cyclic dependency: " + e.join(", ")); Z(c) } }), e.length--), c.push({ key: h, fc: f })); d[h] = !0
                        }
                    }); return c
                } function m(b, d, e, h) {
                    var m = a.a.e.get(b, q); if (!d) { if (m) throw Error("You cannot apply bindings multiple times to the same element."); a.a.e.set(b, q, !0) } !m && h && a.tc(b, e); var g; if (d && "function" !== typeof d) g = d; else {
                        var k = a.Q.instance, r = k.getBindingAccessors ||
                        f, p = a.B(function () { (g = d ? d(e, b) : r.call(k, b, e)) && e.P && e.P(); return g }, null, { i: b }); g && p.ba() || (p = null)
                    } var u; if (g) {
                        var v = p ? function (a) { return function () { return c(p()[a]) } } : function (a) { return g[a] }, s = function () { return a.a.Ca(p ? p() : g, c) }; s.get = function (a) { return g[a] && c(v(a)) }; s.has = function (a) { return a in g }; h = l(g); a.a.q(h, function (c) {
                            var d = c.fc.init, h = c.fc.update, f = c.key; if (8 === b.nodeType && !a.f.Z[f]) throw Error("The binding '" + f + "' cannot be used with virtual elements"); try {
                                "function" == typeof d && a.l.w(function () {
                                    var a =
                                    d(b, v(f), s, e.$data, e); if (a && a.controlsDescendantBindings) { if (u !== n) throw Error("Multiple bindings (" + u + " and " + f + ") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element."); u = f }
                                }), "function" == typeof h && a.B(function () { h(b, v(f), s, e.$data, e) }, null, { i: b })
                            } catch (m) { throw m.message = 'Unable to process binding "' + f + ": " + g[f] + '"\nMessage: ' + m.message, m; }
                        })
                    } return { shouldBindDescendants: u === n }
                } function h(b) { return b && b instanceof a.U ? b : new a.U(b) }
                a.d = {}; var r = { script: !0, textarea: !0, template: !0 }; a.getBindingHandler = function (b) { return a.d[b] }; a.U = function (b, c, d, e) {
                    var h = this, f = "function" == typeof b && !a.H(b), m, g = a.B(function () { var m = f ? b() : b, l = a.a.c(m); c ? (c.P && c.P(), a.a.extend(h, c), g && (h.P = g)) : (h.$parents = [], h.$root = l, h.ko = a); h.$rawData = m; h.$data = l; d && (h[d] = l); e && e(h, c, l); return h.$data }, null, { wa: function () { return m && !a.a.Qb(m) }, i: !0 }); g.ba() && (h.P = g, g.equalityComparer = null, m = [], g.Ac = function (b) {
                        m.push(b); a.a.F.oa(b, function (b) {
                            a.a.La(m, b); m.length ||
                            (g.k(), h.P = g = n)
                        })
                    })
                }; a.U.prototype.createChildContext = function (b, c, d) { return new a.U(b, this, c, function (a, b) { a.$parentContext = b; a.$parent = b.$data; a.$parents = (b.$parents || []).slice(0); a.$parents.unshift(a.$parent); d && d(a) }) }; a.U.prototype.extend = function (b) { return new a.U(this.P || this.$data, this, null, function (c, d) { c.$rawData = d.$rawData; a.a.extend(c, "function" == typeof b ? b() : b) }) }; var q = a.a.e.I(), p = a.a.e.I(); a.tc = function (b, c) {
                    if (2 == arguments.length) a.a.e.set(b, p, c), c.P && c.P.Ac(b); else return a.a.e.get(b,
                    p)
                }; a.Ja = function (b, c, d) { 1 === b.nodeType && a.f.kc(b); return m(b, c, h(d), !0) }; a.Dc = function (b, c, d) { d = h(d); return a.Ja(b, e(c, d, b), d) }; a.eb = function (a, b) { 1 !== b.nodeType && 8 !== b.nodeType || g(h(a), b, !0) }; a.Rb = function (a, b) { !v && x.jQuery && (v = x.jQuery); if (b && 1 !== b.nodeType && 8 !== b.nodeType) throw Error("ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node"); b = b || x.document.body; k(h(a), b, !0) }; a.kb = function (b) {
                    switch (b.nodeType) {
                        case 1: case 8: var c = a.tc(b); if (c) return c;
                            if (b.parentNode) return a.kb(b.parentNode)
                    } return n
                }; a.Jc = function (b) { return (b = a.kb(b)) ? b.$data : n }; a.b("bindingHandlers", a.d); a.b("applyBindings", a.Rb); a.b("applyBindingsToDescendants", a.eb); a.b("applyBindingAccessorsToNode", a.Ja); a.b("applyBindingsToNode", a.Dc); a.b("contextFor", a.kb); a.b("dataFor", a.Jc)
            })(); (function (b) {
                function c(c, e) {
                    var m = f.hasOwnProperty(c) ? f[c] : b, h; m ? m.X(e) : (m = f[c] = new a.J, m.X(e), d(c, function (b, d) {
                        var e = !(!d || !d.synchronous); g[c] = { definition: b, Zc: e }; delete f[c]; h || e ? m.notifySubscribers(b) :
                        a.Y.Wa(function () { m.notifySubscribers(b) })
                    }), h = !0)
                } function d(a, b) { e("getConfig", [a], function (c) { c ? e("loadComponent", [a, c], function (a) { b(a, c) }) : b(null, null) }) } function e(c, d, f, h) { h || (h = a.g.loaders.slice(0)); var g = h.shift(); if (g) { var q = g[c]; if (q) { var p = !1; if (q.apply(g, d.concat(function (a) { p ? f(null) : null !== a ? f(a) : e(c, d, f, h) })) !== b && (p = !0, !g.suppressLoaderExceptions)) throw Error("Component loaders must supply values by invoking the callback, not by returning values synchronously."); } else e(c, d, f, h) } else f(null) }
                var f = {}, g = {}; a.g = { get: function (d, e) { var f = g.hasOwnProperty(d) ? g[d] : b; f ? f.Zc ? a.l.w(function () { e(f.definition) }) : a.Y.Wa(function () { e(f.definition) }) : c(d, e) }, Xb: function (a) { delete g[a] }, Jb: e }; a.g.loaders = []; a.b("components", a.g); a.b("components.get", a.g.get); a.b("components.clearCachedDefinition", a.g.Xb)
            })(); (function () {
                function b(b, c, d, e) {
                    function g() { 0 === --y && e(k) } var k = {}, y = 2, t = d.template; d = d.viewModel; t ? f(c, t, function (c) { a.g.Jb("loadTemplate", [b, c], function (a) { k.template = a; g() }) }) : g(); d ? f(c, d, function (c) {
                        a.g.Jb("loadViewModel",
                        [b, c], function (a) { k[l] = a; g() })
                    }) : g()
                } function c(a, b, d) { if ("function" === typeof b) d(function (a) { return new b(a) }); else if ("function" === typeof b[l]) d(b[l]); else if ("instance" in b) { var e = b.instance; d(function () { return e }) } else "viewModel" in b ? c(a, b.viewModel, d) : a("Unknown viewModel value: " + b) } function d(b) { switch (a.a.A(b)) { case "script": return a.a.ma(b.text); case "textarea": return a.a.ma(b.value); case "template": if (e(b.content)) return a.a.ua(b.content.childNodes) } return a.a.ua(b.childNodes) } function e(a) {
                    return x.DocumentFragment ?
                    a instanceof DocumentFragment : a && 11 === a.nodeType
                } function f(a, b, c) { "string" === typeof b.require ? O || x.require ? (O || x.require)([b.require], c) : a("Uses require, but no AMD loader is present") : c(b) } function g(a) { return function (b) { throw Error("Component '" + a + "': " + b); } } var k = {}; a.g.register = function (b, c) { if (!c) throw Error("Invalid configuration for " + b); if (a.g.ub(b)) throw Error("Component " + b + " is already registered"); k[b] = c }; a.g.ub = function (a) { return k.hasOwnProperty(a) }; a.g.od = function (b) {
                    delete k[b];
                    a.g.Xb(b)
                }; a.g.Zb = {
                    getConfig: function (a, b) { b(k.hasOwnProperty(a) ? k[a] : null) }, loadComponent: function (a, c, d) { var e = g(a); f(e, c, function (c) { b(a, e, c, d) }) }, loadTemplate: function (b, c, f) {
                        b = g(b); if ("string" === typeof c) f(a.a.ma(c)); else if (c instanceof Array) f(c); else if (e(c)) f(a.a.V(c.childNodes)); else if (c.element) if (c = c.element, x.HTMLElement ? c instanceof HTMLElement : c && c.tagName && 1 === c.nodeType) f(d(c)); else if ("string" === typeof c) { var l = u.getElementById(c); l ? f(d(l)) : b("Cannot find element with ID " + c) } else b("Unknown element type: " +
                        c); else b("Unknown template value: " + c)
                    }, loadViewModel: function (a, b, d) { c(g(a), b, d) }
                }; var l = "createViewModel"; a.b("components.register", a.g.register); a.b("components.isRegistered", a.g.ub); a.b("components.unregister", a.g.od); a.b("components.defaultLoader", a.g.Zb); a.g.loaders.push(a.g.Zb); a.g.Bc = k
            })(); (function () {
                function b(b, e) {
                    var f = b.getAttribute("params"); if (f) {
                        var f = c.parseBindingsString(f, e, b, { valueAccessors: !0, bindingParams: !0 }), f = a.a.Ca(f, function (c) { return a.m(c, null, { i: b }) }), g = a.a.Ca(f, function (c) {
                            var e =
                            c.t(); return c.ba() ? a.m({ read: function () { return a.a.c(c()) }, write: a.Ba(e) && function (a) { c()(a) }, i: b }) : e
                        }); g.hasOwnProperty("$raw") || (g.$raw = f); return g
                    } return { $raw: {} }
                } a.g.getComponentNameForNode = function (b) { var c = a.a.A(b); if (a.g.ub(c) && (-1 != c.indexOf("-") || "[object HTMLUnknownElement]" == "" + b || 8 >= a.a.C && b.tagName === c)) return c }; a.g.Ob = function (c, e, f, g) {
                    if (1 === e.nodeType) {
                        var k = a.g.getComponentNameForNode(e); if (k) {
                            c = c || {}; if (c.component) throw Error('Cannot use the "component" binding on a custom element matching a component');
                            var l = { name: k, params: b(e, f) }; c.component = g ? function () { return l } : l
                        }
                    } return c
                }; var c = new a.Q; 9 > a.a.C && (a.g.register = function (a) { return function (b) { u.createElement(b); return a.apply(this, arguments) } }(a.g.register), u.createDocumentFragment = function (b) { return function () { var c = b(), f = a.g.Bc, g; for (g in f) f.hasOwnProperty(g) && c.createElement(g); return c } }(u.createDocumentFragment))
            })(); (function (b) {
                function c(b, c, d) { c = c.template; if (!c) throw Error("Component '" + b + "' has no template"); b = a.a.ua(c); a.f.da(d, b) }
                function d(a, b, c, d) { var e = a.createViewModel; return e ? e.call(a, d, { element: b, templateNodes: c }) : d } var e = 0; a.d.component = {
                    init: function (f, g, k, l, m) {
                        function h() { var a = r && r.dispose; "function" === typeof a && a.call(r); q = r = null } var r, q, p = a.a.V(a.f.childNodes(f)); a.a.F.oa(f, h); a.m(function () {
                            var l = a.a.c(g()), k, t; "string" === typeof l ? k = l : (k = a.a.c(l.name), t = a.a.c(l.params)); if (!k) throw Error("No component name specified"); var n = q = ++e; a.g.get(k, function (e) {
                                if (q === n) {
                                    h(); if (!e) throw Error("Unknown component '" + k +
                                    "'"); c(k, e, f); var g = d(e, f, p, t); e = m.createChildContext(g, b, function (a) { a.$component = g; a.$componentTemplateNodes = p }); r = g; a.eb(e, f)
                                }
                            })
                        }, null, { i: f }); return { controlsDescendantBindings: !0 }
                    }
                }; a.f.Z.component = !0
            })(); var S = { "class": "className", "for": "htmlFor" }; a.d.attr = {
                update: function (b, c) {
                    var d = a.a.c(c()) || {}; a.a.D(d, function (c, d) {
                        d = a.a.c(d); var g = !1 === d || null === d || d === n; g && b.removeAttribute(c); 8 >= a.a.C && c in S ? (c = S[c], g ? b.removeAttribute(c) : b[c] = d) : g || b.setAttribute(c, d.toString()); "name" === c && a.a.rc(b,
                        g ? "" : d.toString())
                    })
                }
            }; (function () {
                a.d.checked = {
                    after: ["value", "attr"], init: function (b, c, d) {
                        function e() { var e = b.checked, f = p ? g() : e; if (!a.va.Sa() && (!l || e)) { var m = a.l.w(c); if (h) { var k = r ? m.t() : m; q !== f ? (e && (a.a.pa(k, f, !0), a.a.pa(k, q, !1)), q = f) : a.a.pa(k, f, e); r && a.Ba(m) && m(k) } else a.h.Ea(m, d, "checked", f, !0) } } function f() { var d = a.a.c(c()); b.checked = h ? 0 <= a.a.o(d, g()) : k ? d : g() === d } var g = a.nc(function () { return d.has("checkedValue") ? a.a.c(d.get("checkedValue")) : d.has("value") ? a.a.c(d.get("value")) : b.value }), k =
                        "checkbox" == b.type, l = "radio" == b.type; if (k || l) { var m = c(), h = k && a.a.c(m) instanceof Array, r = !(h && m.push && m.splice), q = h ? g() : n, p = l || h; l && !b.name && a.d.uniqueName.init(b, function () { return !0 }); a.m(e, null, { i: b }); a.a.p(b, "click", e); a.m(f, null, { i: b }); m = n }
                    }
                }; a.h.ea.checked = !0; a.d.checkedValue = { update: function (b, c) { b.value = a.a.c(c()) } }
            })(); a.d.css = {
                update: function (b, c) {
                    var d = a.a.c(c()); null !== d && "object" == typeof d ? a.a.D(d, function (c, d) { d = a.a.c(d); a.a.bb(b, c, d) }) : (d = a.a.$a(String(d || "")), a.a.bb(b, b.__ko__cssValue,
                    !1), b.__ko__cssValue = d, a.a.bb(b, d, !0))
                }
            }; a.d.enable = { update: function (b, c) { var d = a.a.c(c()); d && b.disabled ? b.removeAttribute("disabled") : d || b.disabled || (b.disabled = !0) } }; a.d.disable = { update: function (b, c) { a.d.enable.update(b, function () { return !a.a.c(c()) }) } }; a.d.event = {
                init: function (b, c, d, e, f) {
                    var g = c() || {}; a.a.D(g, function (g) {
                        "string" == typeof g && a.a.p(b, g, function (b) {
                            var m, h = c()[g]; if (h) {
                                try { var r = a.a.V(arguments); e = f.$data; r.unshift(e); m = h.apply(e, r) } finally {
                                    !0 !== m && (b.preventDefault ? b.preventDefault() :
                                    b.returnValue = !1)
                                } !1 === d.get(g + "Bubble") && (b.cancelBubble = !0, b.stopPropagation && b.stopPropagation())
                            }
                        })
                    })
                }
            }; a.d.foreach = {
                ic: function (b) { return function () { var c = b(), d = a.a.zb(c); if (!d || "number" == typeof d.length) return { foreach: c, templateEngine: a.W.sb }; a.a.c(c); return { foreach: d.data, as: d.as, includeDestroyed: d.includeDestroyed, afterAdd: d.afterAdd, beforeRemove: d.beforeRemove, afterRender: d.afterRender, beforeMove: d.beforeMove, afterMove: d.afterMove, templateEngine: a.W.sb } } }, init: function (b, c) {
                    return a.d.template.init(b,
                    a.d.foreach.ic(c))
                }, update: function (b, c, d, e, f) { return a.d.template.update(b, a.d.foreach.ic(c), d, e, f) }
            }; a.h.ta.foreach = !1; a.f.Z.foreach = !0; a.d.hasfocus = {
                init: function (b, c, d) {
                    function e(e) { b.__ko_hasfocusUpdating = !0; var f = b.ownerDocument; if ("activeElement" in f) { var g; try { g = f.activeElement } catch (h) { g = f.body } e = g === b } f = c(); a.h.Ea(f, d, "hasfocus", e, !0); b.__ko_hasfocusLastValue = e; b.__ko_hasfocusUpdating = !1 } var f = e.bind(null, !0), g = e.bind(null, !1); a.a.p(b, "focus", f); a.a.p(b, "focusin", f); a.a.p(b, "blur", g); a.a.p(b,
                    "focusout", g)
                }, update: function (b, c) { var d = !!a.a.c(c()); b.__ko_hasfocusUpdating || b.__ko_hasfocusLastValue === d || (d ? b.focus() : b.blur(), !d && b.__ko_hasfocusLastValue && b.ownerDocument.body.focus(), a.l.w(a.a.Da, null, [b, d ? "focusin" : "focusout"])) }
            }; a.h.ea.hasfocus = !0; a.d.hasFocus = a.d.hasfocus; a.h.ea.hasFocus = !0; a.d.html = { init: function () { return { controlsDescendantBindings: !0 } }, update: function (b, c) { a.a.Cb(b, c()) } }; K("if"); K("ifnot", !1, !0); K("with", !0, !1, function (a, c) { return a.createChildContext(c) }); var L = {};
            a.d.options = {
                init: function (b) { if ("select" !== a.a.A(b)) throw Error("options binding applies only to SELECT elements"); for (; 0 < b.length;) b.remove(0); return { controlsDescendantBindings: !0 } }, update: function (b, c, d) {
                    function e() { return a.a.Ka(b.options, function (a) { return a.selected }) } function f(a, b, c) { var d = typeof b; return "function" == d ? b(a) : "string" == d ? a[b] : c } function g(c, e) {
                        if (A && h) a.j.ha(b, a.a.c(d.get("value")), !0); else if (p.length) {
                            var f = 0 <= a.a.o(p, a.j.u(e[0])); a.a.sc(e[0], f); A && !f && a.l.w(a.a.Da, null, [b,
                            "change"])
                        }
                    } var k = b.multiple, l = 0 != b.length && k ? b.scrollTop : null, m = a.a.c(c()), h = d.get("valueAllowUnset") && d.has("value"), r = d.get("optionsIncludeDestroyed"); c = {}; var q, p = []; h || (k ? p = a.a.fb(e(), a.j.u) : 0 <= b.selectedIndex && p.push(a.j.u(b.options[b.selectedIndex]))); m && ("undefined" == typeof m.length && (m = [m]), q = a.a.Ka(m, function (b) { return r || b === n || null === b || !a.a.c(b._destroy) }), d.has("optionsCaption") && (m = a.a.c(d.get("optionsCaption")), null !== m && m !== n && q.unshift(L))); var A = !1; c.beforeRemove = function (a) { b.removeChild(a) };
                    m = g; d.has("optionsAfterRender") && "function" == typeof d.get("optionsAfterRender") && (m = function (b, c) { g(0, c); a.l.w(d.get("optionsAfterRender"), null, [c[0], b !== L ? b : n]) }); a.a.Bb(b, q, function (c, e, g) { g.length && (p = !h && g[0].selected ? [a.j.u(g[0])] : [], A = !0); e = b.ownerDocument.createElement("option"); c === L ? (a.a.Za(e, d.get("optionsCaption")), a.j.ha(e, n)) : (g = f(c, d.get("optionsValue"), c), a.j.ha(e, a.a.c(g)), c = f(c, d.get("optionsText"), g), a.a.Za(e, c)); return [e] }, c, m); a.l.w(function () {
                        h ? a.j.ha(b, a.a.c(d.get("value")),
                        !0) : (k ? p.length && e().length < p.length : p.length && 0 <= b.selectedIndex ? a.j.u(b.options[b.selectedIndex]) !== p[0] : p.length || 0 <= b.selectedIndex) && a.a.Da(b, "change")
                    }); a.a.Nc(b); l && 20 < Math.abs(l - b.scrollTop) && (b.scrollTop = l)
                }
            }; a.d.options.xb = a.a.e.I(); a.d.selectedOptions = {
                after: ["options", "foreach"], init: function (b, c, d) { a.a.p(b, "change", function () { var e = c(), f = []; a.a.q(b.getElementsByTagName("option"), function (b) { b.selected && f.push(a.j.u(b)) }); a.h.Ea(e, d, "selectedOptions", f) }) }, update: function (b, c) {
                    if ("select" !=
                    a.a.A(b)) throw Error("values binding applies only to SELECT elements"); var d = a.a.c(c()), e = b.scrollTop; d && "number" == typeof d.length && a.a.q(b.getElementsByTagName("option"), function (b) { var c = 0 <= a.a.o(d, a.j.u(b)); b.selected != c && a.a.sc(b, c) }); b.scrollTop = e
                }
            }; a.h.ea.selectedOptions = !0; a.d.style = { update: function (b, c) { var d = a.a.c(c() || {}); a.a.D(d, function (c, d) { d = a.a.c(d); if (null === d || d === n || !1 === d) d = ""; b.style[c] = d }) } }; a.d.submit = {
                init: function (b, c, d, e, f) {
                    if ("function" != typeof c()) throw Error("The value for a submit binding must be a function");
                    a.a.p(b, "submit", function (a) { var d, e = c(); try { d = e.call(f.$data, b) } finally { !0 !== d && (a.preventDefault ? a.preventDefault() : a.returnValue = !1) } })
                }
            }; a.d.text = { init: function () { return { controlsDescendantBindings: !0 } }, update: function (b, c) { a.a.Za(b, c()) } }; a.f.Z.text = !0; (function () {
                if (x && x.navigator) var b = function (a) { if (a) return parseFloat(a[1]) }, c = x.opera && x.opera.version && parseInt(x.opera.version()), d = x.navigator.userAgent, e = b(d.match(/^(?:(?!chrome).)*version\/([^ ]*) safari/i)), f = b(d.match(/Firefox\/([^ ]*)/));
                if (10 > a.a.C) var g = a.a.e.I(), k = a.a.e.I(), l = function (b) { var c = this.activeElement; (c = c && a.a.e.get(c, k)) && c(b) }, m = function (b, c) { var d = b.ownerDocument; a.a.e.get(d, g) || (a.a.e.set(d, g, !0), a.a.p(d, "selectionchange", l)); a.a.e.set(b, k, c) }; a.d.textInput = {
                    init: function (b, d, g) {
                        function l(c, d) { a.a.p(b, c, d) } function k() { var c = a.a.c(d()); if (null === c || c === n) c = ""; v !== n && c === v ? a.a.setTimeout(k, 4) : b.value !== c && (u = c, b.value = c) } function y() { s || (v = b.value, s = a.a.setTimeout(t, 4)) } function t() {
                            clearTimeout(s); v = s = n; var c =
                            b.value; u !== c && (u = c, a.h.Ea(d(), g, "textInput", c))
                        } var u = b.value, s, v, x = 9 == a.a.C ? y : t; 10 > a.a.C ? (l("propertychange", function (a) { "value" === a.propertyName && x(a) }), 8 == a.a.C && (l("keyup", t), l("keydown", t)), 8 <= a.a.C && (m(b, x), l("dragend", y))) : (l("input", t), 5 > e && "textarea" === a.a.A(b) ? (l("keydown", y), l("paste", y), l("cut", y)) : 11 > c ? l("keydown", y) : 4 > f && (l("DOMAutoComplete", t), l("dragdrop", t), l("drop", t))); l("change", t); a.m(k, null, { i: b })
                    }
                }; a.h.ea.textInput = !0; a.d.textinput = {
                    preprocess: function (a, b, c) {
                        c("textInput",
                        a)
                    }
                }
            })(); a.d.uniqueName = { init: function (b, c) { if (c()) { var d = "ko_unique_" + ++a.d.uniqueName.Ic; a.a.rc(b, d) } } }; a.d.uniqueName.Ic = 0; a.d.value = {
                after: ["options", "foreach"], init: function (b, c, d) {
                    if ("input" != b.tagName.toLowerCase() || "checkbox" != b.type && "radio" != b.type) {
                        var e = ["change"], f = d.get("valueUpdate"), g = !1, k = null; f && ("string" == typeof f && (f = [f]), a.a.ra(e, f), e = a.a.Tb(e)); var l = function () { k = null; g = !1; var e = c(), f = a.j.u(b); a.h.Ea(e, d, "value", f) }; !a.a.C || "input" != b.tagName.toLowerCase() || "text" != b.type ||
                        "off" == b.autocomplete || b.form && "off" == b.form.autocomplete || -1 != a.a.o(e, "propertychange") || (a.a.p(b, "propertychange", function () { g = !0 }), a.a.p(b, "focus", function () { g = !1 }), a.a.p(b, "blur", function () { g && l() })); a.a.q(e, function (c) { var d = l; a.a.nd(c, "after") && (d = function () { k = a.j.u(b); a.a.setTimeout(l, 0) }, c = c.substring(5)); a.a.p(b, c, d) }); var m = function () {
                            var e = a.a.c(c()), f = a.j.u(b); if (null !== k && e === k) a.a.setTimeout(m, 0); else if (e !== f) if ("select" === a.a.A(b)) {
                                var g = d.get("valueAllowUnset"), f = function () {
                                    a.j.ha(b,
                                    e, g)
                                }; f(); g || e === a.j.u(b) ? a.a.setTimeout(f, 0) : a.l.w(a.a.Da, null, [b, "change"])
                            } else a.j.ha(b, e)
                        }; a.m(m, null, { i: b })
                    } else a.Ja(b, { checkedValue: c })
                }, update: function () { }
            }; a.h.ea.value = !0; a.d.visible = { update: function (b, c) { var d = a.a.c(c()), e = "none" != b.style.display; d && !e ? b.style.display = "" : !d && e && (b.style.display = "none") } }; (function (b) { a.d[b] = { init: function (c, d, e, f, g) { return a.d.event.init.call(this, c, function () { var a = {}; a[b] = d(); return a }, e, f, g) } } })("click"); a.O = function () { }; a.O.prototype.renderTemplateSource =
            function () { throw Error("Override renderTemplateSource"); }; a.O.prototype.createJavaScriptEvaluatorBlock = function () { throw Error("Override createJavaScriptEvaluatorBlock"); }; a.O.prototype.makeTemplateSource = function (b, c) { if ("string" == typeof b) { c = c || u; var d = c.getElementById(b); if (!d) throw Error("Cannot find template with ID " + b); return new a.v.n(d) } if (1 == b.nodeType || 8 == b.nodeType) return new a.v.qa(b); throw Error("Unknown template type: " + b); }; a.O.prototype.renderTemplate = function (a, c, d, e) {
                a = this.makeTemplateSource(a,
                e); return this.renderTemplateSource(a, c, d, e)
            }; a.O.prototype.isTemplateRewritten = function (a, c) { return !1 === this.allowTemplateRewriting ? !0 : this.makeTemplateSource(a, c).data("isRewritten") }; a.O.prototype.rewriteTemplate = function (a, c, d) { a = this.makeTemplateSource(a, d); c = c(a.text()); a.text(c); a.data("isRewritten", !0) }; a.b("templateEngine", a.O); a.Gb = function () {
                function b(b, c, d, k) {
                    b = a.h.yb(b); for (var l = a.h.ta, m = 0; m < b.length; m++) {
                        var h = b[m].key; if (l.hasOwnProperty(h)) {
                            var r = l[h]; if ("function" === typeof r) {
                                if (h =
                                r(b[m].value)) throw Error(h);
                            } else if (!r) throw Error("This template engine does not support the '" + h + "' binding within its templates");
                        }
                    } d = "ko.__tr_ambtns(function($context,$element){return(function(){return{ " + a.h.Ua(b, { valueAccessors: !0 }) + " } })()},'" + d.toLowerCase() + "')"; return k.createJavaScriptEvaluatorBlock(d) + c
                } var c = /(<([a-z]+\d*)(?:\s+(?!data-bind\s*=\s*)[a-z0-9\-]+(?:=(?:\"[^\"]*\"|\'[^\']*\'|[^>]*))?)*\s+)data-bind\s*=\s*(["'])([\s\S]*?)\3/gi, d = /\x3c!--\s*ko\b\s*([\s\S]*?)\s*--\x3e/g; return {
                    Oc: function (b,
                    c, d) { c.isTemplateRewritten(b, d) || c.rewriteTemplate(b, function (b) { return a.Gb.dd(b, c) }, d) }, dd: function (a, f) { return a.replace(c, function (a, c, d, e, h) { return b(h, c, d, f) }).replace(d, function (a, c) { return b(c, "\x3c!-- ko --\x3e", "#comment", f) }) }, Ec: function (b, c) { return a.M.wb(function (d, k) { var l = d.nextSibling; l && l.nodeName.toLowerCase() === c && a.Ja(l, b, k) }) }
                }
            }(); a.b("__tr_ambtns", a.Gb.Ec); (function () {
                a.v = {}; a.v.n = function (b) {
                    if (this.n = b) {
                        var c = a.a.A(b); this.ab = "script" === c ? 1 : "textarea" === c ? 2 : "template" == c &&
                        b.content && 11 === b.content.nodeType ? 3 : 4
                    }
                }; a.v.n.prototype.text = function () { var b = 1 === this.ab ? "text" : 2 === this.ab ? "value" : "innerHTML"; if (0 == arguments.length) return this.n[b]; var c = arguments[0]; "innerHTML" === b ? a.a.Cb(this.n, c) : this.n[b] = c }; var b = a.a.e.I() + "_"; a.v.n.prototype.data = function (c) { if (1 === arguments.length) return a.a.e.get(this.n, b + c); a.a.e.set(this.n, b + c, arguments[1]) }; var c = a.a.e.I(); a.v.n.prototype.nodes = function () {
                    var b = this.n; if (0 == arguments.length) return (a.a.e.get(b, c) || {}).jb || (3 === this.ab ?
                    b.content : 4 === this.ab ? b : n); a.a.e.set(b, c, { jb: arguments[0] })
                }; a.v.qa = function (a) { this.n = a }; a.v.qa.prototype = new a.v.n; a.v.qa.prototype.text = function () { if (0 == arguments.length) { var b = a.a.e.get(this.n, c) || {}; b.Hb === n && b.jb && (b.Hb = b.jb.innerHTML); return b.Hb } a.a.e.set(this.n, c, { Hb: arguments[0] }) }; a.b("templateSources", a.v); a.b("templateSources.domElement", a.v.n); a.b("templateSources.anonymousTemplate", a.v.qa)
            })(); (function () {
                function b(b, c, d) {
                    var e; for (c = a.f.nextSibling(c) ; b && (e = b) !== c;) b = a.f.nextSibling(e),
                    d(e, b)
                } function c(c, d) { if (c.length) { var e = c[0], f = c[c.length - 1], g = e.parentNode, k = a.Q.instance, n = k.preprocessNode; if (n) { b(e, f, function (a, b) { var c = a.previousSibling, d = n.call(k, a); d && (a === e && (e = d[0] || b), a === f && (f = d[d.length - 1] || c)) }); c.length = 0; if (!e) return; e === f ? c.push(e) : (c.push(e, f), a.a.za(c, g)) } b(e, f, function (b) { 1 !== b.nodeType && 8 !== b.nodeType || a.Rb(d, b) }); b(e, f, function (b) { 1 !== b.nodeType && 8 !== b.nodeType || a.M.yc(b, [d]) }); a.a.za(c, g) } } function d(a) { return a.nodeType ? a : 0 < a.length ? a[0] : null } function e(b,
                e, f, k, q) {
                    q = q || {}; var p = (b && d(b) || f || {}).ownerDocument, n = q.templateEngine || g; a.Gb.Oc(f, n, p); f = n.renderTemplate(f, k, q, p); if ("number" != typeof f.length || 0 < f.length && "number" != typeof f[0].nodeType) throw Error("Template engine must return an array of DOM nodes"); p = !1; switch (e) { case "replaceChildren": a.f.da(b, f); p = !0; break; case "replaceNode": a.a.qc(b, f); p = !0; break; case "ignoreTargetNode": break; default: throw Error("Unknown renderMode: " + e); } p && (c(f, k), q.afterRender && a.l.w(q.afterRender, null, [f, k.$data]));
                    return f
                } function f(b, c, d) { return a.H(b) ? b() : "function" === typeof b ? b(c, d) : b } var g; a.Db = function (b) { if (b != n && !(b instanceof a.O)) throw Error("templateEngine must inherit from ko.templateEngine"); g = b }; a.Ab = function (b, c, h, k, q) {
                    h = h || {}; if ((h.templateEngine || g) == n) throw Error("Set a template engine before calling renderTemplate"); q = q || "replaceChildren"; if (k) {
                        var p = d(k); return a.B(function () { var g = c && c instanceof a.U ? c : new a.U(a.a.c(c)), n = f(b, g.$data, g), g = e(k, q, n, g, h); "replaceNode" == q && (k = g, p = d(k)) }, null,
                        { wa: function () { return !p || !a.a.nb(p) }, i: p && "replaceNode" == q ? p.parentNode : p })
                    } return a.M.wb(function (d) { a.Ab(b, c, h, d, "replaceNode") })
                }; a.kd = function (b, d, g, k, q) {
                    function p(a, b) { c(b, s); g.afterRender && g.afterRender(b, a); s = null } function u(a, c) { s = q.createChildContext(a, g.as, function (a) { a.$index = c }); var d = f(b, a, s); return e(null, "ignoreTargetNode", d, s, g) } var s; return a.B(function () {
                        var b = a.a.c(d) || []; "undefined" == typeof b.length && (b = [b]); b = a.a.Ka(b, function (b) { return g.includeDestroyed || b === n || null === b || !a.a.c(b._destroy) });
                        a.l.w(a.a.Bb, null, [k, b, u, g, p])
                    }, null, { i: k })
                }; var k = a.a.e.I(); a.d.template = {
                    init: function (b, c) { var d = a.a.c(c()); if ("string" == typeof d || d.name) a.f.xa(b); else { if ("nodes" in d) { if (d = d.nodes || [], a.H(d)) throw Error('The "nodes" option must be a plain, non-observable array.'); } else d = a.f.childNodes(b); d = a.a.jc(d); (new a.v.qa(b)).nodes(d) } return { controlsDescendantBindings: !0 } }, update: function (b, c, d, e, f) {
                        var g = c(), s; c = a.a.c(g); d = !0; e = null; "string" == typeof c ? c = {} : (g = c.name, "if" in c && (d = a.a.c(c["if"])), d && "ifnot" in
                        c && (d = !a.a.c(c.ifnot)), s = a.a.c(c.data)); "foreach" in c ? e = a.kd(g || b, d && c.foreach || [], c, b, f) : d ? (f = "data" in c ? f.createChildContext(s, c.as) : f, e = a.Ab(g || b, f, c, b)) : a.f.xa(b); f = e; (s = a.a.e.get(b, k)) && "function" == typeof s.k && s.k(); a.a.e.set(b, k, f && f.ba() ? f : n)
                    }
                }; a.h.ta.template = function (b) { b = a.h.yb(b); return 1 == b.length && b[0].unknown || a.h.ad(b, "name") ? null : "This template engine does not support anonymous templates nested within its templates" }; a.f.Z.template = !0
            })(); a.b("setTemplateEngine", a.Db); a.b("renderTemplate",
            a.Ab); a.a.dc = function (a, c, d) { if (a.length && c.length) { var e, f, g, k, l; for (e = f = 0; (!d || e < d) && (k = a[f]) ; ++f) { for (g = 0; l = c[g]; ++g) if (k.value === l.value) { k.moved = l.index; l.moved = k.index; c.splice(g, 1); e = g = 0; break } e += g } } }; a.a.ib = function () {
                function b(b, d, e, f, g) {
                    var k = Math.min, l = Math.max, m = [], h, n = b.length, q, p = d.length, s = p - n || 1, u = n + p + 1, t, v, x; for (h = 0; h <= n; h++) for (v = t, m.push(t = []), x = k(p, h + s), q = l(0, h - 1) ; q <= x; q++) t[q] = q ? h ? b[h - 1] === d[q - 1] ? v[q - 1] : k(v[q] || u, t[q - 1] || u) + 1 : q + 1 : h + 1; k = []; l = []; s = []; h = n; for (q = p; h || q;) p = m[h][q] -
                    1, q && p === m[h][q - 1] ? l.push(k[k.length] = { status: e, value: d[--q], index: q }) : h && p === m[h - 1][q] ? s.push(k[k.length] = { status: f, value: b[--h], index: h }) : (--q, --h, g.sparse || k.push({ status: "retained", value: d[q] })); a.a.dc(s, l, !g.dontLimitMoves && 10 * n); return k.reverse()
                } return function (a, d, e) { e = "boolean" === typeof e ? { dontLimitMoves: e } : e || {}; a = a || []; d = d || []; return a.length < d.length ? b(a, d, "added", "deleted", e) : b(d, a, "deleted", "added", e) }
            }(); a.b("utils.compareArrays", a.a.ib); (function () {
                function b(b, c, d, k, l) {
                    var m = [],
                    h = a.B(function () { var h = c(d, l, a.a.za(m, b)) || []; 0 < m.length && (a.a.qc(m, h), k && a.l.w(k, null, [d, h, l])); m.length = 0; a.a.ra(m, h) }, null, { i: b, wa: function () { return !a.a.Qb(m) } }); return { ca: m, B: h.ba() ? h : n }
                } var c = a.a.e.I(), d = a.a.e.I(); a.a.Bb = function (e, f, g, k, l) {
                    function m(b, c) { w = q[c]; v !== c && (D[b] = w); w.qb(v++); a.a.za(w.ca, e); u.push(w); z.push(w) } function h(b, c) { if (b) for (var d = 0, e = c.length; d < e; d++) c[d] && a.a.q(c[d].ca, function (a) { b(a, d, c[d].ja) }) } f = f || []; k = k || {}; var r = a.a.e.get(e, c) === n, q = a.a.e.get(e, c) || [], p = a.a.fb(q,
                    function (a) { return a.ja }), s = a.a.ib(p, f, k.dontLimitMoves), u = [], t = 0, v = 0, x = [], z = []; f = []; for (var D = [], p = [], w, C = 0, B, E; B = s[C]; C++) switch (E = B.moved, B.status) { case "deleted": E === n && (w = q[t], w.B && (w.B.k(), w.B = n), a.a.za(w.ca, e).length && (k.beforeRemove && (u.push(w), z.push(w), w.ja === d ? w = null : f[C] = w), w && x.push.apply(x, w.ca))); t++; break; case "retained": m(C, t++); break; case "added": E !== n ? m(C, E) : (w = { ja: B.value, qb: a.N(v++) }, u.push(w), z.push(w), r || (p[C] = w)) } a.a.e.set(e, c, u); h(k.beforeMove, D); a.a.q(x, k.beforeRemove ? a.$ :
                    a.removeNode); for (var C = 0, r = a.f.firstChild(e), F; w = z[C]; C++) { w.ca || a.a.extend(w, b(e, g, w.ja, l, w.qb)); for (t = 0; s = w.ca[t]; r = s.nextSibling, F = s, t++) s !== r && a.f.gc(e, s, F); !w.Wc && l && (l(w.ja, w.ca, w.qb), w.Wc = !0) } h(k.beforeRemove, f); for (C = 0; C < f.length; ++C) f[C] && (f[C].ja = d); h(k.afterMove, D); h(k.afterAdd, p)
                }
            })(); a.b("utils.setDomNodeChildrenFromArrayMapping", a.a.Bb); a.W = function () { this.allowTemplateRewriting = !1 }; a.W.prototype = new a.O; a.W.prototype.renderTemplateSource = function (b, c, d, e) {
                if (c = (9 > a.a.C ? 0 : b.nodes) ?
                b.nodes() : null) return a.a.V(c.cloneNode(!0).childNodes); b = b.text(); return a.a.ma(b, e)
            }; a.W.sb = new a.W; a.Db(a.W.sb); a.b("nativeTemplateEngine", a.W); (function () {
                a.vb = function () {
                    var a = this.$c = function () { if (!v || !v.tmpl) return 0; try { if (0 <= v.tmpl.tag.tmpl.open.toString().indexOf("__")) return 2 } catch (a) { } return 1 }(); this.renderTemplateSource = function (b, e, f, g) {
                        g = g || u; f = f || {}; if (2 > a) throw Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later."); var k = b.data("precompiled");
                        k || (k = b.text() || "", k = v.template(null, "{{ko_with $item.koBindingContext}}" + k + "{{/ko_with}}"), b.data("precompiled", k)); b = [e.$data]; e = v.extend({ koBindingContext: e }, f.templateOptions); e = v.tmpl(k, b, e); e.appendTo(g.createElement("div")); v.fragments = {}; return e
                    }; this.createJavaScriptEvaluatorBlock = function (a) { return "{{ko_code ((function() { return " + a + " })()) }}" }; this.addTemplate = function (a, b) { u.write("<script type='text/html' id='" + a + "'>" + b + "\x3c/script>") }; 0 < a && (v.tmpl.tag.ko_code = { open: "__.push($1 || '');" },
                    v.tmpl.tag.ko_with = { open: "with($1) {", close: "} " })
                }; a.vb.prototype = new a.O; var b = new a.vb; 0 < b.$c && a.Db(b); a.b("jqueryTmplTemplateEngine", a.vb)
            })()
        })
    })();
})();;
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var BotFactory = (function () {
    function BotFactory() {
    }
    BotFactory.create = function (type) {
        if (type == 5) {
            var variablesManager = new TreeVariablesManager();
            return BotTreeManager.Instance(variablesManager);
        }
        else if (type == 4) {
            return BotInbentaManager.Instance;
        }
        else {
            return null;
        }
    };
    return BotFactory;
}());
var BotManager = (function () {
    function BotManager() {
        this.room = Core.Helpers.getTokenRoom();
    }
    BotManager.prototype.init = function (isOverflow, license) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.isOverflow = isOverflow;
                        this.license = license;
                        if (this.disableChatInputAtStart) {
                            $o.inactivity.disableChatInputUI();
                        }
                        if (!($o.utils && $o.utils.initBotAction)) return [3, 1];
                        $o.utils.initBotAction(this.mustLaunchBot());
                        return [3, 5];
                    case 1:
                        if (!this.mustLaunchBot()) return [3, 3];
                        return [4, this.startAsync()];
                    case 2:
                        _a.sent();
                        return [3, 5];
                    case 3: return [4, this.botLaunchedActions()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        parent.postMessage("BOT_READY", "*");
                        return [2];
                }
            });
        });
    };
    ;
    BotManager.prototype.connectOverflowAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getStartDataAsync()];
                    case 1:
                        data = _a.sent();
                        data.startNode.nodeId = data.startNode.nodeId === "" ? null : data.startNode.nodeId;
                        $.connection.hubInterface.server.connectBotFromOverflow(data, JSON.stringify(this.initialContext));
                        $o.core.globalVariables.startedBotOffline = true;
                        return [2];
                }
            });
        });
    };
    BotManager.prototype.startConnectedAsync = function (startData) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, $.connection.hubInterface.server.initBotConversation(startData, JSON.stringify(this.initialContext))];
                    case 1:
                        _a.sent();
                        return [2];
                }
            });
        });
    };
    BotManager.prototype.getActionsOfflineAsync = function (startNodeData) {
        return __awaiter(this, void 0, void 0, function () {
            var keepStarting, nodesToExecute, _loop_1, _i, nodesToExecute_1, node;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        keepStarting = this.validateStart(startNodeData);
                        if (!keepStarting) return [3, 6];
                        return [4, this.getInteractionsToExecute(startNodeData)];
                    case 1:
                        nodesToExecute = _a.sent();
                        _loop_1 = function (node) {
                            var newNodeBackend, newNode;
                            return __generator(this, function (_b) {
                                switch (_b.label) {
                                    case 0:
                                        newNodeBackend = Interactions.BaseManager.objectAdapter(node, Interactions.Targets.Backend);
                                        if (!(newNodeBackend.Method == "sendMessage")) return [3, 2];
                                        $.connection.hubInterface.client.receiveMessage(newNodeBackend.Param, newNodeBackend.Delay);
                                        return [4, new Promise(function (resolve) { return setTimeout(resolve, newNodeBackend.delay); })];
                                    case 1:
                                        _b.sent();
                                        _b.label = 2;
                                    case 2:
                                        if (newNodeBackend.Method == "sendAnalyticsEvent") {
                                            $.connection.hubInterface.client.receiveAnalyticsEvent(newNodeBackend.Param);
                                        }
                                        if (newNodeBackend.Method == "sendInputValidation") {
                                            $.connection.hubInterface.client.receiveInputValidation(newNodeBackend.Param);
                                        }
                                        if (node.method == "sendRunAsyncScript") {
                                            $.connection.hubInterface.client.receiveRunAsyncScript(node.Param);
                                        }
                                        newNode = Interactions.BaseManager.objectAdapter(node, Interactions.Targets.Frontend);
                                        if (!(newNode.method == "sendChoice")) return [3, 4];
                                        $.connection.hubInterface.client.receiveChoice(newNode.param, newNode.delay);
                                        return [4, new Promise(function (resolve) { return setTimeout(resolve, newNode.delay); })];
                                    case 3:
                                        _b.sent();
                                        _b.label = 4;
                                    case 4:
                                        if (newNode.method == "sendSideBubble") {
                                            $.connection.hubInterface.client.receiveSideBubble(newNode.param);
                                        }
                                        if (!(newNode.method == "sendDelay")) return [3, 6];
                                        return [4, $o.delayAction.process(newNode.param, false)];
                                    case 5:
                                        _b.sent();
                                        _b.label = 6;
                                    case 6:
                                        if (!(newNode.method == "sendError")) return [3, 8];
                                        return [4, $o.botErrors.process(newNode.param)];
                                    case 7:
                                        _b.sent();
                                        _b.label = 8;
                                    case 8:
                                        if (!(newNode.method == "sendCustomForm")) return [3, 10];
                                        $.connection.hubInterface.client.receiveCustomForm(newNode.param, newNode.delay);
                                        return [4, new Promise(function (resolve) { return setTimeout(resolve, newNode.delay); })];
                                    case 9:
                                        _b.sent();
                                        _b.label = 10;
                                    case 10: return [2];
                                }
                            });
                        };
                        _i = 0, nodesToExecute_1 = nodesToExecute;
                        _a.label = 2;
                    case 2:
                        if (!(_i < nodesToExecute_1.length)) return [3, 5];
                        node = nodesToExecute_1[_i];
                        return [5, _loop_1(node)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        _i++;
                        return [3, 2];
                    case 5:
                        ;
                        _a.label = 6;
                    case 6: return [2];
                }
            });
        });
    };
    BotManager.prototype.startAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getStartDataAsync()];
                    case 1:
                        data = _a.sent();
                        if (!this.isOverflow) return [3, 3];
                        return [4, this.getActionsOfflineAsync(data)];
                    case 2:
                        _a.sent();
                        return [3, 5];
                    case 3: return [4, this.startConnectedAsync(data)];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5: return [2];
                }
            });
        });
    };
    ;
    BotManager.prototype.mustLaunchBot = function () {
        if ($o.core.globalVariables.enterType != $o.core.enterType.REOPEN && $o.core.globalVariables.enterType != $o.core.enterType.CHECKOUT) {
            return true;
        }
        else {
            return false;
        }
    };
    BotManager.prototype.getInteractionsToExecute = function (data) {
        return __awaiter(this, void 0, void 0, function () {
            var backendData, actions;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        backendData = Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Backend);
                        return [4, $.post("" + $o.settings.botServer + this.type + "/GetFirstActionsToExecute?", {
                                room: Core.Helpers.getTokenRoom(),
                                tokenVisitor: $o.core.globalVariables.myToken,
                                domainId: $o.core.globalVariables.domainId,
                                botName: $o.core.globalVariables.agentName,
                                data: backendData,
                                jsonContextVars: JSON.stringify(this.initialContext)
                            })];
                    case 1:
                        actions = _a.sent();
                        return [2, actions];
                }
            });
        });
    };
    ;
    return BotManager;
}());
;
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var BotInbentaManager = (function (_super) {
    __extends(BotInbentaManager, _super);
    function BotInbentaManager() {
        var _this = _super.call(this) || this;
        _this.startMessage = "sys-welcome";
        _this.type = "Inbenta";
        _this.initialContext = {};
        _this.disableChatInputAtStart = false;
        return _this;
    }
    Object.defineProperty(BotInbentaManager, "Instance", {
        get: function () {
            return this._instance || (this._instance = new this());
        },
        enumerable: false,
        configurable: true
    });
    ;
    BotInbentaManager.prototype.getStartDataAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var startData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!($o.utils && $o.utils.getInitialData)) return [3, 2];
                        return [4, $o.utils.getInitialData()];
                    case 1:
                        startData = _a.sent();
                        return [3, 3];
                    case 2:
                        startData = {
                            startNode: { nodeId: null, treeKey: null },
                            license: null,
                            welcomeMessage: this.startMessage,
                            room: this.room
                        };
                        _a.label = 3;
                    case 3:
                        this.startData = startData;
                        return [2, new Promise(function (resolve, reject) {
                                resolve(startData);
                            })];
                }
            });
        });
    };
    ;
    BotInbentaManager.prototype.validateStart = function (startNodeData) {
        return true;
    };
    BotInbentaManager.prototype.botLaunchedActions = function () {
        return null;
    };
    return BotInbentaManager;
}(BotManager));
;
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var BotTreeManager = (function (_super) {
    __extends(BotTreeManager, _super);
    function BotTreeManager(variablesManager) {
        var _this = _super.call(this) || this;
        _this.type = "Tree";
        _this.initialContext = {};
        _this.disableChatInputAtStart = true;
        _this.variablesManager = variablesManager;
        window.addEventListener("message", _this.receiveRequestFromApi.bind(_this));
        return _this;
    }
    BotTreeManager.Instance = function (variablesManager) {
        return this._instance || (this._instance = new this(variablesManager));
    };
    ;
    BotTreeManager.prototype.gotoBotAction = function (node) {
        this.sendGotoAction(node);
    };
    ;
    BotTreeManager.prototype.botLaunchedActions = function () {
        if (!this.isOverflow) {
            this.initialContext = this.variablesManager.recoverInitialContext();
        }
    };
    ;
    BotTreeManager.prototype.validateStart = function (startData) {
        if (startData.startNode.treeKey === null) {
            return false;
        }
        ;
        return true;
    };
    BotTreeManager.prototype.getStartDataAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data, startData;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!(this.startData &&
                            this.startData.hasOwnProperty("startNode") &&
                            this.startData.startNode.hasOwnProperty("treeKey") &&
                            this.startData.startNode != null)) return [3, 1];
                        return [2, this.startData];
                    case 1:
                        if (!($o.utils && $o.utils.getInitialData)) return [3, 3];
                        return [4, $o.utils.getInitialData()];
                    case 2:
                        data = _b.sent();
                        this.startData = data;
                        this.setInitialContext($o.utils.botContextVars);
                        return [2, data];
                    case 3:
                        _a = {};
                        return [4, this.getInitialNodeInfo()];
                    case 4:
                        startData = (_a.startNode = _b.sent(),
                            _a.license = this.license,
                            _a.welcomeMessage = null,
                            _a.room = this.room,
                            _a);
                        this.startData = startData;
                        return [2, startData];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.getInitialTreeAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var contextVars, trees, gotoFromApi, defaultTree, _i, _a, tree, locale, _b, _c, tree, treeLanguage;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (!$o.core.globalVariables.treePreviewId) return [3, 2];
                        return [4, this.getContextVarsForPreview()];
                    case 1:
                        contextVars = _d.sent();
                        this.setInitialContext(contextVars);
                        return [2, $o.core.globalVariables.treePreviewId];
                    case 2: return [4, this.getActiveTrees()];
                    case 3:
                        trees = _d.sent();
                        trees = Interactions.BaseManager.objectAdapter(trees, Interactions.Targets.Frontend);
                        this.activeTreesList = trees.treesList;
                        this.setInitialContext(trees.botContextVars);
                        gotoFromApi = $o.core.globalVariables.treeStartFromGoto;
                        if (this.activeTreesList.length) {
                            defaultTree = null;
                            for (_i = 0, _a = this.activeTreesList; _i < _a.length; _i++) {
                                tree = _a[_i];
                                if ((gotoFromApi != null && tree.id === gotoFromApi.treeId) ||
                                    ((gotoFromApi === null || gotoFromApi.treeId === null) && tree.defaultTree === true)) {
                                    defaultTree = tree;
                                    break;
                                }
                            }
                            if (defaultTree !== null) {
                                locale = $o.core.globalVariables.locale.split("-")[0];
                                if (locale.length) {
                                    for (_b = 0, _c = this.activeTreesList; _b < _c.length; _b++) {
                                        tree = _c[_b];
                                        treeLanguage = tree.language.toLowerCase();
                                        if (defaultTree.name == tree.name && locale.indexOf(treeLanguage) > -1) {
                                            return [2, tree.key];
                                        }
                                    }
                                }
                                return [2, defaultTree.key];
                            }
                            else {
                                return [2, null];
                            }
                        }
                        return [2, null];
                    case 4:
                        ;
                        return [2];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.setInitialContext = function (contextVars) {
        if (contextVars && Object.keys(contextVars).length > 0) {
            this.initialContext = this.variablesManager.setInitialContext(contextVars);
        }
    };
    ;
    BotTreeManager.prototype.getActiveTrees = function () {
        return __awaiter(this, void 0, void 0, function () {
            var treesInfo;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, $.post("/Visitor/GetActiveTrees?tokenSession=" + Core.Helpers.getTokenRoom())];
                    case 1:
                        treesInfo = _a.sent();
                        return [2, treesInfo];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.getContextVarsForPreview = function () {
        return __awaiter(this, void 0, void 0, function () {
            var contextVars;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, $.post("/Visitor/GetDomainContextVars?domainId=" + parseInt($o.core.globalVariables.domainId))];
                    case 1:
                        contextVars = _a.sent();
                        return [2, contextVars];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.getInitialNodeInfo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var treeId, startingNode, node;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getInitialTreeAsync()];
                    case 1:
                        treeId = _a.sent();
                        this.responseChecker = new BotTreesResponseChecker(this.isOverflow, treeId);
                        startingNode = null;
                        if ($o.core.globalVariables.treeStartFromGoto != null) {
                            startingNode = $o.core.globalVariables.treeStartFromGoto.nodeId;
                        }
                        ;
                        node = {
                            nodeId: startingNode,
                            treeKey: treeId
                        };
                        return [2, node];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.sendGotoAction = function (node) {
        return __awaiter(this, void 0, void 0, function () {
            var startData, startData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        $o.choices.disablePrevious();
                        if (!!this.isOverflow) return [3, 3];
                        if (!(node.treeId == null)) return [3, 2];
                        return [4, this.getStartDataAsync()];
                    case 1:
                        startData = _a.sent();
                        node.treeId = parseInt(startData.startNode.treeKey.split("-")[0]);
                        _a.label = 2;
                    case 2:
                        if (node.nodeId === null || node.nodeId === undefined)
                            node.nodeId = "";
                        $.connection.hubInterface.server.goToBotAction(node, this.room);
                        return [3, 6];
                    case 3:
                        this.startData = null;
                        $o.core.globalVariables.treeStartFromGoto = { nodeId: node.nodeId, treeId: node.treeId };
                        return [4, this.getStartDataAsync()];
                    case 4:
                        startData = _a.sent();
                        startData.startNode.nodeId = node.nodeId === null || node.nodeId === undefined ? "" : node.nodeId;
                        return [4, this.getActionsOfflineAsync(startData)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2];
                }
            });
        });
    };
    ;
    BotTreeManager.prototype.receiveRequestFromApi = function (message) {
        if (message.data && typeof message.data === 'string') {
            if (message.data) {
                var info = message.data.split(","), action = info[0];
                if (action === actions.GETTREEVARS) {
                    this.variablesManager.getAsync();
                }
                else if (action === actions.UPDATETREEVARS) {
                    this.variablesManager.updateAsync(info[1]);
                }
                else if (action === actions.BOT_GOTO) {
                    var newNodeLocation = JSON.parse(decodeURIComponent(info[1]));
                    this.sendGotoAction(newNodeLocation);
                }
            }
        }
    };
    ;
    return BotTreeManager;
}(BotManager));
var TreePreview = (function () {
    function TreePreview() {
    }
    TreePreview.preparePreview = function () {
        $o.core.globalVariables.agentsConnected = "True";
        $o.variablesVisitor.domain = this.getDomainIdForPreview();
        $o.core.globalVariables.enabledDepartments = false;
        $o.enterData.allowedDepartmentsId = null;
    };
    ;
    TreePreview.getDomainIdForPreview = function () {
        var env = $("#server-environment").val();
        switch (env) {
            case "https://webteste2ebackoffice.oct8ne.com/":
                return 295;
            case "https://webtestbackoffice.oct8ne.com/":
                return 294;
            case "https://backoffice-eu.oct8ne.com/":
                return 1892;
            case "https://backoffice.oct8ne.com/":
                return 19870;
            case "https://stagingbackoffice.oct8ne.com/":
                return 16;
            case "http://localhost:4700/":
                return 14293;
            default:
                return 0;
        }
    };
    ;
    return TreePreview;
}());
;
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var BotTreesResponseChecker = (function () {
    function BotTreesResponseChecker(isOverflow, treeId) {
        this.responseTimeInterval = null;
        this.responseDelayCount = 0;
        this.responseDelayTimeout = 1000 * 30;
        this.responseDelayInterval = 1000;
        this.isEnabled = true;
        this.room = Core.Helpers.getTokenRoom();
        this.isOverflow = isOverflow;
        this.treeId = treeId;
    }
    BotTreesResponseChecker.prototype.startWaiting = function () {
        var _this = this;
        if (this.isEnabled && this.responseDelayCount == 0) {
            this.countResponseTime();
            this.responseTimeInterval = setInterval(function () { _this.countResponseTime(); }, this.responseDelayInterval);
        }
    };
    ;
    BotTreesResponseChecker.prototype.onResponseReceived = function () {
        this.stopCount();
    };
    ;
    BotTreesResponseChecker.prototype.disableCounter = function () {
        this.isEnabled = false;
    };
    BotTreesResponseChecker.prototype.stopCount = function () {
        if (this.responseDelayCount > 0) {
            clearInterval(this.responseTimeInterval);
            this.responseTimeInterval = null;
            this.responseDelayCount = 0;
        }
    };
    ;
    BotTreesResponseChecker.prototype.countResponseTime = function () {
        return __awaiter(this, void 0, void 0, function () {
            var os, status, signalR, logInfo;
            return __generator(this, function (_a) {
                this.responseDelayCount = this.responseDelayCount + this.responseDelayInterval;
                console.log("Delay of " + this.responseDelayCount / 1000 + "s");
                if (this.responseDelayCount >= this.responseDelayTimeout) {
                    this.stopCount();
                    os = "Unknown OS";
                    status = "";
                    signalR = {
                        status: "Unknown",
                        connectionId: "Unknown"
                    };
                    try {
                        if (navigator.userAgent.indexOf("Win") !== -1)
                            os = "Windows OS";
                        if (navigator.userAgent.indexOf("Mac") !== -1)
                            os = "Macintosh";
                        if (navigator.userAgent.indexOf("Linux") !== -1)
                            os = "Linux OS";
                        if (navigator.userAgent.indexOf("Android") !== -1)
                            os = "Android OS";
                        if (navigator.userAgent.indexOf("like Mac") !== -1)
                            os = "iOS";
                        if ($.connection.hub.state === $.signalR.connectionState.disconnected)
                            status = "disconnected";
                        if ($.connection.hub.state === $.signalR.connectionState.connected)
                            status = "connected";
                        if ($.connection.hub.state === $.signalR.connectionState.connecting)
                            status = "connecting";
                        if ($.connection.hub.state === $.signalR.connectionState.reconnecting)
                            status = "reconnecting";
                        signalR.status = status;
                        signalR.connectionId = $.connection.hub.id;
                    }
                    catch (e) {
                    }
                    logInfo = {
                        domainId: $o.core.globalVariables.domainId,
                        tree: this.treeId,
                        room: this.room,
                        os: os,
                        signalR: signalR,
                        isOverflow: this.isOverflow,
                    };
                    $.post("Log/BotNotResponding?", {
                        logInfo: JSON.stringify(logInfo)
                    });
                }
                return [2];
            });
        });
    };
    return BotTreesResponseChecker;
}());
;
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var TreeVariablesManager = (function () {
    function TreeVariablesManager() {
        this.endPoint = $o.settings.botServer + "visitor/variables?room=" + Core.Helpers.getTokenRoom();
    }
    TreeVariablesManager.prototype.updateAsync = function (updatedVars) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, fetch(this.endPoint, {
                            headers: { 'Content-Type': 'application/json' },
                            method: "post",
                            body: decodeURIComponent(updatedVars)
                        })];
                    case 1:
                        result = _a.sent();
                        if (!result.ok) {
                            throw new Error(result.statusText);
                        }
                        return [2];
                }
            });
        });
    };
    TreeVariablesManager.prototype.getAsync = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result, _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4, fetch(this.endPoint)];
                    case 1:
                        result = _c.sent();
                        if (!result.ok) {
                            throw new Error(result.statusText);
                        }
                        _b = (_a = console).log;
                        return [4, result.json()];
                    case 2:
                        _b.apply(_a, [_c.sent()]);
                        return [2];
                }
            });
        });
    };
    TreeVariablesManager.prototype.setInitialContext = function (initialContext) {
        $o.storage.local.set("oct8ne-bot-context", JSON.stringify(initialContext));
        return this.parseInitialContext(initialContext);
    };
    TreeVariablesManager.prototype.recoverInitialContext = function () {
        var contextFromStorage = $o.storage.local.get("oct8ne-bot-context");
        if (contextFromStorage) {
            var parsedInitialContext = this.parseInitialContext(JSON.parse(contextFromStorage));
            this.updateAsync(JSON.stringify(parsedInitialContext));
            return parsedInitialContext;
        }
        return {};
    };
    TreeVariablesManager.prototype.parseInitialContext = function (initialContext) {
        var parsedContext = {};
        for (var _i = 0, _a = Object.entries(initialContext); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            try {
                parsedContext[key] = eval(value);
            }
            catch (e) {
            }
        }
        return parsedContext;
    };
    return TreeVariablesManager;
}());
var actions;
(function (actions) {
    actions["UPDATETREEVARS"] = "UPDATETREEVARS";
    actions["GETTREEVARS"] = "GETTREEVARS";
    actions["BOT_GOTO"] = "BOT_GOTO";
})(actions || (actions = {}));
;
advancedSearchViewModel = function () {
    var self = this;
    self.results = ko.observableArray([]);
    self.totalResults = ko.observable(0);
   // self.isActiveForAgent = ko.observable(false);
    self.add = function (node) {
      

        //TODO REVISAR TODO ESTO DE PRICELAYOUT
        var priceLayout = ""; 
        if (node.Price != "0.00" && (node.PrevPrice == node.Price)) {
            priceLayout = $o.carousel.searchPriceLayouts.normal;
            priceLayout = priceLayout.replace("[0]", node.Price);
        }

        if (node.Price == "0.00" || node.Price == null) {
            priceLayout = '<p>' + culture.coviewer.ViewDetails + '</p>';
        }
        else if (node.PrevPrice != "" && node.PrevPrice != node.Price) {
                priceLayout = $o.carousel.searchPriceLayouts.sale;
                priceLayout = priceLayout.replace("[1]", node.Price);
                priceLayout = priceLayout.replace("[0]", node.PrevPrice);
      
        }
          //END TODO REVISAR TODO ESTO DE PRICELAYOUT
    var result = {
            internalId: ko.observable(node.InternalId),
            thumbnail: ko.observable(node.Thumbnail),
            productURL: ko.observable(node.ProductURL),
            title: ko.observable(node.Title),
            price: ko.observable(node.Price),
            prevPrice: ko.observable(node.PrevPrice),
            stock: ko.observable(node.Stock),
            priceLayout: priceLayout
         //   currency: ko.observable($o.core.globalVariables.currencyVisitor),
         
        };
        self.results.push(result);
    };


    self.emptySearchResults = function () {
        self.results([]);
    };


    self.getProduct = function (nodeId) {
        var product = false,
            searchNode = ko.utils.arrayFirst(self.results(), function (currentNode) {
                return currentNode.internalId() == nodeId;
            });

        if (searchNode) {
            product = {
                InternalId: searchNode.internalId(),
                Thumbnail: searchNode.thumbnail(),
                Title: searchNode.title(),
                ProductUrl: searchNode.productURL()
            };
        }
        return product;
    };



};
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.fullProducts = {
        searchProduct: function (productId) {
            var productInfo = false;
            $.each($o.fullProducts.collection, function (i, prod) {
                if (prod.InternalId == productId) {
                    productInfo = prod;
                }
            });
            return productInfo;
        },

        addProductToCollection: function (product) {
            var exists = $o.fullProducts.searchProduct(product.InternalId);
            if (!exists) {
                $o.fullProducts.collection.push(product);
                $o.fullProducts.addProductsToLocalStorage(product);
            }

        },
        addProductsToLocalStorage: function () {     
            var d = new Date();           
            var products = {
                collection: $o.fullProducts.collection,
                expiresAt: d.setMinutes(d.getMinutes() + 60) //Tiempo en cache
            };
            if (!$o.utils || !$o.utils.disableProductsCaches) {
                $o.storage.local.set($o.core.localStorageTypes.PRODUCTSCOLLECTION, JSON.stringify(products));
            }
        },

        recoverProductsFromLocalStorage: function () {
            var productCollection = $o.storage.local.get($o.core.localStorageTypes.PRODUCTSCOLLECTION);
            if (productCollection) {               
                var now = new Date();
                var products = JSON.parse(productCollection);
                var expirationDate = products.expiresAt;
                if (now.getTime() < expirationDate) {                    
                    $o.fullProducts.collection = products.collection;   
                } else {    
                    $o.storage.local.set($o.core.localStorageTypes.PRODUCTSCOLLECTION, $o.core.localStorageActions.REMOVE);                                       
                }  
            }
        },
        collection: []
    };
})(window);
;
lastSearchViewModel = function () {
    var self = this;
    self.results = ko.observableArray([]);
    self.term = ko.observable("");
    self.id = ko.observable(""); //si es related
    self.totalResults = ko.observable(0);
    self.isActive = ko.observable(true);
    self.add = function (node) {
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }

        var priceLayout = "";
        if (node.Price != "0.00" && (node.PrevPrice == node.Price)) {
            priceLayout = $o.carousel.searchPriceLayouts.normal;
            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.Price);
            } else {
                priceLayout = priceLayout.replace("[0]", node.Price);
            }
        }
        if (node.Price == "0.00" || node.Price == null) {
            priceLayout = ' <p class="bold custom-search-product-price CVTxt3" style="font-size:9px">' + culture.coviewer.ViewDetails + '</p>';
        }
        else if (node.PrevPrice != "" && node.PrevPrice != node.Price) {
            priceLayout = $o.carousel.searchPriceLayouts.sale;

            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[1]", $o.core.globalVariables.currencyVisitor + node.Price);
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.PrevPrice);
            } else {
                priceLayout = priceLayout.replace("[1]", node.Price);
                priceLayout = priceLayout.replace("[0]", node.PrevPrice);
            }
        }

       var result = {
            internalId: ko.observable(node.InternalId),
            thumbnail: ko.observable(node.Thumbnail),
            productURL: ko.observable(node.ProductURL),
            title: ko.observable(node.Title),
            price: ko.observable(node.Price),
            prevPrice: ko.observable(node.PrevPrice),
            currency: ko.observable(node.Currency),
            linkText: culture.coviewer.Show + " " + node.Title,
            priceLayout: priceLayout
        };
        self.results.push(result);
    };

    self.emptySearchResults = function () {
        self.results([]);
    };

    self.copyResultsArrayToPreviousSearch = function () {
        ko.utils.arrayForEach(self.results(), function (currentNode) {
            previousSearchVM.results.push(currentNode);
        });
        self.emptySearchResults();
     //   $o.log(self.results());
       // $o.log(previousSearchVM.results());
    },

    self.getProduct = function (nodeId) {
        var product = false,
           searchNode = ko.utils.arrayFirst(self.results(), function (currentNode) {
               return currentNode.internalId() == nodeId;
           });

        if (searchNode) {
            product = {
                InternalId: searchNode.internalId(),
                Thumbnail: searchNode.thumbnail(),
                Title: searchNode.title(),
                ProductUrl: searchNode.productURL()
            };
        } else {}
        return product;
    };

    self.setActive = function () {
        self.isActive(true);
        previousSearchVM.isActive(false);
    };

    self.productPageFrame = function (data) {
     $o.agentTools.showProductPageFrame(data());
    };
};
mycartViewModel = function () {
    var self = this;
    self.nodes = ko.observableArray([]);
    self.isActive = ko.observable(false);

    //carousel lengths
    self.add = function (node) {
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == node.InternalId;
        });
        if (!searchNode) {
            $o.log(node);
            var result = {
                internalId: ko.observable(node.InternalId),
                thumbnail: ko.observable(node.Thumbnail),
                title: ko.observable(node.Title),
                list: "MYCART"
            };
            self.nodes.push(result);
        }
    };

    self.emptyList = function () {
        self.nodes([]);
    };

    self.setCarouselWidth = function () {
        var width;
        if ($o.core.globalVariables.device != "mobile") {
            var thumbnailWidth = $o.core.globalVariables.userType === "A" ? 70 : 56;
            width = (thumbnailWidth * self.nodes().length);
        } else {
            width = (50 * self.nodes().length);
        }
       
        if ($o.core.globalVariables.userType == "V") width = width + 150;
        width = width + "px";
        viewedVM.carouselsWidth(width);
        

        if ($o.core.globalVariables.device != "mobile") {
            $("#mCSB_1_container").css({ 'width': width });
        }
        $("#oct8ne-nodes").mCustomScrollbar("update");
    };

    self.deleteProduct = function (internalId) {
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == internalId;
        });
        self.nodes.remove(searchNode);
    };

    self.getProduct = function (nodeId) {
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == nodeId;
        });
        return searchNode ? searchNode : false;
    };

    self.setActiveTab = function () {
        window.mylistVM.isActive(false);
        window.viewedVM.isActive(false);
        self.isActive(true);
        
        self.setCarouselWidth();
        $o.carousel.setCurrentNodeActive($o.core.globalVariables.internalId);
        //desactivar las otras tabs
    };

    self.accessToCheckout = function () {
        if (self.nodes().length > 0) {
            if ($o.core.isSignalRConnected()) { 
                $o.hubsOut.sendVisitorCheckout($o.core.globalVariables.otherToken);
            };
            $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT);
            $o.saveRecord.checkoutB();
            parent.postMessage("GOTOCHECKOUT", "*");
        };
    };

    self.accessToCheckoutMobile = function () {
        if (self.nodes().length > 0) {
            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendVisitorCheckout();
                $("#minimize-iframe").trigger("click");
                $(".menu-down").hide();
                setTimeout(function () { parent.postMessage("GOTOCHECKOUT", "*"); }, 500);
            } else {
                parent.postMessage("GOTOCHECKOUT", "*");
                $("#minimize-iframe").trigger("click");
                $(".menu-down").hide();
            }
            $o.saveRecord.checkoutB();
        }
    };
};
mylistViewModel = function () {
    var self = this;
    self.nodes = ko.observableArray([]);
    self.isActive = ko.observable(false);
    self.isLogged = ko.observable(false);
   
    //carousel lengths
    self.add = function (node) {
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == node.InternalId;
        });
        if (!searchNode) {
            var result = {
                internalId: ko.observable(node.InternalId),
                thumbnail: ko.observable(node.Thumbnail),
                title: ko.observable(node.Title)
            };
            self.nodes.push(result);
        }
    };

    self.setCarouselWidth = function () {
        var width;
        if ($o.core.globalVariables.device != "mobile") {
            var thumbnailWidth = $o.core.globalVariables.userType === "A" ? 70 : 56;
            width = (thumbnailWidth * self.nodes().length);
        } else {
            width = (50 * self.nodes().length);
        }
       
        if ((self.isLogged() == false) && ($o.core.globalVariables.userType == "V")) width = width + 235;
        width = width + "px";
        viewedVM.carouselsWidth(width);

        if ($o.core.globalVariables.device != "mobile") {
            $("#mCSB_1_container").css({ 'width': width });
        } 
        $("#oct8ne-nodes").mCustomScrollbar("update");
    };
    
    self.getProduct = function (nodeId) {
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == nodeId;
        });
        return searchNode ? searchNode : false;
    };

    self.setActiveTab = function () {
        window.mycartVM.isActive(false);
        window.viewedVM.isActive(false);
        self.isActive(true);
        self.setCarouselWidth();
        $o.carousel.setCurrentNodeActive($o.core.globalVariables.internalId);
    };
};
previousSearchViewModel = function () {
    var self = this;
    self.results = ko.observableArray([]);
    self.term = ko.observable("");
    self.isActive = ko.observable(false);
    self.id = ko.observable("");//si es related
    self.totalResults = ko.observable(0);
    self.add = function (node) {
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }

        var priceLayout = "";
        if (node.Price != "0.00" && (node.PrevPrice == node.Price)) {
            priceLayout = $o.carousel.searchPriceLayouts.normal;
            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.Price);
            } else {
                priceLayout = priceLayout.replace("[0]", node.Price);
            }
        }
        if (node.Price == "0.00" || node.Price == null) {
            priceLayout = ' <p class="bold custom-search-product-price CVTxt3" style="font-size:9px">' + culture.coviewer.ViewDetails + '</p>';
        }
        else if (node.PrevPrice != "" && node.PrevPrice != node.Price) {
            priceLayout = $o.carousel.searchPriceLayouts.sale;
            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[1]", $o.core.globalVariables.currencyVisitor + node.Price);
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.PrevPrice);
            } else {
                priceLayout = priceLayout.replace("[1]", node.Price);
                priceLayout = priceLayout.replace("[0]", node.PrevPrice);
            }
        }

        var result = {
            internalId: ko.observable(node.InternalId),
            thumbnail: ko.observable(node.Thumbnail),
            productURL: ko.observable(node.ProductURL),
            title: ko.observable(node.Title),
            price: ko.observable(node.Price),
            prevPrice: ko.observable(node.PrevPrice),
            currency: ko.observable(node.Currency),
            linkText: culture.coviewer.Show + " " + node.Title,
            priceLayout: priceLayout
        };
        self.results.push(result);
    };

    self.emptySearchResults = function () {
        self.results([]);
    };

    self.getProduct = function (nodeId) {
        var product = false,
           searchNode = ko.utils.arrayFirst(self.results(), function (currentNode) {
            return currentNode.internalId() == nodeId;
        });

        if (searchNode) {
            product = {
                InternalId: searchNode.internalId(),
                Thumbnail: searchNode.thumbnail(),
                Title: searchNode.title(),
                ProductUrl: searchNode.productURL()
            };
        } else {

        }
        return product;
    };
    self.setActive = function () {
        self.isActive(true);
        lastSearchVM.isActive(false);
    };

    self.productPageFrame = function (data) {
        $o.agentTools.showProductPageFrame(data());
    };
};
searchViewModel = function () {
    var self = this;
    self.results = ko.observableArray([]);
    self.totalResults = ko.observable(0);
    self.isActiveForAgent = ko.observable(true);
    self.displaySearchSection = ko.observable(true);

    self.loadingDefaultCats = ko.observable(false);
    self.isEmptyGrid = ko.observable(true); //Parrilla vacia
    self.displayFilterResults = ko.observable(false);
    self.availableDefaultFilters = ko.observableArray([]);
    self.availableFilters = ko.observableArray([]);
    self.appliedFilters = ko.observableArray([]);
    self.currentFilter = ko.observableArray([]);
    self.filterAppliedsCount = ko.observable(0);

    self.multiSelectFilter = ko.pureComputed(function () {
        //SETEAMOS POR APIVERSION
        var allowMultipleSelection = $o.core.globalVariables.apiVersion == "2.5" ? true : false;
        return allowMultipleSelection;
    }, self);


    self.add = function (node) {
        
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }

        var priceLayout = "";
        if (node.Price != "0.00" && (node.PrevPrice == node.Price)) {
            priceLayout = $o.carousel.searchPriceLayouts.normal;
            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.Price);
            } else {
                priceLayout = priceLayout.replace("[0]", node.Price);
            }
        }
        if (node.Price == "0.00" || node.Price == null) {
            priceLayout = ' <p class="bold custom-search-product-price CVTxt3" style="font-size:9px">' + culture.coviewer.ViewDetails + '</p>';
        }
        else if (node.PrevPrice != "" && node.PrevPrice != node.Price) {
            priceLayout = $o.carousel.searchPriceLayouts.sale;
            if ($o.core.globalVariables.apiVersion == "2.1") {
                priceLayout = priceLayout.replace("[1]", $o.core.globalVariables.currencyVisitor + node.Price);
                priceLayout = priceLayout.replace("[0]", $o.core.globalVariables.currencyVisitor + node.PrevPrice);
            } else {
                priceLayout = priceLayout.replace("[1]", node.Price);
                priceLayout = priceLayout.replace("[0]", node.PrevPrice);
            }
        }

        var result = {
            internalId: ko.observable(node.InternalId),
            thumbnail: ko.observable(node.Thumbnail),
            productURL: ko.observable(node.ProductURL),
            title: ko.observable(node.Title),
            price: ko.observable(node.Price),
            prevPrice: ko.observable(node.PrevPrice),
            currency: ko.observable($o.core.globalVariables.currencyVisitor),
            linkText: culture.coviewer.Show + " " + node.Title,
            priceLayout: priceLayout,
            outOfStock: node.OutOfStock,
            outOfStockStyle: node.OutOfStockStyle,
            stock: ko.observable(node.Stock)
        };            

        self.results.push(result);
    };

    self.emptySearchResults = function () {
        self.results([]);
    };

    self.getProduct = function (nodeId) {
        var product = false,
            searchNode = ko.utils.arrayFirst(self.results(), function (currentNode) {
                return currentNode.internalId() == nodeId;
            });

        if (searchNode) {
            product = {
                InternalId: searchNode.internalId(),
                Thumbnail: searchNode.thumbnail(),
                Title: searchNode.title(),
                ProductUrl: searchNode.productURL()
            };
        }
        return product;
    };

    self.productPageFrame = function (data) {
        $o.agentTools.showProductPageFrame(data());
    };

    self.displayAgentSearches = function () {
        self.displaySearchSection(true);
        $o.agentInfoVisitorVM.isActive(false);
    };

    self.displayInfoVisitor = function () {
        self.displaySearchSection(false);
        $o.agentInfoVisitorVM.isActive(true);
    };

    //FILTERS MANAGEMENT

    self.showAvailableFilters = function () {

        if (self.displayFilterResults()) {
            self.displayFilterResults(false);
            return;
        }

        //Si es nuevo pluguin y NO hay busquedas..mostrar todas las CATS
        if (self.isEmptyGrid() && searchVM.filterAppliedsCount() === 0) {

            if (self.multiSelectFilter()) {
                self.showDefaultCategories();
            } else { //Si es antiguo plugin??
                self.displayFilterResults(true);
                //alert("Debes buscar primero antes de filtrar.");
            }

        } else { //Si ya tiene busqueda mostrar los filtros para esa busqueda.
            self.displayFilterResults(true);
        }

    };


    self.showDefaultCategories = function () {

        self.availableFilters([]);
        self.appliedFilters([]);
        self.loadingDefaultCats(true);

        var searchUrl = $o.platform.domain + $o.platform.prefixUrlPlatform + 'getCategories';
        var cacheType = $o.utils && $o.utils.changeCacheType ? $o.utils.changeCacheType() : true;
        if ($o.utils && $o.utils.changeUrlRequest) {
            searchUrl = $o.utils.changeUrlRequest(searchUrl);
        }
        $.ajax({
            url: $o.platform.getUrlForAjax(searchUrl),
            dataType: 'jsonp',
            method: "GET",
            cache: cacheType,
            jsonpCallback: "oct8neJSONPresponseC",
            success: function (nodes) {
                if (nodes.length) {
                    self.availableDefaultFilters(nodes);
                    self.displayFilterResults(true);
                    $(".empty-search-agent").hide();

                } else {
                    console.log("No hay nodes");
                }
                self.loadingDefaultCats(false);
            }
        });
    };


    self.pickFilter = function (id) {
        id = parseInt(id);
        self.setFilter(id, "category", true);
    };

    self.printFiltersBySearch = function (filters, isRecover) {
        self.availableDefaultFilters([]);
        self.availableFilters(filters.available);
        self.appliedFilters(filters.applied);
        self.returnFiltersApplied();
        if (isRecover) {
            self.setFiltersFromRecover(filters.applied);
        }
    };



    self.setFilter = function (value, label, applyFilter) {

        if (!self.multiSelectFilter()) {
            self.currentFilter([]);
        }

        var obj = {};
        obj[label] = [value];
        var flagAddObj = true;
        var posArray = 0;
        if (self.currentFilter().length > 0) {
            self.currentFilter().forEach(function (element) {
                if (element.hasOwnProperty(label)) {
                    if ($.inArray(value, element[label]) >= 0) {
                        var pos = element[label].indexOf(value);
                        element[label].splice(pos, 1);

                        if (element[label].length === 0) {
                            self.currentFilter().splice(posArray, 1);
                        }
                        flagAddObj = false;
                        self.currentFilter(self.currentFilter());
                        return;

                    } else {
                        element[label].push(value);
                        flagAddObj = false;
                        self.currentFilter(self.currentFilter());
                        return;
                    }
                }
                posArray++;
            });
        }
        if (flagAddObj) {
            self.currentFilter.push(obj);
        }
        if (applyFilter) {
            self.applyFilters();
        }
    };


    self.applyFilters = function () { //TODO: REVISAR CONSTRUCCION DE FILTRO

        var filterNew = "";
        self.currentFilter().forEach(function (element) {
            var currentFilter = JSON.stringify(element);
            currentFilter = currentFilter.replace(/:/g, '=').replace('[', '').replace(']', '').replace(/{/g, '').replace(/}/g, '').replace(/"/g, '');
            filterNew = filterNew + "&" + currentFilter;
        });

        $o.filters.appliedFilters = filterNew;
        $o.search.resetSearch();
        $o.search.doSearch($o.search.searchTerm, $o.filters.appliedFilters, false, "true");
        self.displayFilterResults(false);
        self.returnFiltersApplied();
    };

    self.resetFilters = function () {
        $o.filters.appliedFilters = "";
        self.currentFilter([]);
        $o.search.resetSearch();
        $o.search.doSearch($o.search.searchTerm, $o.filters.appliedFilters, false, "true");
        self.displayFilterResults(false);
        self.returnFiltersApplied();
    };

    self.resetOneFilter = function (label, value) {

        var posArray = 0;
        self.currentFilter().forEach(function (element) {
            if (element.hasOwnProperty(label)) {

                if ($.inArray(value, element[label]) >= 0) {
                    var pos = element[label].indexOf(value);
                    element[label].splice(pos, 1);

                    if (element[label].length === 0) {
                        self.currentFilter().splice(posArray, 1);
                    }
                    self.currentFilter(self.currentFilter());
                }
            }
            posArray++;
        });
        self.applyFilters();
    };


    self.setFiltersFromRecover = function (appliedFilters) {

        appliedFilters.forEach(function (element) {
            self.setFilter(element.value, element.param, false);
        });

        var filterNew = "";
        self.currentFilter().forEach(function (element) {
            var currentFilter = JSON.stringify(element);
            currentFilter = currentFilter.replace(/:/g, '=').replace('[', '').replace(']', '').replace(/{/g, '').replace(/}/g, '').replace(/"/g, '');
            filterNew = filterNew + "&" + currentFilter;
        });

        $o.filters.appliedFilters = filterNew;
        self.returnFiltersApplied();
    };


    self.returnFiltersApplied = function () {   //NECESITO UN METODO QUE RETORNE NUM FILTROS APLICADOS
        var count = 0;
        self.currentFilter().forEach(function (element) {
            for (var key in element) {
                count = count + element[key].length;
            }

        });

        self.filterAppliedsCount(count);
    };
};;
viewedViewModel = function () {
    var self = this;
    self.carouselsWidth = ko.observable("0");
    self.nodes = ko.observableArray([]);
    self.isActive = ko.observable(true);

    //carousel lengths
    self.add = function (node) {
        //Prevenir enviado de productos al cliente
        if ($o.core.globalVariables.showCoviewer == "False") {
            return;
        }
        var searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
            return currentNode.internalId() == node.InternalId;
        });
        if (!searchNode) {
            var result = {
                internalId: ko.observable(node.InternalId),
                thumbnail: ko.observable(node.Thumbnail),
                title: ko.observable(node.Title)
            };
            self.nodes.push(result);
            self.setCarouselWidth();
        }
    };

    self.setCarouselWidth = function () {
        var width;
        if ($o.core.globalVariables.device != "mobile") {
            var thumbnailWidth = $o.core.globalVariables.userType === "A" ? 70 : 56;
            width = (thumbnailWidth * self.nodes().length);
        } else {
            width = (50 * self.nodes().length);
        }

        width = width + "px";       
        self.carouselsWidth(width);

        if ($o.core.globalVariables.device != "mobile") {
            $("#mCSB_1_container").css({ 'width': width });
        }           
        $("#oct8ne-nodes").mCustomScrollbar("update");
    };

    self.getProduct = function (nodeId) {
        var product = false,
           searchNode = ko.utils.arrayFirst(self.nodes(), function (currentNode) {
               return currentNode.internalId() == nodeId;
           });
        if (searchNode) {
            product = {
                InternalId: searchNode.internalId(),
                Thumbnail: searchNode.thumbnail(),
                Title: searchNode.title()
            };
        }
        return product;
    };

    self.setActiveTab = function () {
        //desactivar las otras tabs 
        window.mycartVM.isActive(false);
        window.mylistVM.isActive(false);
        self.isActive(true);
        self.setCarouselWidth();
        $o.carousel.setCurrentNodeActive($o.core.globalVariables.internalId);
    };
};
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.canva = {
        init: function() {
            $o.canva.events();
            var image = null;
            $o.canva.holder.object = $("#oct8ne-holder");
            $o.canva.holder.left = 0;
            $o.canva.holder.top = 0;

            $o.canva.target.object = $("#oct8ne-helper img");
            $o.canva.holder.helper = $("#oct8ne-helper");

            $o.canva.holder.helper.click(function(event) {
                if ((!event.isPropagationStopped()) && ($o.drag.enablePointing) && (!$o.pencil.isDrawing)) {

                    switch ($o.tools.context) {
                    case $o.tools.type.PIN:
                        $o.pin.sendPin(event);
                        break;
                    case $o.tools.type.NOTE:
                        $o.note.createNote(event);
                        break;
                    case $o.tools.type.POINT:
                        $o.drag.sendPoint(event);
                    }
                }
                $o.drag.enablePointing = true;
            });
        },

        showAlertAddToCartInAgent: function(title, action) {
            $o.canva.showAlertAddToCartInAgentUI(title, action);

        },

        showAlertAddToMyListInAgent: function (title, whoAdd) {
            $o.canva.showAlertAddToMyListInAgentUI(title, whoAdd);
        },

        update: function(parameters, recover) {
            $o.canva.updateUI(parameters, recover);
        },

        showImageOnCanva: function(left, top, width, height, internalId) {
            $o.canva.showImageOnCanvaUI(left, top, width, height, internalId);
        },

        validatePosition: function(x, y, tool) {
            $o.canva.validatePosition(x, y, tool);
        },

        getCoords: function (event) {
            var coords = {
                absleft: parseInt(Math.abs($o.canva.holder.helper.offset().left - event.pageX)) / $o.canva.target.object.width(),
                abstop: parseInt(Math.abs($o.canva.holder.helper.offset().top - event.pageY)) / $o.canva.target.object.height()
            };
            return coords;
        },

        //se usan en app móvil nativa
        getCoviewerRelativeCoords: function (event) {
            var coords = {
                relLeft: parseInt(Math.abs($o.canva.holder.object.offset().left - event.pageX)) / $o.canva.holder.object.width(),
                relTop: parseInt(Math.abs($o.canva.holder.object.offset().top - event.pageY)) / $o.canva.holder.object.height()
            };
            return coords;
        },
        holder: { width: 0, height: 0, top: 0, left: 0, object: null, helper: null },

        target: { width: 0, height: 0, top: 0, left: 0, object: null, original: { width: 0, height: 0, top: 0, left: 0 } },

        imageFromAgent: false
        
};
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.carousel = {
        init: function () {
            $o.carousel.events();
            $o.carousel.parsePriceLayout();
        },

        parsePriceLayout: function () {
            var priceData = $.isEmptyObject($o.settings.priceLayout) ? $o.carousel.defaultPriceSettings : $o.settings.priceLayout;
            $o.carousel.createCoviewerPriceLayout(priceData.coviewerTemplate);
            $o.search.createSearchPriceLayout(priceData.searchTemplate);
        },

        //a partir de la id del producto, buscamos la info en el array de search y lo enviamos al canva
        //si callback es $o.carousel.actions.VIEWINCANVA lo muestra en canva
        sendIdToCarousel: function (internalId, list, callback) {
            var product = window.searchVM.getProduct(internalId);
            $o.carousel.addProductInfoToList(product, list);
            if (callback == $o.carousel.actions.VIEWINCANVA) {
                $o.carousel.sentProductToCanva(internalId);
            }
        },

        //a partir de la info del producto COMPLETA, lo enviamos directamente  
        //si callback es $o.carousel.actions.VIEWINCANVA lo muestra en canva
        sendProductToCarousel: function (product, list, callback, recover) {
            $o.carousel.addProductInfoToList(product, list);
            if (callback == $o.carousel.actions.VIEWINCANVA) {
                $o.fullProducts.addProductToCollection(product);
                $o.carousel.sentProductToCanva(product.InternalId, recover);
            }
        },

        //añade producto al carrusel en la lista que le indicamos
        addProductInfoToList: function (product, list, save) {
            var info = false;
            switch (list) {
                case $o.carousel.lists.VIEWED:
                case $o.carousel.lists.TBAR:
                    info = viewedVM.getProduct(product.InternalId);
                    if (!info) {
                        viewedVM.add(product);
                        if (!viewedVM.isActive()) viewedVM.setActiveTab();
                    }
                    break;
                case $o.carousel.lists.MYCART:
                    info = mycartVM.getProduct(product.InternalId);
                    if (!info) mycartVM.add(product);
                    break;
                case $o.carousel.lists.MYLIST:
                    info = mylistVM.getProduct(product.InternalId);
                    if (!info) mylistVM.add(product);
                    break;
                case "NOCA":
                    mycartVM.deleteProduct(product.InternalId);
                    break;
            }

            if (save && !info) {
                product.URLMedia = product.Thumbnail;
                $o.carousel.prepareInteraction(product, list);
            }
        },

        //guarda interaccion
        prepareInteraction: function (product, list) {

            product.ListType = list || $o.carousel.lists.VIEWED;
            product.Type = "J";
            product.Room = $o.core.globalVariables.room;
            product.SentBy = product.SentBy ? product.SentBy : $o.core.globalVariables.userType;
            product.FromAgentSearch = $o.search.productFromSearch;
            product.Id = $o.tools.generateRandomId(),

                $o.search.productFromSearch = false;

            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendNode(product);
            }

            if ((product.ListType == $o.carousel.lists.VIEWED) && (product.InternalId.indexOf("Oct8ne") == -1)) {
                $o.saveRecord.viewedItem(product.InternalId, product.Title, product.URLMedia, product.FromAgentSearch, product.Id, $o.core.globalVariables.userType);
            } else if ((product.ListType == $o.carousel.lists.VIEWED) && (product.InternalId.indexOf("Oct8neUpload") > -1)) {
                $o.saveRecord.uploadItem(product.InternalId, product.Title, product.URLMedia, product.Id);
            } else if ((product.ListType == $o.carousel.lists.VIEWED) && (product.InternalId.indexOf("Oct8neCatalog") > -1)) {
                $o.saveRecord.catalogItem(product.InternalId, product.Title, product.URLMedia, true, product.Id, $o.core.globalVariables.userType);
            } else if (product.ListType == $o.carousel.lists.MYCART) {
                $o.saveRecord.myCartItem(product.InternalId, product.Title, product.URLMedia, product.AddedTo, product.Id);
            } else if (product.ListType == $o.carousel.lists.MYLIST) {
                $o.saveRecord.myListItem(product.InternalId, product.Title, product.URLMedia, product.AddedTo, product.Id);
            }
        },

        //envia al canva
        sentProductToCanva: function (internalId, recover, imageIndex) {
            //if ($o.core.globalVariables.showCoviewer == "False") {
            //    return;
            //}
            $o.sideBubbles.hide();
            if ($o.core.userType === "V") {
                $o.carousel.sendProductToAnalytics("V");
            }
            if ($o.core.globalVariables.userType == "V") $o.visitorSearch.hideCoviewerTutorial();
            var productInfo = $o.fullProducts.searchProduct(internalId);
            
            if (!productInfo) {
                $o.carousel.loadingProduct();
                if (internalId.indexOf("Oct8neCatalog") != -1) {
                    $o.catalog.searchCatalogItem(internalId, recover);
                } else {
                    $o.platform.getFullProductInfo(internalId, "", recover);
                }
            } else {
                $o.carousel.fillCanvaInfo(productInfo, imageIndex);

                if ((imageIndex) && (imageIndex != 0)) { $o.carousel.goImageN(imageIndex + 1, "", "RECOVER"); }
                $o.carousel.setCurrentNodeActive(internalId);
                if (($o.core.globalVariables.userType == "V") && (internalId.indexOf("Oct8ne") == -1)) $o.carousel.sendNewProductToTrackingBar(productInfo);
                if (!recover) {
                    $o.carousel.prepareInteraction(productInfo, null);

                }
            }
        },

        sendNewProductToTrackingBar: function (productInfo) {
            var product = {
                id: productInfo.InternalId,
                thumbnail: productInfo.Thumbnail,
            };
            parent.postMessage("ADDPRODUCTTOLIST," + JSON.stringify(product), "*");
        },

        sendProductToAnalytics: function (side) {
            var sender = side === "A" ? "Agent" : "Visitor";
            if (viewedVM.nodes().length && $o.variablesVisitor.status === "Attending" && !$o.carousel.sentProductsToAnalytics && $o.chat.chatsInConversation > 3) {
                parent.postMessage("SENDANALYTICSEVENT,GAViewedProduct," + sender + " clicked", "*");
                $o.carousel.sentProductsToAnalytics = true;
            }
        },

        resetImage: function () {
            $o.carousel.changeImage($o.carousel.currentImage, "recover");
        },

        getProductFromUpload: function (internalId, mediaUrl, sentBy) {
            var who = sentBy == "V" ? culture.coviewer.UplaodCustomer : culture.coviewer.UploadAgent,
                media = { Id: 1, FileName: mediaUrl, Format: "IMG", Source: 1, Scope: 1, Type: "I", Token: "" },
                medias = new Array();
            medias[0] = media;
            var nodeInfo = {
                InternalId: internalId,
                Title: culture.coviewer.ItemUploaded + " " + who,
                Description: "",
                Price: "",
                Medias: medias,
                RouteTo: "",
                URLMedia: mediaUrl,
                Thumbnail: mediaUrl
            };
            return nodeInfo;
        },

        clickPrevImage: function () {
            if ($o.carousel.currentImage > 1) {
                var newIndex = --$o.carousel.currentImage;
                if ($o.carousel.carouselInterface == $o.carousel.carouselInterfaces.NUMBERS) {
                    $o.carousel.createImageNumbers();
                };
                $o.carousel.updateCarouselArrows(newIndex);
                $o.carousel.changeImage(newIndex);
            }
        },

        clickNextImage: function () {
            if ($o.carousel.currentImage < $o.carousel.images.length) {
                var newIndex = ++$o.carousel.currentImage;
                $o.carousel.updateCarouselArrows(newIndex);
                $o.carousel.changeImage(newIndex);
            }
        },

        goImageN: function (index, forceChange, recover) {
            if (($o.carousel.currentImage != index) && (!forceChange)) {
                $o.carousel.currentImage = index;
                $o.carousel.updateCarouselArrows(index);
                $o.carousel.changeImage(index, recover);
            }
        },

        updateCarouselArrows: function (newIndex) {
            $o.carousel.updateArrowsCarousel(newIndex);
        },

        changeImage: function (newIndex, recover) {

            $o.carousel.loadingImage();
            var image = $o.carousel.sendToCanva($o.carousel.images[newIndex - 1].FileName, $o.carousel.images[newIndex - 1].Id, $o.carousel.images[newIndex - 1].Type);
            image.Index = newIndex;
            if ($o.core.isSignalRConnected()) { //ENVIA SIGNALR SI CONVIENE
                $o.hubsOut.sendImage(image);
            }
            if (!recover) $o.saveRecord.image($o.carousel.currentImage, $o.carousel.images[newIndex - 1].FileName); //scope, url
        },

        add: function (node, imageIndex) {
            $o.carousel.fillCanvaInfo(node, imageIndex);
        },

        setCurrentNodeActive: function (nodeId, noUpdateScroll) {
            $o.carousel.setCurrentNodeActiveUI(nodeId, noUpdateScroll);
        },

        ////saveInteraction serveix per que al canviar de producte no envii un canvi d'imatge
        sendToCanva: function (fileName, id, type, saveInteraction) {

            var image = {
                InternalId: $o.core.globalVariables.internalId,
                URLMedia: fileName,
                RouteTo: id,
                Room: $o.core.globalVariables.room,
                SentBy: $o.core.userType,
                Type: type == "V" ? type : "I"
            };
            $o.canva.update(image, saveInteraction);
            return image;
        },

        images: {},
        infoLayoutFirstTime: false,
        currentImage: 1,
        carouselInterface: "",
        carouselInterfaces: {
            BULLETS: "BULLETS",
            NUMBERS: "NUMBERS"
        },
        actions: {
            VIEWINCANVA: "VIEWINCANVA"
        },
        lists: {
            VIEWED: "VIEWED",
            MYCART: "MYCART",
            MYLIST: "MYLIST",
            TBAR: "TBAR",
            LASTSEARCH: "LASTSEARCH",
            PREVIOUSSEARCH: "PREVIOUSSEARCH"
        },
        sentProductsToAnalytics: false,
        defaultPriceSettings: {
            "coviewerTemplate": {
                "normalPrice": {
                    "line1": {
                        "textTemplate": "[0]",
                        "inlineStyle": "line-height:43px;font-size:2em"
                    },
                    "line2": {
                        "textTemplate": "",
                        "inlineStyle": ""
                    }
                },
                "salePrice": {
                    "line1": {
                        "textTemplate": "[0]",
                        "inlineStyle": "font-size:1.33em; text-decoration:line-through;"
                    },
                    "line2": {
                        "textTemplate": "[1]",
                        "inlineStyle": "font-size:1.33em ;line-height: 20px;"
                    },
                    "saleIcon": true
                }
            },
            "searchTemplate": {
                "normalPrice": {
                    "line1": {
                        "textTemplate": "[0]",
                        "inlineStyle": "font-size:11px; font-weight:700"
                    },
                    "line2": {
                        "textTemplate": "",
                        "inlineStyle": ""
                    }
                },
                "salePrice": {
                    "line1": {
                        "textTemplate": "[1]",
                        "inlineStyle": "font-size:12px,font-weight:700"
                    },
                    "line2": {
                        "textTemplate": "[0]",
                        "inlineStyle": "font-size:10px ; text-decoration:line-through;font-style:italic"
                    }
                }
            }
        },
        searchPriceLayouts: {
            normal: "",
            sale: ""
        }
    };
})(window);


;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.catalog = {
        searchCatalogItem: function (id, recover) {
            var ids = [id];
            var catalogServer = $o.core.userType === "V" ? $o.settings.catalogServer : $o.core.globalVariables.catalogServer;
            
            $.ajax({
                type: "POST",
                url: catalogServer + "Resources/GetCatalogItem",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ "InternalId": id, "License": $o.settings.license }),
                dataType: "json",
                success: function (result) {
                    var catalogNode = {
                        InternalId: result.InternalId,
                        Title: result.Title,
                        Description: result.Description,
                        Thumbnail: result.Thumbnail,
                        URLMedia: result.Thumbnail,
                        Medias: result.Medias,
                        PrevPrice: result.Price,
                        Price: result.Price,
                        BuyURL: "",
                        HasOptions: false,
                        RouteTo: result.ProductUrl
                    };

                    $o.fullProducts.addProductToCollection(catalogNode);
                    $o.carousel.sentProductToCanva(id, recover);
                }
            });


        },
        getProductsByUrls: function (listUrls) {

            if ($o.utils && $o.utils.addDomainInUrlProducts) {
                listUrls = $o.utils.addDomainInUrlProducts(listUrls);
            }

            if ($o.settings.allowTrackingProductsLite && listUrls) {
                var tokenVisitor = $o.core.userType == "V"
                    ? $o.core.globalVariables.myToken
                    : $o.core.globalVariables.visitorToken;

                $.get($o.settings.catalogServer + "Tracking/Products",
                    { "license": $o.settings.license, "stringUrls": JSON.stringify(listUrls) },
                    function (result) {
                        $.each(result,
                            function (i) {
                                var catalogNode = {
                                    InternalId: result[i].InternalId,
                                    Title: result[i].Title,
                                    Description: result[i].Description,
                                    Thumbnail: result[i].Thumbnail,
                                    URLMedia: result[i].Thumbnail,
                                    Medias: result[i].Medias,
                                    PrevPrice: result[i].Price,
                                    Price: result[i].Price,
                                    BuyURL: "",
                                    HasOptions: false,
                                    RouteTo: result[i].ProductUrl
                                };

                                $o.carousel.addProductInfoToList(catalogNode, $o.carousel.lists.VIEWED);
                                $o.fullProducts.addProductToCollection(catalogNode);
                                //$o.carousel.sendProductToCarousel(catalogNode.InternalId, $o.carousel.lists.VIEWED, $o.carousel.actions.VIEWINCANVA);
                                $o.carousel.sentProductToCanva(catalogNode.InternalId, null, 0);
                            });


                    });


            }

        }
    };
})(window);
;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.core = {
        init: function () {
            $o.core.getHiddenInputs();
            $o.initializeSentry();
            $o.core.globalVariables.timeOffset = $o.core.getTimeOffset();

            //if ($o.core.globalVariables.baseUrl.indexOf("testwebicp.es/urban") !== -1 || $o.core.globalVariables.baseUrl.indexOf("urbandecay.es") !== -1) { //IF para URBANDECAY
            //    $o.core.globalVariables.platform = "prestashop";
            //    $o.core.globalVariables.clientUtils = "NULL";
            //}

            if ($o.core.globalVariables.baseUrl.indexOf("drim.pt") !== -1) { //IF para DRIM PT
                $o.core.globalVariables.platform = "vtex";
            }

            if ($o.core.globalVariables.baseUrl.indexOf("musimundo") !== -1) { //IF para MUSIMUNDO
                $o.core.globalVariables.platform = "musimundo";
            }

            $o.core.checkAdapterAndUtils();
        },

        checkAdapterAndUtils: function () {
            //primero comprobamos si hay que cargar archivo de plataforma
            //si hay que crear nuevos, se llamaran igual que $o.core.globalVariables.platform (p.ej. shopify.js)
            if ($o.core.mustLoadPlatformUtils()) {
                $o.core.loadUtilsFile($o.core.utilsTypes.PLATFORM);
            } else {
                //despues si hay que cargar archivo de cliente
                if ($o.core.mustLoadClientUtils()) {
                    $o.core.loadUtilsFile($o.core.utilsTypes.CLIENT);
                } else {
                    //al final miramos si hay que cargar el adapter
                    if ($o.core.globalVariables.platform !== "NONE" && $o.core.globalVariables.edition > 0) {
                        $o.core.loadAdapter();
                    } else {
                        $o.core.postMessageListenerWhenNoAdapter();
                        $o.core.loadFunctions();
                    }
                }
            }
        },

        loadFunctions: function () {
            $o.core.userType = $o.core.globalVariables.userType;
            var enterType = $o.core.globalVariables.enterType;
            $o.canva.holder.object = $("#oct8ne-holder");

            //INICIAMOS INTERACCIONES
            var userData = {
                device: Core.Helpers.isDevice(),
                type: Core.Helpers.getUserType()
            };

            Interactions.init(userData);

            //construimos los viewModels de KO
            window.searchVM = new searchViewModel();
            window.viewedVM = new viewedViewModel();
            window.mycartVM = new mycartViewModel();
            window.mylistVM = new mylistViewModel();
            window.conferenceVM = null;

            $o.core.youtubeViewModel = new YouTubeViewer("youtubevideoplayer"); // TODO: Pensar en cargarlo mas tarde??!

            $o.core.viewModel = {
                youtube: $o.core.youtubeViewModel,
                search: window.searchVM,
                viewed: window.viewedVM,
                mycart: window.mycartVM,
                mylist: window.mylistVM
            };

            if ($o.core.userType === "V") {
                $o.visitorSearch.init();
                if ($o.core.globalVariables.conferenceProvider && window.location.href.indexOf("https") === 0) {
                    $o.visitorStart.checkVisitorCapabilities();
                } else {
                    $o.visitorStart.doStart(enterType);
                }
            } else {
                if ($o.core.globalVariables.supervisorMode != "false" && $o.core.globalVariables.supervisorMode != "undefined" && $o.core.globalVariables.supervisorMode !== "") {
                    $o.supervisorMode.init($o.supervisorMode.roles.SUPERVISOR);
                }
                $o.core.agentsConnected = true;
                $o.agentSearch.init();
                if ($o.core.globalVariables.translatorLicense.length) $o.translateAgent.init();

                //recupera interacciones del visitor
                $o.recoverRecords.getRecords($o.core.globalVariables.visitorToken, $o.core.globalVariables.tokenSession);
                window.agentCatalogVM = new agentCatalogViewModel();
                $o.agentInfoVisitorVM = new $o.agentInfoVisitorViewModel();
                ko.applyBindings($o.core.viewModel); //No hace falta aplicar los bindings si desde la vista hacemos un data-bind = 'with: xxxxxxxxVM'

                $o.agentTools.getCommonPhrases();
                $o.hubsOut.newViewerCreated($o.core.globalVariables.otherToken);
                $(".oct8ne-nodes").removeAttr("style");
                $o.fullProducts.recoverProductsFromLocalStorage();
            }
            $("#oct8ne-chat-room").css("visibility", "visible");
        },
        //CONDICIONES PARA CARGAR O NO ARCHIVO DE PLATFORM
        mustLoadPlatformUtils: function () {
            var response = ($o.core.globalVariables.platform === "prestashop" || $o.core.globalVariables.platform === "wordpress" || $o.core.globalVariables.platform === "vtex" || $o.core.globalVariables.platform === "shopify" || $o.core.globalVariables.platform === "vtexio") && !$o.core.platformUtilsLoaded ? true : false;
            return response;
        },
        //CONDICIONES PARA CARGAR O NO ARCHIVO DE CLIENTE
        mustLoadClientUtils: function () {
            var response = ($o.core.globalVariables.clientUtils.length && $o.core.globalVariables.clientUtils !== "NULL" && $o.core.globalVariables.clientUtils !== "undefined") && (!$o.core.clientUtilsLoaded) ? true : false;
            return response;
        },

        loadUtilsFile: function (type) {
            var urlFile;
            if (type === $o.core.utilsTypes.PLATFORM) {
                urlFile = "api/source/js/utils/platforms/" + $o.core.globalVariables.platform.toLowerCase() + ".js?";
            } else if (type === $o.core.utilsTypes.CLIENT) {
                urlFile = "api/source/js/utils/clients/" + $o.core.globalVariables.clientUtils + ".js?";
            }
            $.ajax({
                type: "GET",
                url: $o.core.globalVariables.cdnUrl + urlFile + $o.core.getDateForCaching(),
                success: function () {
                    if (type === $o.core.utilsTypes.PLATFORM) {
                        $o.core.platformUtilsLoaded = true;
                    } else if (type === $o.core.utilsTypes.CLIENT) {
                        $o.core.clientUtilsLoaded = true;
                    }
                    // oct8ne.log("Utils "+ type + " CARGADO");
                    $o.core.checkAdapterAndUtils();
                },
                error: function () {
                    $o.core.errorHandler($o.core.typeHandleError.UTILS);
                },

                dataType: "script",
                cache: true
            });
        },

        loadAdapter: function () {
            var platformFileUrl;
            var adapterType = null;
            var cmsUrl = "api/source/js/cms/";

            if ($o.core.globalVariables.edition < $o.core.editions.PRO) { //GET LITE ADAPTER
                adapterType = $o.core.adapters.LITE;

                if ($o.core.globalVariables.apiVersion == "2.4" || $o.core.globalVariables.apiVersion == "2.5") {
                    $o.core.globalVariables.apiVersion = "2.3";
                }

                platformFileUrl = cmsUrl + "lite/adapter-lite-" + $o.core.globalVariables.apiVersion + ".min.js?";
            } else { //GET PRO ADAPTER
                adapterType = $o.core.adapters.PRO;

                if ($o.core.globalVariables.apiVersion == "2.5") {
                    platformFileUrl = cmsUrl + "pro/adapter-" + "2.4.js?" //+ ".min.js?";
                } else {
                    platformFileUrl = cmsUrl + "pro/adapter-" + $o.core.globalVariables.apiVersion + ".min.js?";
                }
            }

            if ($o.core.globalVariables.baseUrl.indexOf("idherma") > -1) {
                platformFileUrl = "api/source/js/utils/clients/idherma.js?";
            }

            $.ajax({
                type: "GET",
                url: $o.core.globalVariables.cdnUrl + platformFileUrl + $o.core.getDateForCaching(),
                success: function () {
                    //  oct8ne.log("Adapter CARGADO: " + platformFileUrl);
                    $o.core.adapterLoaded = adapterType;

                    $o.platform.init();
                    $o.core.loadFunctions();
                },
                error: function () {
                    $o.core.errorHandler($o.core.typeHandleError.ADAPTER);
                },

                dataType: "script",
                cache: true
            });
        },

        errorHandler: function (type) {
            if (type === $o.core.typeHandleError.UTILS) {
                ++$o.core.getClientFileRetries;
                if ($o.core.getClientFileRetries < $o.core.getFilesMaxRetries) {
                    $o.core.checkAdapterAndUtils();
                }
                else { //Cargamos las funciones para que no den error y mostramos cartel de error.
                    $o.core.platformUtilsLoaded = true;
                    $o.core.clientUtilsLoaded = true;
                    $o.core.checkAdapterAndUtils();
                    $o.core.displayErrorInViewer(type);
                }
            } else { //Es adapter
                ++$o.core.getAdapterFileRetries;
                if ($o.core.getAdapterFileRetries < $o.core.getFilesMaxRetries) {
                    $o.core.checkAdapterAndUtils();
                }
                else {//Cargamos las funciones para que no den error y mostramos cartel de error.
                    $o.recoverRecords.startingRecoverViewer = false;
                    $o.core.loadFunctions();
                    $o.core.displayErrorInViewer(type);
                }
            };
        },

        displayErrorInViewer: function (type) {
            var message = 'Error ' + type + ': not loaded correctly --- Domain:' + $o.core.globalVariables.baseUrl + '--- UserType:' + $o.core.globalVariables.userType;
            //(new Image()).src = '/JSError?message=' + message + '&url=none&line=00&column=00';
            var info = '<p>Error ' + type + ': not loaded correctly</p>';
            $(".error-type").append(info);
            $("#server-overload").show();
        },

        postMessageListenerWhenNoAdapter: function () {
            function messageFromPlatform(message) {
                var info = message.data.split(","),
                    action = info[0];
                if (action === "RESIZETOCHAT") {
                    if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.SEARCH || $o.iframes.currentIframeStatus == $o.iframes.iframeStatus.VIEWER || $o.iframes.currentIframeStatus == $o.iframes.iframeStatus.MINIMIZED) {
                        $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT, "", "clickOnPage");
                        $("#all-wrapper").show();
                        // $("#coviewer-minimized-no-agent,#coviewer-minimized").hide();
                    }
                }
                if (action == "MINIMIZEORCLOSEMOBILE") {
                    $("#close-iframe-visitor").trigger("click");
                }
                if (action === "HIDESUBMENU") {
                    if ($(".chat-menu-options").is(":visible")) $(".chat-menu-options").hide();
                }
                if (action === "RETURNPARAMETERS") {
                    var data = message.data.split("RETURNPARAMETERS,");
                    $o.visitorStart.getVisitorStartData(JSON.parse(data[1]));
                }
                if (action === "MAXIMIZEMOBILERESKYT") {
                    $("#minimized-widget").trigger("click");
                }
                if (action === "RESIZEFROMAPI") {
                    if ($o.core.globalVariables.device === "desktop") {
                        $o.iframes.changeStatusIframe(info[1]);
                    } else {
                        $("#minimized-widget").trigger("click");
                        if (info[1] == "CHAT") {
                            $("#mobile-menu .icon-common-chat-mobile").trigger("click");
                        } else if (info[1] == "SEARCH") {
                            $("#mobile-menu .icon-common-eye-mobile").trigger("click");
                        };
                    }
                }
                if (action === "SENDCHATTOIFRAME") {
                    $o.canned.sendCanned($o.canned.type.TRIGGER, decodeURIComponent(info[1]));
                }
                if (action === "VIDEOINITFROMEMBED") {
                    $o.visitorStart.videoInitFromEmbed();
                }
                if (action === "HIDEMEBYNEWTAB") {
                    $o.visitorStart.hideMeByNewTab();
                }
            };

            if (window.addEventListener) addEventListener("message", messageFromPlatform, false);
            else attachEvent("onmessage", messageFromPlatform);
        },

        getHiddenInputs: function () {
            var userType = $("#user-type").val();
            var getCurrencySide = userType === "V" ? $("#base-url").val() : $("#url-domain").val();

            $o.core.globalVariables = {
                //VARIABLES
                /*AGENTE*/
                mySkype: $("#my-skype").val(),
                myPhone: $("#my-phone").val(),
                urlDomain: $("#url-domain").val(),
                baseUrl: $("#base-url").val(),
                tokenSession: $("#token-session").val(),
                visitorToken: $("#token-visitor").val(),

                myToken: $("#my-token").val(),
                showCoviewer: $("#show-coviewer").val(),
                allowPreviousChat: $("#allow-previous-chat").val(),
                agentLanguage: $("#agent-language").val(),
                forceTags: $("#force-tags").val() === "true" ? true : false,
                visitorEmail: $("#visitor-email").val(),

                /*VISITANTE*/
                myShopId: $("#my-shop-id").val(),
                enterType: $("#enter-type").val(),
                recoverSession: $("#token-session").val(),
                loginUrl: $("#login-url").val(),
                device: $("#device").val(),
                apiVersion: $("#api-version").val(),
                cartRedirecionForced: $("#cart-redirection-forced").val(),
                enabledDepartments: $("#enabled-departments").val(),
                chromeExtensionId: $("#chrome-ss-extension-id").val(),
                isTypingWithText: $("#is-typing-text").val(),
                finishedVisitorStart: false,
                startedBotOffline: false,


                /*COMUN*/
                platform: $("#platform").val(),
                myName: $("#my-name").val(),
                myEmail: $("#my-email").val(),
                otherName: $("#other-name").val(),
                userType: userType,
                urlMedia: $("#url-media").val(),
                internalId: $("#internal-id").val(),
                protocolHttp: $("#protocol-http").val(),
                currencyVisitor: getCurrencySide.indexOf("berakamall") > -1 ? "₦" : $("#currency-visitor").val() ? $("#currency-visitor").val() : "$",
                locale: $("#locale").val(),
                visitorProtocolPage: $("#visitor-protocol-page").val(),
                //pluginVersion: $("#plugin-version").val(),
                agentsConnected: $("#agents-connected").val(),
                edition: parseInt($("#edition").val()),
                showSearch: $("#show-search").val(),
                conferenceProvider: $("#conference-provider").val(),
                translatorLicense: $("#translator-license").val(),
                catalogServer: $("#catalog-server").val(),
                clientUtils: $("#client-utils").val(),
                cdnUrl: $("#cdn-url").val(),
                uploadUrl: $("#upload-url").val(),
                //chequeamos si el Id del agente es valido (integer)
                inviteLinkAssignedAgent: $o.core.isNormalInteger($("#invite-link-assigned-agent").val()) ? parseInt($("#invite-link-assigned-agent").val()) : null,
                inviteLinkExclusiveAgent: $("#invite-link-exclusive-agent").val() === "True" ? true : false,
                visitorsOverflow: $("#visitors-overflow").val() === "True" ? true : false,
                sessionSummaryId: $("#session-summary-id").val(),
                supervisorMode: $("#supervisor-mode").val(),
                domainId: $("#domain-id").val(),
                sessionFinalized: false,
                room: userType === "V" ? $("#token-room").val() : $("#other-token").val(),
                roomForLastOperations: userType === "V" ? $("#token-room").val() : $("#other-token").val(), //Room para usar en caso de finalización de sessión en bot y alguien quiere rellenar el formulario ContactUs, la variable room está borrada por finalizar la session
                serverZone: $("#environment").val(),
                oct8neVersion: $("#oct8ne-version-number").val()
            }
            //console.log($("#visitors-overflow").val());
            //console.log("visitorsOverflow: " + $o.core.globalVariables.visitorsOverflow);
            //$("#hiddens-model").remove();
        },

        placeHolderIE: function () {
            $('[placeholder]').focus(function () {
                var input = $(this);
                if (input.val() === input.attr('placeholder')) {
                    input.val('');
                    input.removeClass('placeholder');
                }
            }).blur(function () {
                var input = $(this);
                if (input.val() === '' || input.val() === input.attr('placeholder')) {
                    input.addClass('placeholder');
                    input.val(input.attr('placeholder'));
                }
            }).blur().parents('form').submit(function () {
                $(this).find('[placeholder]').each(function () {
                    var input = $(this);
                    if (input.val() === input.attr('placeholder')) {
                        input.val('');
                    }
                });
            });
        },

        centerImage: function (img, maxWidth, maxHeight) {
            maxHeight = maxHeight || maxWidth;
            var result, margin;

            if (img.naturalWidth > $o.core.maxImageSize || img.naturalHeight > $o.core.maxImageSize) { img.src = 'api/img/core/no-thumb-resources.png' };

            img.removeAttribute('style');
            if (img.naturalWidth > img.naturalHeight) {
                img.style.width = maxWidth + "px";
                img.style.height = "auto";
            } else if (img.naturalWidth < img.naturalHeight) {
                img.style.height = maxHeight + "px";
                result = (img.naturalWidth * maxHeight / img.naturalHeight);
                margin = (result - maxWidth) / 2;
                img.style.marginLeft = -margin + ("px");
            } else {
                img.style.width = maxWidth + "px";
                result = (img.naturalHeight * maxWidth / img.naturalWidth);
                margin = (result - maxHeight) / 2;
                img.style.marginTop = -margin + ("px");
            }
        },

        getDateForCaching: function () {
            //4 horas: 14400000
            var dateCache = (Math.round(new Date().getTime() / 14400000));
            return dateCache;
        },

        isNormalInteger: function (str) {
            var n = Math.floor(Number(str));
            return String(n) === str && n >= 0;
        },

        isSignalRConnected: function () {
            //descomentar esta linea para ver la funcion que esta petando al enviar a signalr
            //console.log(arguments.callee.caller.toString());
            var connection = ($o.core.globalVariables.userType === "V" && $.connection.hub.state !== $.signalR.connectionState.disconnected) || $o.core.globalVariables.userType === "A";
            //console.log("connection es:" + connection);
            if ($o.core.agentsConnected && connection) {
                //console.log("Conectado, enviamos");
                return true;
            } else {
                //console.log("NO Conectado");
                return false;
            }
            //return $o.core.agentsConnected && $.connection.hub.state != $.signalR.connectionState.disconnected ? true : false;
        },

        visitorIsGone: function () {
            $o.core.globalVariables.isGone = true;
            $(".header-coviewer").addClass("title-visitor-is-gone");
            $("#visitor-is-gone-title").show();
            $("#title-page").hide();
            $("#tools-agent ul").addClass("viewer-visitor-is-gone");
            $("#common-phrases").addClass("viewer-visitor-is-gone");
            $(".chat-send").addClass("viewer-visitor-is-gone");
            $("#coviewer-wrapper").addClass("viewer-visitor-is-gone");
            $("#display-agent-searches").addClass("viewer-visitor-is-gone");
            $("#searches-section .header-content").addClass("viewer-visitor-is-gone");
            $("#agent-results, #search-panel, .search-selection").addClass("viewer-visitor-is-gone");
            $("#chat-tool").trigger("click");
            $(".info-visitor-orders").remove();
            $("#display-info-visitor").trigger("click");
        },

        getTimeOffset: function () {
            return new Date().getTimezoneOffset();
        },

        agentsConnected: "",
        userType: "",
        platform: "",
        enterType: {
            SEARCHCATALOG: "SEARCHCATALOG",
            REOPEN: "REOPEN",
            CHECKOUT: "CHECKOUT",
            RECOVERSESSION: "RECOVERSESSION",
            TALKEXPERT: "TALKEXPERT",
            TALKEXPERTBAR: "TALKEXPERTBAR",
            REOPENFROMLOGIN: "REOPENFROMLOGIN",
            LOGINPAGE: "LOGINPAGE",
            LIVECHAT: "LIVECHAT",
            SCHEDULE: "SCHEDULE",
            PINCODE: "PINCODE",
            SEARCHBOX: "SEARCHBOX",
            TRACKINGBAR: "TRACKINGBAR",
            PRODUCTPAGE: "PRODUCTPAGE",
            AUTOOPEN: "AUTOOPEN",
            TRIGGER: "TRIGGER",
            VIPAREA: "VIPAREA",
            POPUP: "POPUP",
            TREEPREVIEW: "TREEPREVIEW"
        },
        conferenceVars: {
            STARTING: "STARTING",
            END: "END",
            ACCEPT: "ACCEPT",
            ENDED: "ENDED", //INTERACCION DE LOS EVENTOS END
            STARTED: "STARTED", //INTERACCION DE LOS EVENTOS START
            SCREENSHARED: "SCREENSHARED",
            STARTINGCAM: "STARTINGCAM",
            ENDCAM: "ENDCAM"
        },
        hasBeenWaiting: false,
        youtubeViewModel: null,
        editions: {
            FREE: 0,
            LITE: 1,
            PRO: 2,
            ENTERPRISE: 3
        },
        adapters: {
            ANY: 0,
            CATALOG: 1,
            LITE: 2,
            PRO: 3
        },
        adapterLoaded: "",
        clientUtilsLoaded: false,
        platformUtilsChecked: false,
        utilsTypes: {
            PLATFORM: "PLATFORM",
            CLIENT: "CLIENT"
        },
        typeHandleError: {
            ADAPTER: "ADAPTER",
            UTILS: "UTILS"
        },
        maxImageSize: 8000,
        getClientFileRetries: 0,
        getAdapterFileRetries: 0,
        getFilesMaxRetries: 3,
        localStorageTypes: {
            INACTIVITYAGENT: "oct8ne-inactivity-agent",
            INACTIVITYVISITOR: "oct8ne-inactivity-visitor",
            SEARCHCACHE: "oct8ne-search-cache",
            PRODUCTSCOLLECTION: "oct8ne-products-collection",
            PENDINGLIST: "oct8ne-pending-list",
            JUSTLOOKINGBUTTON: "oct8ne-just-looking-button",
            JUSTLOOKINGOPTION: "oct8ne-just-looking-option",
            SOUND: "oct8ne-sound",
            CALL: "oct8ne-call",
            OTCURRENTSESSION: "ot-current-session",
            OTCURRENTTOKEN: "ot-current-token",
            HIDENEWTUTORIAL: "oct8ne-hide-tutorial",
            LASTDISPLAY: "oct8ne-last-display",
            COVIEWERZOOM: 'oct8ne-coviewer-zoom-size-key',
            AGENTCOVIEWERESPONSIVE: 'oct8ne-coviewer-responsive',
            AGENTCOVIEWERESPONSIVEEXPANDEDCHAT: 'oct8ne-coviewer-responsive-expanded-chat',
            COVIEWERFONTSIZE: 'oct8ne-coviewer-font-size-key',
            AGENTSEARCHRESULTSTYPELIST: 'oct8ne-agent-search-type-list'
        },
        localStorageActions: {
            REMOVE: "REMOVELOCALSTORAGEVALUE"
        }
    };

    oct8ne.log = function (info, type) {
        if (oct8ne.enableLog) console[type || "log"](info);
    };
    oct8ne.enableLog = (document.cookie.indexOf('oct8ne-log') > -1) ? true : false;

    oct8ne.initializeSentry = function () {
        // Load sentry        
        var environment = $o.core.globalVariables.serverZone;
        if (environment === "Local" || $o.core.globalVariables.userType === "V") { return; }

        var script = document.createElement('script');
        script.src = 'https://browser.sentry-cdn.com/6.15.0/bundle.min.js';
        script.integrity = "sha384-uAr9Te+rNkmpaCjPTu4/ipQDpO1nR6fEY8JX+NHVNO5mY6LUs362JWJD8rHyaLEt";
        script.crossOrigin = "anonymous";
        document.head.append(script);

        script.onload = function () {
            var environment = $o.core.globalVariables.serverZone;
            var version = $o.core.globalVariables.oct8neVersion;
            var release = "oct8ne-visor@" + version;
            Sentry.init({
                dsn: "https://30a23526c3194cce928ac922dd06e8fb@o1075899.ingest.sentry.io/6078940",
                tracesSampleRate: 0.5,
                environment: environment,
                release: release,
            });

            var domainId = $o.core.globalVariables.domainId;
            var urlDomain = $o.core.globalVariables.baseUrl;
            var shortDomainName = typeof urlDomain === 'string' && urlDomain !== '' ? urlDomain.substring(0, 50) : 'unknown';
            var domainName = shortDomainName + '-' + domainId;
            var sessionId = 'DM' + domainId + '-DA' + Date.now();

            var side = $o.core.globalVariables.userType == "V" ? "Visitor" : "Agent";

            Sentry.setTag('domainId', domainId);
            Sentry.setTag('sessionId', sessionId);
            Sentry.setTag('domainName', domainName);
            Sentry.setTag('side', side);

            window.oct8neVisorSentry = { release, environment, domainId, domainName, sessionId, side };

            console.log('Sentry initialized', window.oct8neVisorSentry);
        };

        script.onerror = function (e) {
            console.error('Sentry script could not be loaded', e);
        };
    };

})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.drag = {
        init: function () {
            $o.drag.events();
        },

        sendPoint: function (event) {
            ++$o.drag.pointId;
            var coords = $o.canva.getCoords(event),
                coviewerRelativeCoords = $o.canva.getCoviewerRelativeCoords(event),
                point = {
                    MarkId: $o.drag.pointId + $o.core.userType,
                    Coords: {
                        PosX: coords.absleft,
                        PosY: coords.abstop
                    },
                   
                    InternalId: $o.core.globalVariables.internalId,
                    URLMedia: $o.core.globalVariables.urlMedia,
                    Room: $o.core.globalVariables.room,
                    SentBy: $o.core.userType,
                    Type: "O",


                    //Propiedades para app móvil
                    CoordsCoviewer: {
                        PosX: coviewerRelativeCoords.relLeft,
                        PosY: coviewerRelativeCoords.relTop
                    },
                    CoordsImage: {
                        PosX: parseFloat($o.canva.holder.helper.css("left")),
                        PosY: parseFloat($o.canva.holder.helper.css("top"))
                    },
                    ProductInternalID: $o.core.globalVariables.internalId,
                    ImageUrl: $o.core.globalVariables.urlMedia,
                    ZoomLevel: $o.zoom.level,
                    SizeImage: {
                        Width: $o.canva.holder.helper.width(),
                        Height: $o.canva.holder.helper.height()
                    },
                    SizeCoviewer: {
                        Width: $("#oct8ne-holder").width(),
                        Height: $("#oct8ne-holder").height()
                    }
                };

            $o.drag.addPoint(point);

            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendPoint(point);
            }
        },

        addPoint: function (parameters, recover) {
            $o.drag.addPointUI(parameters, recover);
        },

        changeDrag: function (parameters, recover) {
            if ($o.core.isSignalRConnected() && !recover) $o.hubsOut.addInteraction(parameters);
            var absPosition = {
                top: parameters.Coords.PosY,
                left: parameters.Coords.PosX
            };

            if ($o.drag.parametersHaveProportionalCoords(parameters)) {
                absPosition = $o.drag.calculateAbsolutePosition(parameters.CoordsProportionals);
            }

            $o.canva.target.top = absPosition.top;
            $o.canva.target.left = absPosition.left;


            $o.canva.holder.helper.animate({ left: absPosition.left, top: absPosition.top }, 300);
        },

        parametersHaveProportionalCoords: function (params) {
            if (params.hasOwnProperty("CoordsProportionals") &&
                params.CoordsProportionals != null &&
                params.CoordsProportionals.hasOwnProperty("PosX") &&
                params.CoordsProportionals.hasOwnProperty("PosY")) {
                return true;
            } else {
                return false;
            }
        },

        calculateAbsolutePosition: function (relativeCoords) {
            //Valor entre 0 y 1
            //Respecto al tamaño de la imagen activa del visor
            var image = {
                width: $o.canva.holder.helper.width(),
                height: $o.canva.holder.helper.height()
            };

            var maxInset = {
                left: $o.canva.holder.object.width() - image.width,
                top: $o.canva.holder.object.height() - image.height
            };
            var absoluteCoords = {
                left: maxInset.left * relativeCoords.PosX,
                top: maxInset.top * relativeCoords.PosY
            };
            return absoluteCoords;
        },

        object: null,
        pointId: 0,
        enablePointing: true
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.filters = { //DEPRECATED
        init: function () {
           
            $o.filters.events();
        },

       // createFilters: function (data, idCapa) {
      //     console.log("createFilters");
       //     searchVM.printFiltersBySearch();
            //var availableFilters;
            //if ($o.core.userType == "V") {
            //    availableFilters = $o.filters.createFiltersVisitor(data);
            //}
            //    //else if ($o.core.userType == "A" && idCapa == "filters-panel-visitor-searches") {
            //    //    availableFilters = $o.filters.createFiltersAgentWithIdVisitor(data);
            //    //}
            //else {

            //    availableFilters = $o.filters.createFiltersAgent(data);
               
            //}

            //$o.filters.printFilters(data, idCapa, availableFilters);

      //  },

        appliedFilters: ""
        //appliedFiltersAgentSearch: "",
        //appliedFiltersVisitorLastSearch: ""


    };
})(window);;
var Core;
(function (Core) {
    var Helpers = (function () {
        function Helpers() {
        }
        Helpers.isDevice = function () {
            if ($o.core.globalVariables.device === "mobile") {
                return true;
            }
            else {
                return false;
            }
        };
        ;
        Helpers.getTokenRoom = function () {
            return $o.core.globalVariables.room;
        };
        ;
        Helpers.getSessionSummaryId = function () {
            if (Core.Helpers.getUserType() === UserTypes.Agent) {
                return $o.core.globalVariables.sessionSummaryId;
            }
            else {
                return $o.variablesVisitor.sessionSummaryId;
            }
        };
        ;
        Helpers.getUserType = function () {
            if ($o.core.globalVariables.userType === UserTypes.Agent) {
                return "A";
            }
            else {
                return "V";
            }
        };
        Helpers.generateId = function () {
            return $o.tools.generateRandomId();
        };
        Helpers.getTime = function () {
            return $o.speak.getMessageTime();
        };
        Helpers.getMyName = function () {
            return $o.core.globalVariables.myName;
        };
        Helpers.getCurrentInternalId = function () {
            return $o.core.globalVariables.internalId;
        };
        Helpers.getCurrentImageUrl = function () {
            return $o.core.globalVariables.urlMedia;
        };
        Helpers.isRealTimeConnected = function () {
            var connection = ($o.core.globalVariables.userType === "V" && $.connection.hub.state !== $.signalR.connectionState.disconnected) || $o.core.globalVariables.userType === "A";
            if ($o.core.agentsConnected && connection) {
                return true;
            }
            else {
                return false;
            }
        };
        return Helpers;
    }());
    Core.Helpers = Helpers;
    ;
    var UserTypes;
    (function (UserTypes) {
        UserTypes["Visitor"] = "V";
        UserTypes["Agent"] = "A";
    })(UserTypes = Core.UserTypes || (Core.UserTypes = {}));
})(Core || (Core = {}));
;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.note = {

        init: function () {
            //$o.note.object = $("#note-tool");
            //$o.note.events();
        },

        //createNote: function (event) {
        //    ++$o.note.noteId;
        //    var coords = $o.canva.getCoords(event);
        //    $o.note.currentNoteInfo = {
        //        MarkId: $o.note.noteId + $o.core.userType,
        //        Body: "",
        //        Coords: {
        //            PosX: coords.absleft,
        //            PosY: coords.abstop
        //        },
        //        Tokens: {
        //      Sender: $o.core.globalVariables.userType == "V"?$o.core.globalVariables.myRoom:$o.core.globalVariables.myToken,
        //            Receiver: $o.core.globalVariables.otherToken,
        //        },
        //        InternalId: $o.core.globalVariables.internalId,
        //        URLMedia: $o.core.globalVariables.urlMedia,
        //        SentBy: $o.core.userType,
        //        Type: "N"
        //    };
        //    $o.note.addNote($o.note.currentNoteInfo);
        //    $o.tools.addToUndo("note" + $o.note.noteId + $o.core.userType);
        //    $o.tools.change($o.tools.type.POINT);

        //},

        //addNote: function (parameters, recover) {
        //    var pinPosition = {
        //        left: parameters.Coords.PosX * $o.canva.target.object.width(),
        //        top: parameters.Coords.PosY * $o.canva.target.object.height()
        //    },
        //    createNote = function () {
        //        $o.note.createNoteUI(parameters, recover, pinPosition);
        //    };

        //    if (!recover)$o.note.notesHistory.push(parameters);

        //    if ((parameters.SentBy != $o.core.globalVariables.userType)&&(!recover)) {
        //        $o.note.mouseNoteUI(parameters, recover, pinPosition);
        //    } else {
        //        createNote(parameters, recover);
        //    }
        //},

        //object: null,
        //noteId: 0,
        //currentNoteInfo: "",
        //notesHistory: []
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.pencil = {
        init: function () {
            $("#draw-button").click(function () {
                if ($o.pencil.isDrawing) {
                    $("#color-picker").removeClass("show-picker");
                    $(this).removeClass("is-drawing").removeAttr("style");
                    $o.pencil.drawing.stop(); // Desactivar el lápiz
                    $o.pencil.isDrawing = false;
                    $o.pencil.drawing.setColor($o.pencil.pencilColor);
                    if (Core.Helpers.isDevice()) {
                        $("#localCanvas").css({ "z-index": 90 });
                    };
                } else {
                    $("#color-picker").addClass("show-picker");
                    setTimeout(function () { if ($("#color-picker").hasClass("show-picker")) $("#color-picker").removeClass("show-picker"); }, 5000);
                    $("#draw-button").addClass("is-drawing");
                    $("#draw-button").attr('style', 'color:' + $o.pencil.pencilColor + ' !important');
                    $("#pencil-me").css({ "color": $o.pencil.pencilColor });
                    $o.pencil.drawing.start(); // Activar el lápiz
                    $o.pencil.isDrawing = true;
                    if (Core.Helpers.isDevice()) {
                        $("#localCanvas").css({ "z-index": 100 });
                    };
                }
            });

            $("#color-picker").on("click", "li", function () {
                $o.pencil.pencilColor = $(this).css("color");
                $("#draw-button").attr('style', 'color:' + $o.pencil.pencilColor + ' !important');
                $("#pencil-me").css({ "color": $o.pencil.pencilColor });

                $o.pencil.drawing.setColor($o.pencil.pencilColor);
                $("#color-picker").removeClass("show-picker");
            });

            var userType = $o.core.globalVariables.userType == "A" ? "agent" : "visitor";

            $o.pencil.pencilColor = userType == "agent" ? "green" : "red";

            // $("#draw-button").css({ "color": $o.pencil.pencilColor });
            $o.pencil.drawing = new Oct8ne.Drawings.DrawingUi(
                document.getElementById("oct8ne-helper"),
                document.getElementById("localCanvas"),
                document.getElementById("remoteCanvas"),
                userType, 0 // Identificador único del recurso actual (puede ser cualquier cosa: id, url, etc.)
            );
            $o.pencil.drawing.setColor($o.pencil.pencilColor);


            $o.pencil.drawing.onLocalSegmentAdded = function (userId, resourceId, points, color, isPermanent, segmentId) {
                // Callback invocado cuando el usuario local ha añadido un segmento

                if ($o.core.isSignalRConnected()) {
                    var drawing = {
                        Room: $o.core.globalVariables.room,
                        Data: JSON.stringify({
                            userId: userId,
                            resourceId: resourceId,
                            points: points,
                            color: color,
                            isPermanent: isPermanent,
                            segmentId: segmentId,
                            helperWidth: $("#oct8ne-helper").width(),
                            helperHeight: $("#oct8ne-helper").height()
                            //helperWidth: 217.5,
                            //helperHeight: 142
                        })
                    };
                    $o.hubsOut.sendDrawing(drawing);
                }
            };
        },

        receiveDrawing: function (data) {
            var obj = JSON.parse(data.Data);
            //console.log("Tamaño al recibir: " + obj.helperWidth + " --- " + obj.helperHeight);
            //console.log("Tamaño local: " + $("#oct8ne-helper").width() + " --- " + $("#oct8ne-helper").height());

            var widthFactor = $("#oct8ne-helper").width() / obj.helperWidth,
                heightFactor = $("#oct8ne-helper").height() / obj.helperHeight;


            $.each(obj.points, function (i) {
                if (obj.points[i] % 2) {
                    obj.points[i] = obj.points[i] * widthFactor;
                } else {
                    obj.points[i] = obj.points[i] * heightFactor;
                }
            });
            $o.pencil.drawing.addRemoteDrawingSegment(obj.userId, obj.resourceId, obj.points, obj.color, obj.isPermanent, obj.segmentId);

            $("#pencil-me").css({ "color": $o.pencil.pencilColor });

            if ($o.core.globalVariables.userType == "V") {
                $("#pencil-agent").css({ "color": obj.color });
                if ($('#pencil-agent').children().length == 0) {
                    $('#pencil-agent').append("<p class='avatar-agent'></p>");
                }
                $('#pencil-agent p').css({ "background": "url('" + $o.visitorStart.avatarAgent + "') center center / cover" });
            } else {
                $("#pencil-visitor").css({ "color": obj.color });
            };

        },

        changeCanvaImage: function (internalId) {
            $o.pencil.drawing.isDrawing = false;
            $o.pencil.drawing.updateCanvasDimensions(true);
            $o.pencil.drawing.setCurrentResourceId(internalId + "" + $o.carousel.currentImage);
            $o.pencil.drawing.clearAll();
        },

        drawing: false,
        isDrawing: false,
        pencilColor: ""
    }
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.pin = {

        init: function () {
            $o.pin.object = $("#pin-tool");
            $o.pin.events();
        },

        sendPin: function (event) {
            ++$o.tools.undoActions;
            var coords = $o.canva.getCoords(event),
                pin = {
                    Coords: {
                        PosX: coords.absleft,
                        PosY: coords.abstop
                    },
                    Room: $o.core.globalVariables.room,
                    InternalId: $o.core.globalVariables.internalId,
                    Scope: $o.carousel.currentImage,
                    SentBy: $o.core.userType,
                    Type: "P",
                    Id: $o.tools.generateRandomId()
                };

            $o.pin.addPin(pin);
            if ($o.core.isSignalRConnected()) { $o.hubsOut.sendPin(pin); }

            $o.saveRecord.pin(pin.Id, $o.carousel.currentImage, pin.Coords.PosX, pin.Coords.PosY);  //id, scope,  coordX, coordY //GRABA INTERACCION
        },

        addPin: function (parameters, recover) {
            if (!recover) $o.pin.pinsHistory.push(parameters);
            var pinPosition = {
                left: parameters.Coords.PosX * $o.canva.target.object.width(),
                top: parameters.Coords.PosY * $o.canva.target.object.height()
            };
            if ((parameters.SentBy != $o.core.globalVariables.userType) && (!recover)) {
                $o.pin.mousePinUI(parameters, pinPosition);
            } else {
                $o.pin.addPinUI(parameters, pinPosition);
            }
            $o.tools.change($o.tools.type.POINT);
        },

        recoverPins: function (tokenVisitor, internalId, scope) {
            var userInteractions = $o.pin.pinsHistory;
            //userInteractions = userInteractions.concat($o.note.notesHistory);
            if (userInteractions) {
                for (key in userInteractions) {
                    var visitorInteraction = userInteractions[key];
                    if ((visitorInteraction.InternalId == internalId) && (visitorInteraction.Scope == scope)) {
                        var recoverInteractionData = {
                            SentBy: visitorInteraction.SentBy,
                            Coords: visitorInteraction.Coords,
                            Type: visitorInteraction.Type,
                            Id: visitorInteraction.Id
                        };
                        if ($o.core) {
                            $o.pin.addPin(recoverInteractionData, "RECOVER");

                        } else {
                            sendInteractionToIframe(recoverInteractionData, tokenVisitor);
                        }
                    }
                }
            }
        },
        object: null,
        pinsHistory: []
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.saveRecord = {
        goToSave: function (record, pastRoom, pastSessionSummaryId) {
            return new Promise(function (resolve, reject) {
                if ($o.core.globalVariables.userType == "V") {
                    $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                        { cookie: $o.cookies.status, value: $o.variablesVisitor.status }
                    ]);

                    $o.variablesVisitor.nowInteractionAFK = new Date(); //seteas nueva interaccion

                    if (!$o.variablesVisitor.lastInteractionAFK) { //NO EVALUES AUN (es la primera!)
                        $o.variablesVisitor.lastInteractionAFK = $o.variablesVisitor.nowInteractionAFK;
                        $o.variablesVisitor.nowInteractionAFK = false;
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                            { cookie: $o.cookies.lastInteractionAFK, value: $o.variablesVisitor.lastInteractionAFK }
                        ]);
                    } else { //EVAULA TIEMPOS
                        if (($o.variablesVisitor.nowInteractionAFK - $o.variablesVisitor.lastInteractionAFK) > $o.variablesVisitor.referenceTimeAFK) {
                            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" }, { cookie: $o.cookies.lastInteractionAFK, value: "" },]); //Para asegurar que es un visitor nuevo. By Gerard!
                            $("#lay-AFK .afk-content-advice").text(culture.coviewer.AdviceAFK1).show();
                            $("#lay-AFK").show();
                            $("#chat-input").blur();
                            if ($.connection.hub.state != $.signalR.connectionState.disconnected) $.connection.hub.stop();
                        } else {
                            $o.variablesVisitor.lastInteractionAFK = $o.variablesVisitor.nowInteractionAFK;
                            $o.variablesVisitor.nowInteractionAFK = false;
                            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                                { cookie: $o.cookies.lastInteractionAFK, value: $o.variablesVisitor.lastInteractionAFK }
                            ]);

                        }
                    }
                }

                $o.saveRecord.save(record, pastRoom, pastSessionSummaryId).then(function (result) {
                    resolve(result);
                });
            });
        },

        save: function (record, pastRoom, pastSessionSummaryId) {
            return new Promise(function (resolve, reject) {
                $.each(record, function (i) {
                    record[i].Fields = JSON.stringify(record[i].Fields);
                    if (!record[i].ProductId && $o.core.globalVariables.internalId && $o.core.globalVariables.internalId.length) record[i].ProductId = $o.core.globalVariables.internalId;
                });

                var tokenVisitor = $o.core.globalVariables.userType == "V" ? $o.core.globalVariables.myToken : $o.core.globalVariables.visitorToken;
                var tokenSession = $o.core.globalVariables.userType == "V" ? $o.core.globalVariables.room : $o.core.globalVariables.tokenSession;
                var sessionSummaryId = $o.core.globalVariables.userType == "V" ? $o.variablesVisitor.sessionSummaryId : $o.core.globalVariables.sessionSummaryId;

                if (pastRoom) { tokenSession = pastRoom; }
                if (pastSessionSummaryId) { sessionSummaryId = pastSessionSummaryId; }

                $.ajax({
                    type: "POST",
                    url: "/Data/SaveInteractions",
                    data: { sessionSummaryId: sessionSummaryId, tokenSession: tokenSession, tokenVisitor: tokenVisitor, jsonListData: JSON.stringify(record) },
                    async: true
                }).done(function () {
                    resolve(true);
                }).fail(function () {
                    resolve(false);
                });

                setTimeout(function () {
                    resolve(false);
                }, 15000);
            });

        },

        //COMMON -- RECOVERTYPE : 1
        query: function (term, type) {
            var query = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Query',
                RecoverType: $o.core.globalVariables.userType == "V" ? 1 : 2,
                Fields: {
                    Type: type,
                    Term: term
                }
            }];
            $o.saveRecord.goToSave(query);
        },

        linkSession: function (tokenSession) {
            var link = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'LinkSession',
                RecoverType: 1,
                Fields: tokenSession
            }];
            $o.saveRecord.goToSave(link);
        },

        translation: function (parameters) {
            var translation = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Translation',
                RecoverType: 1,
                Fields: {
                    License: parameters.License,
                    Status: parameters.Status,
                    AgentLanguage: parameters.AgentLanguage,
                    VisitorLanguage: parameters.VisitorLanguage
                }
            }];
            $o.saveRecord.goToSave(translation);
        },

        checkTranslation: function (status) {
            var translation = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'CheckTranslation',
                RecoverType: 2,
                Fields: {
                    Status: status,
                }
            }];
            $o.saveRecord.goToSave(translation);
        },

        trackItem: function (items) {
            var itemsArray = [];
            $.each(items, function (i) {
                var trackItem = {
                    SentBy: $o.core.globalVariables.userType,
                    Type: 'TrackItem',
                    ProductId: items[i].InternalId,
                    RecoverType: 1,
                    Fields: {
                        InternalId: items[i].InternalId,
                        Thumbnail: items[i].Thumbnail
                    }
                };
                itemsArray.push(trackItem);
            });
            $o.saveRecord.goToSave(itemsArray);
        },

        viewedItem: function (internalId, title, thumbnail, fromAgentSearch, id, forcedSentBy) {
            var viewedItem = [{
                SentBy: forcedSentBy ? forcedSentBy : $o.core.globalVariables.userType,
                Type: 'ViewedItem',
                RecoverType: 1,
                ProductId: internalId,
                Fields: {
                    Title: title,
                    Thumbnail: thumbnail,
                    FromAgentSearch: fromAgentSearch,
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(viewedItem);
        },

        myListItem: function (internalId, title, thumbnail, addedFrom, id) {
            var myListItem = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'MyListItem',
                RecoverType: 1,
                ProductId: internalId,
                Fields: {
                    Title: title,
                    Thumbnail: thumbnail,
                    AddedFrom: addedFrom,
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(myListItem);
        },

        myCartItem: function (internalId, title, thumbnail, addedFrom, id) {
            var myCartItem = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'MyCartItem',
                ProductId: internalId,
                RecoverType: 1,
                Fields: {
                    Title: title,
                    Thumbnail: thumbnail,
                    AddedFrom: addedFrom,
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(myCartItem);
        },

        deleteCartItem: function (internalId) {
            var deleteCartItem = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'DeleteCartItem',
                ProductId: internalId,
                RecoverType: 1
            }];
            $o.saveRecord.goToSave(deleteCartItem);
        },

        uploadItem: function (internalId, title, thumbnail, id) {
            var uploadItem = [{
                ProductId: internalId,
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 1,
                Type: 'UploadItem',
                Fields: {
                    Title: title,
                    Thumbnail: thumbnail,
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(uploadItem);
        },

        catalogItem: function (internalId, title, thumbnail, fromAgentSearch, id, forcedSentBy) {
            var catalogItem = [{
                SentBy: forcedSentBy ? forcedSentBy : $o.core.globalVariables.userType,
                Type: 'CatalogItem',
                ProductId: internalId,
                RecoverType: 1,
                Fields: {
                    Title: title,
                    Thumbnail: thumbnail,
                    FromAgentSearch: fromAgentSearch,
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(catalogItem);
        },

        image: function (scope, url) {
            var image = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Image',
                RecoverType: 1,
                Fields: {
                    Scope: scope,
                    Url: url,
                }
            }];
            $o.saveRecord.goToSave(image);
        },

        zoom: function (scope, url, level, coordX, coordY) {
            var zoom = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Zoom',
                RecoverType: 1,
                Fields: {
                    Scope: scope,
                    Url: url,
                    Level: level,
                    CoordX: coordX,
                    CoordY: coordY
                }
            }];
            $o.saveRecord.goToSave(zoom);
        },

        pin: function (id, scope, coordX, coordY) {
            var pin = [{
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 1,
                Type: 'Pin',
                Fields: {
                    Id: id,
                    Scope: scope,
                    CoordX: coordX,
                    CoordY: coordY
                }
            }];
            $o.saveRecord.goToSave(pin);
        },

        undo: function (id) {
            var undo = [{
                SentBy: "A",
                RecoverType: 1,
                Type: 'Undo',
                Fields: {
                    Id: id
                }
            }];
            $o.saveRecord.goToSave(undo);
        },


        chat: function (content, name, id, sentBy, denyVisitorTyping) {
            var chat = [{
                SentBy: sentBy,
                Type: 'Chat',
                RecoverType: 1,
                Fields: {
                    Content: content,
                    Name: name,
                    Id: id,
                    DenyVisitorTyping: denyVisitorTyping
                }
            }];

            return new Promise(function (resolve, reject) {
                $o.saveRecord.goToSave(chat).then(function (result) {
                    resolve(result);
                });
            });
        },

        canned: function (content, type, id) {

            var canned = [{
                SentBy: 'A',
                Type: 'Canned',
                RecoverType: 1,
                Fields: {
                    Content: content,
                    Id: id,
                    SubType: type,
                    Name: $o.core.globalVariables.otherName
                }
            }];
            $o.saveRecord.goToSave(canned);
        },

        gdpr: function (content, type, id) {

            var canned = [{
                SentBy: 'A',
                Type: 'Gdpr',
                RecoverType: 1,
                Fields: {
                    Content: content,
                    Id: id,
                    SubType: type,
                    Name: $o.core.globalVariables.otherName
                }
            }];
            $o.saveRecord.goToSave(canned);
        },

        supervisorMessage: function (content, name, id, sentBy) {
            var msg = [{
                SentBy: 'A',
                Type: 'SupervisorMessage',
                RecoverType: 2,
                Fields: {
                    Content: content,
                    Id: id,
                    Role: $o.supervisorMode.role,
                    Name: $o.core.globalVariables.myName
                }
            }];
            $o.saveRecord.goToSave(msg);
        },

        cannedResponse: function (id, response) {

            var cannedResponse = [
                {
                    SentBy: $o.core.globalVariables.userType,
                    Type: 'CannedResponse',
                    RecoverType: 1,
                    Fields: {
                        Id: id,
                        Response: response
                    }
                }
            ];
            $o.saveRecord.goToSave(cannedResponse);
        },

        inactivity: function (message) {
            var inactivity = [{
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 1,
                Type: 'Inactivity',
                Fields: {
                    Message: message,
                }
            }];
            $o.saveRecord.goToSave(inactivity);
        },

        inactivityServer: function () {
            var inactivityServer = [{
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 4,
                Type: 'InactivityServer'
            }];
            $o.saveRecord.goToSave(inactivityServer);
        },


        statusVisitor: function (status) {
            var statusVisitor = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'StatusVisitor',
                RecoverType: status == "Attending" ? 3 : 4,
                Fields: {
                    Status: status
                }
            }];
            $o.saveRecord.goToSave(statusVisitor);
        },

        statusViewer: function (status) {
            var statusViewer = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'StatusViewer',
                RecoverType: 4,
                Fields: {
                    Status: status
                }
            }];
            $o.saveRecord.goToSave(statusViewer);
        },

        justLookingB: function () {
            var justLookingB = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'JustLookingB'
            }];
            $o.saveRecord.goToSave(justLookingB);
        },

        loginB: function () {
            var loginB = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'LoginB'
            }];
            $o.saveRecord.goToSave(loginB);
        },

        checkoutB: function () {
            var checkoutB = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'CheckoutB'
            }];
            $o.saveRecord.goToSave(checkoutB);
        },

        myCartB: function () {
            var myCartB = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'MyCartB'
            }];
            $o.saveRecord.goToSave(myCartB);
        },

        titleB: function () {
            var titleB = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'TitleB'
            }];
            $o.saveRecord.goToSave(titleB);
        },

        closeViewerB: function () { //DEPRECATED,DESGLOSADO EN 2: closeByMenuB y closeViewerBySurveyB
            var closeViewerB = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'CloseViewerB'
            }];
            $o.saveRecord.goToSave(closeViewerB);
        },

        closeByMenuB: function () {
            var closeByMenuB = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'CloseByMenuB'
            }];
            $o.saveRecord.goToSave(closeByMenuB);
        },


        closeViewerBySurveyB: function () {
            var closeViewerBySurveyB = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'CloseViewerBySurveyB'
            }];
            $o.saveRecord.goToSave(closeViewerBySurveyB);
        },


        getSummaryB: function () {
            var getSummaryB = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'GetSummaryB'
            }];
            $o.saveRecord.goToSave(getSummaryB);
        },


        showSummary: function () {
            var showSummary = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'ShowSummary'
            }];
            $o.saveRecord.goToSave(showSummary);
        },

        sendSummary: function (email) {
            var sendSummary = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'SendSummary',
                Fields: {
                    Email: email
                }
            }];
            $o.saveRecord.goToSave(sendSummary);
        },

        rate: function (action, nameAgent) {
            var rate = [{
                RecoverType: 4,
                SentBy: $o.core.globalVariables.userType,
                Type: 'Rate',
                Fields: {
                    Action: action,
                    NameAgent: nameAgent
                }
            }];
            $o.saveRecord.goToSave(rate);
        },

        //envia records de click en pagina y iframestatus CHat
        pageClick: function () {
            var itemsArray = [{
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 4,
                Type: 'PageClick'
            },
            {
                SentBy: $o.core.globalVariables.userType,
                RecoverType: 2,
                Type: 'StatusViewer',
                Fields: { Status: "CHAT" }
            }];
            $o.saveRecord.goToSave(itemsArray);
        },


        transfer: function (oldAgent, newAgent, message, type) {
            var transfer = [
                {
                    SentBy: "A",
                    Type: 'Transfer',
                    //RecoverType: $o.core.globalVariables.userType == "V" ? type == $o.visitorTransfer.types.AGENTDISCONNECT && !newAgent ? 4 : 3 : 3,
                    RecoverType: 3,
                    Fields: {
                        OldAgent: oldAgent,
                        NewAgent: newAgent,
                        Message: message,
                        Type: type
                    }
                }];
            $o.saveRecord.goToSave(transfer);
        },

        endSessionB: function () {
            var endSessionB = [{
                RecoverType: 3,
                SentBy: $o.core.globalVariables.userType,
                Type: 'EndSessionB'
            }];
            $o.saveRecord.goToSave(endSessionB);
        },

        memo: function (text) {
            var memo = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Memo',
                RecoverType: 2,
                Fields: {
                    Content: text
                }
            }];
            $o.saveRecord.goToSave(memo);
        },

        form: function (subType, id, body) {
            var form = [{
                SentBy: subType === "INITFORM" ? "A" : $o.core.globalVariables.userType, //INITFORM es un formulario custom de MOBIOCASION que se envia ala entrada desde Visitor. Hay que cambiar SentBy.
                Type: 'Form',
                RecoverType: 1,
                Fields: {
                    SubType: subType,
                    Id: id,
                    Content: body
                }
            }];
            $o.saveRecord.goToSave(form);
        },

        formOrder: function (subType, id, body) {
            var form = [{
                SentBy: "A",
                Type: 'Form',
                RecoverType: 1,
                Fields: {
                    SubType: subType,
                    Id: id,
                    Content: body
                }
            }];
            $o.saveRecord.goToSave(form);
        },

        //podemos responder formularios que se hayan enviado a sesiones anteriores, guardando la respuesta en esa sesion
        formResponse: function (id, responses, room, sessionSummaryId) {
            var response = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'FormResponse',
                RecoverType: 1,
                Fields: {
                    Id: id,
                    Response: responses
                }
            }];
            $o.saveRecord.goToSave(response, room, sessionSummaryId);
        },

        agentOut: function (name, messageType) {
            var agentOut = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'AgentOut',
                RecoverType: 4,
                Fields: {
                    Name: name,
                    MessageType: messageType
                }
            }];
            $o.saveRecord.goToSave(agentOut);
        },

        conference: function (recoverType, action, typeConference, duration) {
            var conferenceInteraction = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'Conference',
                RecoverType: recoverType,
                Fields: {
                    Action: action,
                    Type: typeConference
                }
            }];
            if (duration) conferenceInteraction[0].Fields["Duration"] = duration;
            $o.saveRecord.goToSave(conferenceInteraction);
        },

        documentLink: function (extension, url) {
            var doc = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'DocumentLink',
                RecoverType: 1,
                Fields: {
                    Extension: extension,
                    Url: url
                }
            }];
            $o.saveRecord.goToSave(doc);
        },

        contextInfo: function (context) {
            var info = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'ContextInfo',
                RecoverType: 2,
                Fields: context
            }];
            $o.saveRecord.goToSave(info);
        },

        botProductSearch: function (context) {
            var info = [{
                SentBy: "A",
                Type: 'BotProductSearch',
                RecoverType: 1,
                Fields: context
            }];

            return new Promise(function (resolve, reject) {
                $o.saveRecord.goToSave(info).then(function (result) {
                    resolve(result);
                });
            });
        },

       
        openNewTab: function () {
            var info = [{
                SentBy: $o.core.globalVariables.userType,
                Type: 'OpenNewTab',
                RecoverType: 4,
                Fields: {
                    Action: "ClosedBecaouseNewTab"
                }
            }];
            return info;
        }

    }
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.search = {
        init: function () {
            $o.search.events();
        },
        
        resetSearch: function () {
            $o.search.itsANewSearch = true;
            $o.search.setSearchIndex($o.search.searchIndexActions.RESET);
            $o.search.nodesDeleteList();
            $o.search.sortedBy = "relevance";//$(".sort-by-relevance").text().toLowerCase();
            $o.search.direction = "desc";
            $o.search.setDefaultSortChoiceUI();
            searchVM.appliedFilters([]);
        },

        doSearch: function (searchTerm, filter, recover, sendSearchToAgent) {

            var orderBy = "&orderby=" + $o.search.sortedBy;
            var direction = "&dir=" + $o.search.direction;
            if (!filter) {
                $("#filter-button > span").hide().text("");
            };
            //Cuidado porque esto no es escalable. Cogemos la última palabra de la ordenación por si ya empieza con "ordenar por..."
            var splitOrderBy1 = $(".sort-filter li:nth-child(1)").text().split(" ");
            var splitOrderBy2 = $(".sort-filter li:nth-child(2)").text().split(" ");
            var splitOrderBy3 = $(".sort-filter li:nth-child(3)").text().split(" ");
            if ($o.search.sortedBy == "relevance") {
                $(".sorted-by").text(" " + splitOrderBy3[splitOrderBy3.length - 1].toLowerCase());
            }
            else if ($o.search.sortedBy == "price") {
                $(".sorted-by").text(" " + splitOrderBy2[splitOrderBy2.length - 1].toLowerCase());
            }
            else if ($o.search.sortedBy == "name") {
                $(".sorted-by").text(" " + splitOrderBy1[splitOrderBy1.length - 1].toLowerCase());
            }
            else {
                $(".sorted-by").text(" " + $o.search.sortedBy);
            }
            
            //Antigua solución a la que revertir si no gusta la nueva:
            //$(".sorted-by").text(" " + $o.search.sortedBy);
            if ($o.core.globalVariables.userType == "V") {
                $o.search.searchTerm = $o.chat.disableScripts(searchTerm);
            }
          
            $o.search.setSearchLayoutUI();
            var search = {
                Body: filter != undefined ? searchTerm + filter + orderBy + direction : searchTerm + orderBy + direction,
                Room: $o.core.globalVariables.room,
                SentBy: "V",
                Type: "Q"
            },
                acceptSearch = false;

            if (($o.core.globalVariables.userType == "V") && (!recover) && ($o.search.itsANewSearch)) {
                if ($o.core.isSignalRConnected()) {
                    $o.hubsOut.sendSearchTerm(search, sendSearchToAgent);
                }
            }

            //solo busca si es una nueva busqueda o quedan resultados por buscar
           var allResultsReturned = $o.search.allResultsReturned ? $o.search.allResultsReturned():false;

            if ($o.search.itsANewSearch) {
                if ($o.search.itsANewSearch && !recover && !$o.search.isSearching) {
                    $o.saveRecord.query(search.Body, "Query");
                   
                    // $o.hubsOut.addInteraction(search);
                }
                $o.search.loadingSearchUI();
                acceptSearch = true;
            } else if (!allResultsReturned) {
                $o.search.loadingMoreProductsUI();
                acceptSearch = true;
            }
            if (acceptSearch) {
                $("#error-search").hide();

                $o.search.isSearching = true;
                $o.search.getSearchData(searchTerm, filter, recover);
                $o.search.setSearchIndex($o.search.searchIndexActions.ADD);
            }
        },

        add: function (nodes, totalItems, recover) {
            /*if ($o.core.globalVariables.showCoviewer) {
                return;
            }*/
            $("#filters-panel,#sort-results-panel").hide();
            if ($o.core.globalVariables.userType == "V") $o.visitorSearch.hideSearchTutorial();
            if ($o.search.itsANewSearch == true) {
                window.searchVM.totalResults(totalItems);
                $o.search.totalResults = totalItems;
            }
            $o.search.removeLoadingProductsUI();
            $o.search.setTotalItemsUI(totalItems);
            if (nodes.length) {
                $.each(nodes, function (i) {
                    window.searchVM.add(nodes[i]);
                });

                //&& $o.core.globalVariables.enterType != $o.core.enterType.REOPEN
                if ($o.core.userType == "V" && $o.search.newSearch == true && ($o.enterData.idProduct == "") && $o.core.globalVariables.enterType != $o.core.enterType.RECOVERSESSION && (!$o.core.globalVariables.internalId) && (!recover)) {
                    setTimeout(function () {
                        $o.search.clickFirstProductUI();
                    }, 1000);
                }
                $o.search.newSearch = false;
                $o.search.hideNoProducts();
            } else {

                if ($o.core.userType == "V" && $o.enterData.productsViewed != "" && !recover) {
                    $o.platform.getProductSummary($o.enterData.productsViewed);
                }
                $o.search.showNoProducts();
                window.searchVM.isEmptyGrid(true);
            }
            // $o.log("SE LIBERA");
            $o.search.isSearching = false;
        },

        nodesDeleteList: function () {
            window.searchVM.emptySearchResults();
        },

        searchNodeInSearchVM: function (nodeId) {
            var node = window.searchVM.searchNode(nodeId);
            return node;
        },
        
        addNodeToMyList: function (node) {
            var product = viewedVM.getProduct(node);
            $o.search.addNodeToMyListUI();
            $o.carousel.addProductInfoToList(product, $o.carousel.lists.MYLIST);
            var fullProduct = $o.fullProducts.searchProduct(product.InternalId);
            $o.carousel.prepareInteraction(fullProduct, $o.carousel.lists.MYLIST);
        },

        addNodeToCart: function (node) {
            $o.search.addNodeToCartUI();
            $o.carousel.addProductInfoToList(node, $o.carousel.lists.MYCART);
        },

        size: 10,
        sortedBy: "relevance",
        direction: "desc",
        totalResults: 0,
        itsANewSearch: true,
        newSearch: true,
        openSeeDescription: false,
        searchDirections: {
            ASC: "asc",
            DESC: "desc"
        },
        searchTerm: "",
        searchModes: {
            RESULTS: "RESULTS",
            CATEGORY: "CATEGORY",
            CATALOG: "CATALOG"
        },
        searchMode: "",
        //marcamos en indice en paginas

        searchIndexActions: {
            RESET: "RESET",
            ADD: "ADD"
        },
        isSearching: false,
        sendingProductToCanva: false,
        productFromSearch:false
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.tools = {
        init: function () {
            $o.tools.events();
        },

        change: function (tool) {
            $o.canva.holder.helper.removeClass();
            $o.tools.context = tool;
            switch (tool) {
                case $o.tools.type.PIN:
                    $o.tools.addClassAddingPin();
                    break;
                case $o.tools.type.POINT:
                    $o.tools.addClassPointing();
                    break;
            }
        },

        generateRandomId: function () {
            var text = "", possible = "abcdefghijklmnopqrstuvwxyz0123456789";
            for (var i = 0; i < 8; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));
            return text;
        },

        //SOLo hara undo cuando se haya acabado de hacer un pin, si se cambia de imagen y hay pins no los borrará
        undoPin: function () {
            //encontrar ultimo pin de la imagen actual
            var result = $.grep($o.pin.pinsHistory, function (e) { return e.InternalId == $o.core.globalVariables.internalId && e.Scope == $o.carousel.currentImage; });
            result = result[result.length - 1];
            if (result) {
              $o.tools.deletePin(result.Id);
                //records y signalR
                var undo = {
                    Room: $o.core.globalVariables.room,
                    Id: result.Id,
                    Type: "U"
                };
                if ($o.core.isSignalRConnected()) {
                    $o.hubsOut.sendUndo(undo);
                }
                $o.saveRecord.undo(result.Id);
            }
        },

        deletePin: function (pinId) {
            var pinToDelete = $.map($o.pin.pinsHistory, function (obj, index) {
                if (obj.Id == pinId) {
                    return index;
                };
            });
          
            //borramos del visor y del array
            $o.pin.pinsHistory.splice(pinToDelete[0], 1);
            $("#" + pinId).remove();
        },

        randomCursorPosition: function () {
            var top = Math.floor((Math.random() * 10) + 1);
            var left = Math.floor((Math.random() * 10) + 1);
            top = top < 5 ? -50 : 320;
            left = left < 5 ? -50 : 540;
            var pos = { top: top, left: left };
            return pos;
        },

        context: "DRAG",
        lastContext: "",
        undoActions: 0,

        type: {
            ZOOM: "ZOOM",
            DRAG: "DRAG",
            PIN: "PIN",
            POINT: "POINT",
            MARK: "MARK",
            ANY: "ANY"
        },

        object: null,

        button: { zoom: null, pin: null, point: null, note: null, mark: null }
    };
})(window);;



function YouTubeViewer(viewerContainerId) {
    var _this = this;
    oct8ne.log("Inicializamos youtube");
    this.player = "";
    this.videoPlayerIsReady = ko.observable(false);
    this.isPlaying = ko.observable(false);
    this.isMuted = ko.observable(false);
    this.videoDuration = ko.observable(0);
    this.currentPosition = ko.observable(0);
    this.pauseTimer = 0;
    this.positionTimer = 0;
    this.lastClickTime = 0;
    this.delayBetweenClicks = 300;
    this.onAction = function (action, time) {

        var room = $o.core.globalVariables.room;
        if ($o.core.globalVariables.userType == "V") {
            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendVideoAction(action, time, room);
            }
        } else {
            window.top.videoActionFromDrashboard(action, time, room);
        }


    };
    this.currentTimePositionFormatted = ko.pureComputed(function () {
        var pos = _this.currentPosition();
        var hours = Math.floor(pos / 3600);
        pos -= hours * 3600;
        var minutes = Math.floor(pos / 60);
        pos -= minutes * 60;
        var seconds = Math.round(pos);
        var result = (hours < 10 ? "0" : "") + hours + ":";
        result += (minutes < 10 ? "0" : "") + minutes + ":";
        result += (seconds < 10 ? "0" : "") + seconds;
        return result;
    });
    // Autocheck: if the video status changes to PLAYING, force initialization of controls
    this.autocheckingTimer = 0;
    // Player status change handler
    this.prevStatus = null;
    this.viewerContainerId = viewerContainerId;
    this.slider = "";
    this.initializeSlider();
    this.loaded = false;
    this.retries = 0;
}
YouTubeViewer.prototype.setup = function (callback) {
    oct8ne.log("Cargamos script youtube");
    var _this = this;
    $.ajax({
        type: "GET",
        url: "//www.youtube.com/iframe_api",
        success: function () {
            _this.loaded = true;
            if (callback) setTimeout(function () { callback(); }, 200);
        },
        error: function () {
            oct8ne.log("Error carga script youtube");
            ++_this.retries;
            if (_this.retries < 3) { _this.setup(callback); }
            else {
                console.log("Youtube has not been loaded!");
            }
        },
        dataType: "script",
        cache: true
    });
};

//#region Public methods
YouTubeViewer.prototype.onVisibleResourceChanged = function (user, resourceId, url, title) {
    // _super.prototype.onVisibleResourceChanged.call(this, user, resourceId, url, title);
    this.load(url);
};

YouTubeViewer.prototype.clear = function () {
    // _super.prototype.clear.call(this);
    if (this.player) {
        this.videoDuration(0);
        this.disableTimer();
        this.player.stopVideo();
        this.player.clearVideo();
    }
};

YouTubeViewer.prototype.resizeWindow = function (left, top, width, height) {

    var container = $("#" + this.viewerContainerId);
    var controls = $("#" + this.viewerContainerId + "-controls");
    var newHeight = height - 80;
    var newWidth = height * 1.77 - 120;
    var newLeft = (width - newWidth) / 2;
    var newTop = 0;
    //  container.css({ width: newWidth, height: newHeight, left: newLeft, top: newTop });
    //  controls.css({ top: newTop + newHeight - controls.height() + 10 });
    return {
        //   height: newHeight,
        //  width: newWidth
        width: "100%"
    };
};

YouTubeViewer.prototype.load = function (videoUrl) {
    var _this = this;
    this.isPlaying(false);
    this.videoPlayerIsReady(false);
    this.firstLoad = true;
    this.actionNameReceivedBeforeLoading = null;
    this.actionTimeReceivedBeforeLoading = null;
    this.videoDuration(0);
    this.disableTimer();

    var container = $("#" + this.viewerContainerId);
    //container.css({ width: "100%", height: "100%", margin:"0 auto"});
    var height = container.height();
    var width = container.width();
    this.resizeWindow(0, 0, width, height);
    var videoId = "";
    if (videoUrl.indexOf("youtu.be") != -1) {
        videoId = videoUrl.substring(videoUrl.lastIndexOf("/") + 1);
    } else {
        videoId = videoUrl.split('=')[1];
        videoId = videoId.split('&')[0];
    }
    // Patch ******************************
    if (this.player) {
        this.player.destroy();
        this.player = null;
    }
    // End patch **************************


    if (this.player) {
        this.clear();
        this.isMutedBeforeStart = this.player.isMuted();
        this.player.mute();
        this.player.loadVideoById({ videoId: videoId });
        this.startAutocheckingOfVideoPlayer();
    } else {
        this.player = new YT.Player(this.viewerContainerId, {
            height: height,
            width: width,
            playerVars: { 'autoplay': 1, 'controls': 0, 'rel': 0 },
            videoId: videoId,
            progressBar: false,
            events: {
                'onReady': function (e) {
                    Log("Video player is ready");
                    _this.isMutedBeforeStart = _this.player.isMuted();
                    _this.player.mute();
                    _this.startAutocheckingOfVideoPlayer();
                },
                'onStateChange': function (e) {
                    return _this.onPlayerStateChange(e);
                },
                'onError': function (e) {
                    var msg;
                    switch (e.data) {
                        case 100:
                            msg = culture.coviewer.VideoNotFound;
                            break;
                        case 101:
                        case 150:
                            msg = culture.coviewer.VideoNotExternal;
                            break;
                        default:
                            msg = culture.coviewer.VideoError + e.data + ".";
                            break;
                    }
                    Ui.DialogBox.error(msg);
                    Log("Youtube player ERROR " + e.data + ": " + msg);
                }
            }
        });
    }
};

// Remote actions
YouTubeViewer.prototype.processAction = function (action, time) {
    var _this = this;
    if (this.firstLoad) {
        this.actionNameReceivedBeforeLoading = action;
        this.actionTimeReceivedBeforeLoading = time;
        this.actionBeforeLoadingReceivedAtMilliseconds = new Date().getTime();
    }

    if (this.pauseTimer) {
        clearTimeout(this.pauseTimer);
        this.pauseTimer = 0;
    }

    switch (action) {
        case "play":
            this.isPlaying(true);
            this.player.seekTo(time);
            this.player.playVideo();
            this.updateUiWithVideoPosition(time);
            this.enableTimer();
            break;
        case "pause":
            this.disableTimer();
            var actualTime = this.player.getCurrentTime();
            var dif = (time - actualTime) * 1000;
            if (actualTime < time && this.isPlaying() && dif <= 4000) {
                this.pauseTimer = setTimeout(function () {
                    _this.player.pauseVideo();
                    _this.pauseTimer = 0;
                    _this.isPlaying(false);
                }, dif);
            } else {
                this.player.pauseVideo();
                this.player.seekTo(time);
                this.updateUiWithVideoPosition(time);
                this.isPlaying(false);
            }
            break;
    }
};

//#endregion
//#region UI events & computed observables
YouTubeViewer.prototype.playClicked = function () {
    if (this.isPlaying() || (new Date().getTime() - this.lastClickTime < this.delayBetweenClicks || this.videoPlayerIsReady() == false))
        return;
    this.lastClickTime = new Date().getTime();
    this.isPlaying(true);
    var actualTime = this.player.getCurrentTime();
    this.onAction("play", actualTime);
    this.player.playVideo();
    this.enableTimer();
};

YouTubeViewer.prototype.pauseClicked = function () {
    if (!this.isPlaying() || (new Date().getTime() - this.lastClickTime < this.delayBetweenClicks))
        return;
    this.lastClickTime = new Date().getTime();
    this.isPlaying(false);
    var actualTime = this.player.getCurrentTime();
    this.onAction("pause", actualTime);
    this.player.pauseVideo();
    this.disableTimer();
};

YouTubeViewer.prototype.speakerClicked = function () {
    this.isMuted(!this.isMuted());
    if (this.isMuted()) {
        this.player.mute();
    } else {
        this.player.unMute();
    }
};

//#region Private members
// Called after the video preloading
YouTubeViewer.prototype.initializePlayerStatusAndControls = function () {
    var action, time;
    Log("Initializing player and controls");
    this.stopAutocheckingOfVideoPlayer();
    if (this.actionNameReceivedBeforeLoading) {
        Log("Applying last command received during buffering: " + this.actionNameReceivedBeforeLoading + " " + this.actionTimeReceivedBeforeLoading);
        action = this.actionNameReceivedBeforeLoading;
        time = this.actionTimeReceivedBeforeLoading;
    } else {
        action = "pause";
        time = 0;
        Log("Pausing video at 0:00 after buffering");
    }

    if (action == "pause") {
        this.prevStatus = YT.PlayerState.PAUSED;
        this.player.pauseVideo();
        this.player.seekTo(time);
        this.disableTimer();
    } else if (action == "play") {
        var dif = Math.round((new Date().getTime() - this.actionBeforeLoadingReceivedAtMilliseconds) / 1000);
        this.prevStatus = YT.PlayerState.PLAYING;
        this.player.seekTo(time + dif);
        this.player.playVideo();
        this.enableTimer();
    }

    var duration = Math.floor(this.player.getDuration());
    this.videoDuration(duration);
    this.setSliderMax(duration);
    this.updateUiWithVideoPosition(time);
    this.videoPlayerIsReady(true);
    if (this.isMutedBeforeStart) {
        this.player.mute();
    } else {
        this.player.unMute();
    }
};

YouTubeViewer.prototype.startAutocheckingOfVideoPlayer = function () {
    var _this = this;
    this.stopAutocheckingOfVideoPlayer();
    var that = this;
    setTimeout(function () {
        if (!that.firstLoad)
            return;
        Log("Starting player status polling...");
        that.autocheckingTimer = setInterval(function () {
            var currentStatus = that.player.getPlayerState && that.player.getPlayerState();
            if (currentStatus === YT.PlayerState.PLAYING && that.firstLoad) {
                Log("Forcing player and controls initialization");
                that.stopAutocheckingOfVideoPlayer.bind(that);
                _this.firstLoad = false;
                that.initializePlayerStatusAndControls();
            }
        }, 1000);
    }, 5000);
};
YouTubeViewer.prototype.stopAutocheckingOfVideoPlayer = function () {
    if (this.autocheckingTimer) {
        clearInterval(this.autocheckingTimer);
        this.autocheckingTimer = 0;
    }
};

YouTubeViewer.prototype.onPlayerStateChange = function (event) {
    this.videoStopped = false;
    Log(event.data);
    switch (event.data) {
        case YT.PlayerState.PLAYING:
            if (this.firstLoad) {
                Log("First PLAY of video");
                this.stopAutocheckingOfVideoPlayer();
                this.firstLoad = false;
                this.initializePlayerStatusAndControls();
            } else {
                Log("Video PLAYING > isPlaying()=" + this.isPlaying() + " and prevStatus==" + this.getStatusDescription(this.prevStatus));
                if (!this.isPlaying() && (this.prevStatus == YT.PlayerState.PAUSED || this.prevStatus == YT.PlayerState.ENDED)) {
                    this.playClicked();
                }
                this.prevStatus = event.data;
            }
            break;

        case YT.PlayerState.PAUSED:
            if (this.player.getCurrentTime() >= this.videoDuration()) {
                this.prevStatus = event.data;
                Log("Video PAUSED before video END");
                return;
            }
            Log("Video PAUSED > isPlaying()=" + this.isPlaying() + " and prevStatus==" + this.getStatusDescription(this.prevStatus));
            if (this.isPlaying() && this.prevStatus == YT.PlayerState.PLAYING) {
                this.pauseClicked();
            }
            this.prevStatus = event.data;
            break;

        case YT.PlayerState.ENDED:
            Log("Video ENDED");
            this.videoStopped = true;
            this.isPlaying(false);
            this.updateUiWithVideoPosition(this.player.getCurrentTime());
            this.disableTimer();
            this.prevStatus = event.data;
            break;

        default:
            var status = this.getStatusDescription(event.data);
            Log("Video player status changed to " + status + "(previous state was " + this.getStatusDescription(this.prevStatus) + ")");
            break;
    }
};

YouTubeViewer.prototype.getStatusDescription = function (status) {
    var desc = status;
    switch (status) {
        case YT.PlayerState.PLAYING:
            desc = "Playing";
            break;
        case YT.PlayerState.BUFFERING:
            desc = "Buffering";
            break;
        case YT.PlayerState.PAUSED:
            desc = "Paused";
            break;
        case YT.PlayerState.ENDED:
            desc = "Ended";
            break;
        case YT.PlayerState.UNSTARTED:
            desc = "Unstarted";
            break;
    }
    return desc;
};

YouTubeViewer.prototype.enableTimer = function () {
    var _this = this;
    if (this.positionTimer) {
        var time = this.player.getCurrentTime();
        this.currentPosition(time);
        this.disableTimer();
    }
    this.positionTimer = setInterval(function () {
        _this.updateUiWithVideoPosition(_this.player.getCurrentTime());
    }, 1000);
};

YouTubeViewer.prototype.disableTimer = function () {
    if (this.positionTimer) {
        clearInterval(this.positionTimer);
        this.positionTimer = 0;
    }
};

YouTubeViewer.prototype.updateUiWithVideoPosition = function (time) {
    this.currentPosition(time);
    this.sliderControl.val(time);
};

YouTubeViewer.prototype.initializeSlider = function () {
    //$o.log("INITIALIZESLIDER");
    var _this = this;
    var readyForFirstSlide = true;
    var slider = this.sliderControl = $("#youtubevideoplayer-controls .slider");

    if (!slider.noUiSlider) {
        return;
    };

    slider.noUiSlider({
        start: 0,
        connect: "lower",
        orientation: "horizontal",
        range: {
            'min': 0,
            'max': 100
        }
    });
    slider.on('slide', function () {
        //$o.log("slide val =  " + slider.val());

        if (readyForFirstSlide) {
            readyForFirstSlide = false;
            _this.disableTimer();
        }
        _this.currentPosition(slider.val());
    });

    slider.on('set', function () {
        //$o.log("set");

        readyForFirstSlide = true;
        var time = slider.val();
        _this.updateUiWithVideoPosition(time);

        if ((_this.isPlaying() && time < _this.videoDuration())) {
            //$o.log("set PLAY");

            _this.player.seekTo(time);
            _this.enableTimer();
            _this.onAction("play", time);
        } else {
            //$o.log("set PAUSE");

            _this.onAction("pause", time);
            _this.player.seekTo(time);
            if (_this.videoStopped) {
                _this.videoStopped = false;
                _this.isPlaying(true);
                _this.enableTimer();
                Log("Playing after sliding on an ended video");
            }
        }
    });
};

YouTubeViewer.prototype.setSliderMax = function (duration) {

    if (!this.sliderControl.noUiSlider) {
        return;
    };

    this.sliderControl.noUiSlider({
        start: 0,
        range: {
            'min': 0,
            'max': duration
        }
    }, true);
};


function Log(k) {
    //$o.log(k);
}

;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.canned = {
        init: function () { },
        sendCanned: function (type, body) {
            // A veces no viene body. Se printa mediante KO de la vista. Raro, no debería!!
           
            var canned = {
                Body: {
                    Original: body ? body.replace(/\\n/g, "").replace(/&#39;/g, "'") : "",
                    Translated: false
                },
                Room: $o.core.globalVariables.room,
                Category: "CANNED",
                Type: type,
                Id: $o.tools.generateRandomId(),
                SentBy: type == $o.canned.type.TRIGGER || $o.canned.type.INACTIVITYVISITOR1 || $o.canned.type.INACTIVITYVISITOR2 || $o.canned.type.INACTIVITYVISITOR3 ? "A" : $o.core.globalVariables.userType,
            };
            
            $o.canned.createCanned(canned);
            if ($o.core.isSignalRConnected()) { $o.hubsOut.sendMessage(canned); }
            $o.saveRecord.canned(canned.Body, canned.Type, canned.Id);

            if ($o.utils && $o.utils.sendCannedCallback) {
                $o.utils.sendCannedCallback(type);
            }           
        },

        sendGdpr: function (body) {
            var canned = {
                Body: {
                    Original: body ? body.replace(/\\n/g, "").replace(/&#39;/g, "'") : "",
                    Translated: false
                },
                Room: $o.core.globalVariables.room,
                Category: "GDPR",
                Type: "GDPR",
                Id: $o.tools.generateRandomId(),
                SentBy: $o.core.globalVariables.userType,
            };

            if ($o.core.agentsConnected) {
                $o.canned.createGdpr(canned);
                $o.saveRecord.gdpr(canned.Body, canned.Type, canned.Id);
            };
            if ($o.core.isSignalRConnected()) { $o.hubsOut.sendMessage(canned); }
        },

        createCanned: function (parameters, responsed) {    
            if (parameters.Type === $o.canned.type.TRIGGER && parameters.Body && parameters.Body.hasOwnProperty("Original") && parameters.Body.Original === "") {
                return false;
            }
            if (!parameters.Body || !parameters.Body.hasOwnProperty("Original")) {
                parameters.Body = {
                    Original: parameters.Body,
                    Translated: false
                }
            }
            $o.speak.messages.push(new $o.speak.canned({
                body: parameters.Body.Original,
                tokens: parameters.Tokens,
                sentBy: parameters.SentBy,
                name: parameters.Type == $o.canned.type.TRIGGER && $o.core.userType == "V" ? $o.core.globalVariables.otherName : parameters.Name ? parameters.Name : $o.core.globalVariables.myName,
                id: parameters.Id,
                time: parameters.Time ? parameters.Time : $o.speak.getMessageTime(),
                type: parameters.Type,
                response: responsed ? "[responsed]" : false
            }));

            if (parameters.Type == $o.canned.type.WELCOME) {
                var justLookingButton = $o.storage.local.get($o.core.localStorageTypes.JUSTLOOKINGBUTTON);
                if (justLookingButton) $("#welcome-just-looking").parent().show();
            }
            if (parameters.Type == "DISCONNECT") {
                $o.core.visitorIsGone();
            }
            $o.scroll.moveChatToBottom();
        },

        createCannedTriggerMessage: function (message) {
            
            $o.speak.messages.push(new $o.speak.canned({
                body: message,               
                time: $o.speak.getMessageTime(),
                type: $o.canned.type.TRIGGERMESSAGE
            }));
            $o.scroll.moveChatToBottom();
        },

        createGdpr: function (parameters, recoveredMessage) {
            if (!parameters.Body || !parameters.Body.hasOwnProperty("Original")) {
                parameters.Body = {
                    Original: parameters.Body,
                    Translated: false
                }
            }
            $o.speak.messages.push(new $o.speak.gdpr({
                body: parameters.Body.Original,
                tokens: parameters.Tokens,
                sentBy: parameters.SentBy,
                name: $o.core.globalVariables.otherName,
                id: parameters.Id,
                time: parameters.Time ? parameters.Time : $o.speak.getMessageTime(),
                type: parameters.Type,
                response: false
            }));
            if (!recoveredMessage) {
                $o.scroll.moveChatToBottom();
            }
           
        },

        sendCannedResponse: function (id, answer) {
            var response = {
                Id: id,
                Response: answer,
                Category: "CANNEDRESPONSE",
                Room: $o.core.globalVariables.room,
                SentBy: $o.core.globalVariables.userType,
            };

            $o.canned.updateCannedWithResponse(response);
            response.Response = JSON.stringify(response.Response);
            //  $o.hubsOut.sendFormResponse(response); Las respuestas del caneado se envian??

            $o.saveRecord.cannedResponse(response.Id, response.Response);
        },

        updateCannedWithResponse: function (response) {
            var canned = ko.utils.arrayFilter($o.speak.messages(), function (current) {
                return current.id == response.Id;
            });
            canned[0].response(response.Response);
        },

        type: {
            AGENTAVAILABLE: "AGENTAVAILABLE",
            AGENTSBUSY: "AGENTSBUSY", //BOTON
            AGENTSDISCONNECT: "AGENTSDISCONNECT", //BOTON
            CHECKOUT: "CHECKOUT",
            INACTIVITYVISITOR1: "INACTIVITY1",
            INACTIVITYVISITOR2: "INACTIVITY2",
            INACTIVITYVISITOR3: "INACTIVITY3", //BOTON
            NOMOREAGENTS: "NOMOREAGENTS",  //BOTON
            OVERBOOKING: "OVERBOOKING",  //BOTON
            RECONNECTSESSION: "RECONNECTSESSION",  //BOTON
            RECONNECTSESSIONEMAIL: "RSE",//BOTON // MENSAJE DEPRECATED??
            SENDSESSION: "SENDSESSION",
            TRANSFER: "TRANSFER",
            TRANSFERFROMLOGOUT: "TRANSFERFROMLOGOUT",
            TRIGGER: "TRIGGER",
            VIPMESSAGE: "VIPMESSAGE",
            GDPR: "GDPR",
            WELCOME: "WELCOME",
            TRIGGERIMAGE: "TRIGGERIMAGE",
            INITSHARING: "INITSHARING",
            EXTENSIONADVICE:"EXTENSIONADVICE"
           
        }
    };

})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.chat = {
        init: function () {
            $o.chat.events();
            //se utiliza en los productos que envia el agente
        },

        displayIsTyping: function (text, chatLength, keyCode) {
            if ($o.core.globalVariables.userType === "V" && $o.core.globalVariables.isTypingWithText === "True") {
                $o.chat.displayIsTypingWithText(text, chatLength, keyCode);
            } else {
                $o.chat.displayIsTypingWithoutText(chatLength);
            }
        },

        displayIsTypingWithText: function (text, chatLength, keyCode) {
            if (chatLength === 1) {
                text = "true";
            } else if (chatLength === 0) {
                text = "false";
            }
            if (keyCode === 32 || chatLength === 1 || chatLength === 0) {
                var message = {
                    Body: {
                        Original: text,
                        Translated: false
                    },
                    Room: $o.core.globalVariables.room,
                    SentBy: $o.core.userType,
                    Type: "T"
                };

                if (!$o.core.isSignalRConnected()) {
                    if (!$o.core.globalVariables.visitorsOverflow) {
                        $o.chat.displayOfflineStatus();
                    }
                    return;
                } else {
                    var status = $o.variablesVisitor.status;
                    if (status === "Attending") { //ONLY ATTENDING
                        $o.hubsOut.sendWriting(message);
                    }
                }
            }
        },

        displayIsTypingWithoutText: function (chatLength) { //typing...
            if (($o.core.globalVariables.userType == "A" && !$o.agentTools.isAgentChatActive) || $o.core.globalVariables.userType == "V") {
                var statusTyping;
                if ((chatLength > 0) && (!$o.chat.isTyping)) {
                    statusTyping = true;
                } else if ((chatLength == 0) && ($o.chat.isTyping)) {
                    statusTyping = false;
                }

                if (statusTyping != null || statusTyping != undefined) {
                    var message = {
                        Body: {
                            Original: statusTyping ? "true" : "false",
                            Translated: false
                        },
                        Room: $o.core.globalVariables.room,
                        SentBy: $o.core.userType,
                        Type: "T"
                    };

                    if (!$o.core.isSignalRConnected()) {
                        if (!$o.core.globalVariables.visitorsOverflow) {
                            $o.chat.displayOfflineStatus();
                        }
                        return;
                    } else {
                        if ($o.core.globalVariables.userType == "V") { //VISITOR SIDE
                            var status = $o.variablesVisitor.status;
                            if (status == "Attending") { //ONLY ATTENDING
                                $o.hubsOut.sendWriting(message);
                                $o.chat.isTyping = statusTyping;
                            }
                        } else { //AGENT SIDE
                            $o.hubsOut.sendWriting(message);
                            $o.chat.isTyping = statusTyping;
                        }
                    }
                }
            }
        },

        pressEnterOnSearchInput: function (text) {
            if ($o.core.globalVariables.userType === "V" && !$o.core.isSignalRConnected()) {
                $o.visitorStart.restartConnection(text, true);
            } else {
                $o.chat.prepareSend(text);
            }
        },

        prepareSend: function (message) {
            if ($o.bot && $o.bot.responseChecker) { $o.bot.responseChecker.startWaiting(); }
            var waitToChangeStatus = false;
            message = $o.chat.disableScripts(message);
            if ($o.core.globalVariables.userType == "V") {
                if (!$o.core.hasBeenWaiting || $o.core.globalVariables.visitorsOverflow) { 
                    var status = $o.variablesVisitor.status;
                    if (status != "Attending") {
                        $o.chat.messagesBeforeWaiting.push(message);
                        //  $("#chat-input").attr("readonly", true);
                        if (!$o.chat.startedChangeToWaiting) {
                            $o.chat.startedChangeToWaiting = true;
                            $o.visitorSearch.changeToWaitingStatus(message);
                        }
                        waitToChangeStatus = true;
                    }
                }
            }
            if (!waitToChangeStatus) {
                if (message.length >= 1) {
                    message = $o.chat.disableScripts(message);
                    message = message.replace(/\\n/g, "<br/>");
              
                    if ($o.core.globalVariables.userType == "A") {
                        if ($o.translateAgent.doReview) {
                            if ($o.translateAgent.waitingForReview) {
                                $o.translate.startTranslation(message, $o.translate.messageTypes.CHAT);
                            } else {
                                $o.translateAgent.reviewedMessage.translated = message;
                                $o.translateAgent.waitingForReview = false;
                                $o.chat.send($o.translateAgent.reviewedMessage)
                            }
                        } else {
                            $o.translate.startTranslation(message, $o.translate.messageTypes.CHAT);
                        }
                    } else {
                        $o.translate.startTranslation(message, $o.translate.messageTypes.CHAT);
                    }
                };
                $o.chat.isTyping = false;
                $o.chat.hideJustLookingMessage();
            }
        },

        sendMessagesBeforeConnected: function () {
            $.each($o.chat.messagesBeforeWaiting, function (i) {
                $o.translate.startTranslation($o.chat.messagesBeforeWaiting[i], $o.translate.messageTypes.CHAT);
            });
            $o.chat.messagesBeforeWaiting = [];
        },
        send: function (body) {
            var message = {
                Body: {
                    Original: body.original.replace(/\\n/g, "").replace(/&#39;/g, "'").trim(),
                    Translated: body.translated.length ? body.translated.replace(/\\n/g, "").replace(/&#39;/g, "'").trim() : false
                },
                Name: $o.core.globalVariables.myName,
                Room: $o.core.globalVariables.room,
                Category: "CHAT",
                Id: $o.tools.generateRandomId(),
                SentBy: $o.core.globalVariables.userType,
                // AgentImg: "url(https://staticupload.oct8ne.com/avatar/local1/35E2DB3C711B68059718C78A66042B59-2018-07-25-16-27-01-617224.jpg)"
            };

            //envia al chat de agentes    
            if ($o.core.globalVariables.userType == "V" && $.connection.hub.state == $.signalR.connectionState.disconnected && $o.core.globalVariables.enterType !== $o.core.enterType.TREEPREVIEW) {
                $o.chat.displayOfflineStatus();
            } else {
                if (($o.core.globalVariables.userType == "A") && ($o.translateAgent.doReview)) {
                    $(".review-translation").hide();
                    $("#chat-input , .chat-input-emoji").removeClass("reviewing");
                    $(".chat-send").html(culture.coviewer.TranslateButton);
                    $o.translateAgent.waitingForReview = true;
                }
                $o.chat.updateMessage(message);

                $o.saveRecord.chat(message.Body, message.Name, message.Id, message.SentBy, false).then(function (result) {
                    //console.log("Guardado chat: " + result)
                    //if (result === false) {
                    //    alert("Error al grabar")
                    //};
                    if ($o.core.agentsConnected) {
                        $o.hubsOut.sendMessage(message);
                    }
                });
            };
        },

        sendTriggerAsChat: function (text) { //envia canned subtipo trigger
            var message = {
                Body: text.replace(/\\n/g, "").replace(/&#39;/g, "'"),
                Name: $o.core.globalVariables.otherName,
                Room: $o.core.globalVariables.room,
                Category: "CHAT",
                Id: $o.tools.generateRandomId(),
                SentBy: "A" //Se envía desde Visitor pero debe ser Agent!!!
            };
            $o.chat.updateMessage(message);
            $o.saveRecord.chat(message.Body, message.Name, message.Id, message.SentBy, false);
        },

        updateMessage: function (parameters, recoveredMessage) {
            var notScrolls = false;
            if (recoveredMessage === "recoverfromV") {
                notScrolls = true;
                recoveredMessage = false;
            }

            $o.chat.toogleDenyVisitorTyping(parameters.DenyVisitorTyping);
            if ($o.chat.hideTyping) {
                $o.chat.hideTyping();
            }

            if (!parameters.Body.hasOwnProperty("Original")) {
                parameters.Body = {
                    Original: parameters.Body,
                    Translated: false
                };
            }

            //---------HIPERLINK---------
            var body = $o.chat.checkUrlInBody(parameters.Body.Original, parameters.SentBy);
            var translatedBody = false;

            if (parameters.Body.Translated !== false && parameters.Body.Translated !== "false") {
                translatedBody = $o.chat.checkUrlInBody(parameters.Body.Translated, parameters.SentBy);
            }


            if ($o.translate.isEnabled === true || recoveredMessage) {
                if (($o.core.globalVariables.userType == "V") && (parameters.SentBy == "A")) {

                    body = parameters.Body.Translated;

                    if (parameters.Body.Translated == "" && parameters.Body.Original.indexOf("<") > -1 && parameters.Body.Original.indexOf(">") > -1) { //Para enviar el hyperlink al visitante sin traducir.
                        body = parameters.Body.Original;
                    };

                } else if (($o.core.globalVariables.userType == "A") && (parameters.SentBy == "A")) {
                    body = parameters.Body.Original;

                }
            } else {
                parameters.Body.Translated = false;
            }


            var chat = new $o.speak.chat({
                body: body.replace(/([\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2694-\u2697]|\uD83E[\uDD10-\uDD5D])/g, '<span class="oct8ne-emoji-in-chat">$&</span>'), //REGEX PARRA EMOTIS
                translation: translatedBody ? translatedBody.replace(/([\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2694-\u2697]|\uD83E[\uDD10-\uDD5D])/g, '<span class="oct8ne-emoji-in-chat">$&</span>') : translatedBody,
                tokens: parameters.Tokens,
                sentBy: parameters.SentBy,
                name: parameters.Name,
                id: parameters.Id,
                time: parameters.Time ? parameters.Time : $o.speak.getMessageTime()
                // agentImg: parameters.AgentImg
            });

            $o.speak.messages.push(chat);
            if (!notScrolls) {
                $o.scroll.moveChatToBottom();
            }

            // if ($("#go-to-bottom").is(":visible") && parameters.SentBy === "V" && $o.core.globalVariables.userType == "A") {//No se porqué está solo para Agente...
            if ($("#go-to-bottom").is(":visible")) {
                $o.chat.alertMessageInChat = $o.chat.alertMessageInChat ? $o.chat.alertMessageInChat + 1 : 1;
                $("#warning-chat").text($o.chat.alertMessageInChat).show();
            }
        },

        checkUrlInBody: function (text, sentBy) {
            var className = sentBy == "V" ? 'CHTxt5' : 'CHTxt4';
            var linkTargetClass = "";
            if ($o.utils && $o.utils.getCustomLinkTarget) {
                linkTargetClass = $o.utils.getCustomLinkTarget();
            }

            if ($o.core.globalVariables.isCustomApp) {

                if (text.indexOf($o.core.globalVariables.baseUrl) > -1) {
                    //if we add "target-parent" class link will be open in parent window (search a.target-parent )

                    linkTargetClass += "target-parent";
                    var body = linkifyHtml(text, {
                        tagName: 'a',
                        target: "_blank",
                        newLine: '\n',
                        className: className + " " + linkTargetClass
                    });
                } else {                   
                    var body = linkifyHtml(text, {
                        tagName: 'a',
                        target: "_blank",
                        newLine: '\n',
                        className: className + " " + linkTargetClass,
                        formatHref: function (href, type) {
                            href = href + "#native-browser";
                            return href;
                        }
                    });

                }

                body = body.replace("target=\"_blank\"", "");
               // console.log(body);
            } else {
                var body = linkifyHtml(text, {
                    tagName: 'a',
                    target: "_blank",
                    newLine: '\n',
                    className: className + " " + linkTargetClass
                });
            }




            return body;
        },

        disableScripts: function (text) {
            if (text.length > 0 && text.match(/(<([^>]+)>)/gi)) {
                console.log("Attempt to inject script. Localizing IP...");
                return "";
            }
            return text;
        },

        displayOfflineStatus: function () {
            if ($o.core.globalVariables.userType == "V") { //SOLO PARA VISITOR
                $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" }]); //Para asegurar que es un visitor nuevo. By Gerard!
                //$("#offline-status-wrapper").show();
                $("#lay-AFK .afk-content-advice").text(culture.coviewer.OfflineAdvice2).show();
                $("#lay-AFK").show();
                $("#chat-input , .chat-input-emoji").blur();
            } else {
                return;
            };
        },

        sendIsAttendedToAnalytics: function (category,sentBy) {
            var mustSend = false;
            if ($o.utils && $o.utils.attendingEventConditions) {
                //condiones custom por settings
                mustSend = $o.utils.attendingEventConditions(category);
            } else {
                //default: que lleguen más de 1 chat o choice
                if ((category == "CHAT" || category == "CHOICE") && !$o.chat.sentAttendedToAnalytics) {
                    ++$o.chat.chatsInConversation;
                    mustSend = $o.chat.chatsInConversation >= $o.chat.chatsForSendingAttendedEvent && $o.variablesVisitor.status === "Attending";
                }
            }
            if (mustSend) {
                parent.postMessage("SENDANALYTICSEVENT,GAAttendedByAgent, " + $o.core.globalVariables.otherName + " -- ID: " + $o.core.globalVariables.agentId, "*");
                $o.chat.sentAttendedToAnalytics = true;
                //por si hay productos vistos anteriormente
                $o.carousel.sendProductToAnalytics("V");
            }
            //evento custom de attending
            if ($o.utils && $o.utils.attendingCustomEvent) {
                $o.utils.attendingCustomEvent(category,sentBy);
            }
        },

        imagePreviewPasted: function (imageIn64) {
            $("#pasted-image").css("background", "url(" + imageIn64 + ")");
            $("#preview-pasted").show();
        },

        refreshWindow: function () {
            parent.postMessage("REFRESHPAGE", "*");
        },

        sendAlert: function (messageText) {
            if ($o.core.globalVariables.agentType !== $o.visitorStart.agentTypes.BOT) {
                $o.chat.addAlertChat();
                parent.postMessage("NEWCHATALERT," + encodeURIComponent(messageText), "*");
            }
        },

        alerts: null,
        agentsConnected: false,
        isTyping: false,
        VisitorSendMessage: false,
        alertMessage: null,
        alertProduct: null,
        queueChats: [],
        typingTimer: null,
        stopTypingInterval: 15000,
        messagesBeforeWaiting: [],
        startedChangeToWaiting: false,
        chatsInConversation: 0,
        sentAttendedToAnalytics: false,
        pendingAccessFormMessage: false,
        chatsForSendingAttendedEvent: 2,
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.forms = {
        init: function () {
            $o.forms.events();
        },

        sendForm: function (type, body) {
            var form = {
                Body: {
                    Original: body ? body : "",
                    Translated:false
                },
                Room: $o.core.globalVariables.room,
                SentBy: type === "INITFORM" ? "A": $o.core.globalVariables.userType, //INITFORM es un formulario custom de MOBIOCASION que se envia ala entrada desde Visitor. Hay que cambiar SentBy.
                Type: type,
                Category: "FORM",
                Id: $o.tools.generateRandomId()
            };

            $o.forms.createForm(form);
            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendMessage(form);
            }
            $o.saveRecord.form(type, form.Id, body);
        },

        sendOrderForm: function (orderStatus) {
            var form = {
                Body: {
                    Original: orderStatus.OrderStatusForm[0].body,
                    Translated: false
                },
                Room: $o.core.globalVariables.room,
                SentBy: "A",
                Type: $o.forms.type.ORDER,
                Category: "FORM",
                Id: $o.tools.generateRandomId()
            };
            $o.forms.orderStatusOptions(orderStatus);            
            $o.forms.createForm(form);
            $o.saveRecord.formOrder($o.forms.type.ORDER, form.Id, orderStatus.OrderStatusForm[0].body);
        },

        orderStatusOptions: function (parameters) {
            if (parameters) {
                $o.forms.orderOptions = parameters;
                $o.storage.local.set("oct8ne-order-options", JSON.stringify(parameters));
            }
            else if (!$o.forms.orderOptions) {
                $o.forms.orderOptions = JSON.parse($o.storage.local.get("oct8ne-order-options"));
            }
            return $o.forms.orderOptions;

        },

        createForm: function (parameters, recoveredMessage) {
            if (!parameters.Body || !parameters.Body.hasOwnProperty("Original")) {
                parameters.Body = { Original: parameters.Body, Translated: false };
            }
            if (parameters.Type == $o.forms.type.ACCESSFORM && typeof parameters.Body == 'string') { parameters.Body.Original = JSON.parse(parameters.Body.Original) };
            $o.speak.messages.push(new $o.speak.form({
                body: parameters.Body.Original,
                room: parameters.Room ? parameters.Room : $o.core.globalVariables.room,
                sessionSummaryId: $o.core.globalVariables.userType == "V" ? $o.variablesVisitor.sessionSummaryId : $o.core.globalVariables.sessionSummaryId,
                tokens: parameters.Tokens,
                sentBy: parameters.SentBy,
                type: parameters.Type,
                id: parameters.Id,
                response: [],
                name: parameters.Name
            }));

            if (!recoveredMessage) {
                $o.forms.updateScroll(10000);
            }
        },
        
        createDocs: function (parameters, recoveredMessage) {
            if (!parameters.Body  || !parameters.Body.hasOwnProperty("Original")) {parameters.Body = {Original: parameters.Body,Translated: false}}
            $o.speak.messages.push(new $o.speak.docs({
                body: parameters.Body.Original,
                tokens: parameters.Tokens,
                sentBy: parameters.SentBy,
                type: parameters.Type,
                id: parameters.Id,
                response: [],
                name: parameters.Name
            }));

            if (!recoveredMessage) {
                $o.forms.updateScroll(10000);
            }
           
        },

        sendFormResponse: function (id, answer) {
            var formInArray = $o.forms.getForm(id);
            if (formInArray.length === 1) {
                var response = {
                    Id: id,
                    Response: answer,
                    Category: "RESPONSE",
                    Room: formInArray[0].room,
                    SessionSummaryId: formInArray[0].sessionSummaryId,
                    SentBy: $o.core.globalVariables.userType,
                };

                $o.forms.updateFormWithResponse(response);

                response.Response = JSON.stringify(response.Response);

                if ($o.core.isSignalRConnected()) $o.hubsOut.sendFormResponse(response);
                $o.saveRecord.formResponse(response.Id, response.Response, response.Room, response.SessionSummaryId);
            }
        },

        updateFormWithResponse: function (response) {          
            
            var form = $o.forms.getForm(response.Id);    
            if (form.length === 1) {
                if (form[0].type === "DOCUMENT" && $o.core.globalVariables.userType === "A") {
                    var profile = { name: response.Response[0], email: response.Response[1] };
                    $o.agentInfoVisitorVM.info.updateVisitorProfile(profile);                
                }
                form[0].response(response.Response);
            }          
        },

        getForm: function (id) {
            var form = ko.utils.arrayFilter($o.speak.messages(), function (current) {
                return current.id === id;
            });  
            return form;
        },

        getUrlFromUploadIframe: function (url) {
            if (typeof url.data === 'string') {
                var data = url.data.split(",");
                if (data[2] == "UPLOAD") {
                    var fileUrl = data[0];
                    var isImage = $o.forms.imageValidator(fileUrl);

                    if (isImage) { //Image goes to coviewer
                        var random = Math.floor((Math.random() * 1000000) + 1);
                        var internalId = "Oct8neUpload-" + random;
                        var product = $o.carousel.getProductFromUpload(internalId, fileUrl, $o.core.globalVariables.userType);
                        $o.carousel.addMediaFromUploadUI();
                        $o.carousel.sendProductToCarousel(product, $o.carousel.lists.VIEWED, $o.carousel.actions.VIEWINCANVA);
                    } else { //Any file goes to chat in under linf format , pdf,xls,etc...
                       $o.forms.sendDoc(fileUrl);
                        $o.carousel.addDocFromUploadUI();
                    }
                }
            } else {
                return;
            }
        },

        sendDoc: function (fileUrl) {
            var extension = fileUrl.split('.').pop().toLowerCase();
            var doc = {
                Body: {
                    Original: fileUrl,
                    Translated:false
                },
                Room: $o.core.globalVariables.room,
                SentBy: $o.core.globalVariables.userType,
                Type: extension,
                Category: "DOCS",
                Id: $o.tools.generateRandomId()
            };

            $o.forms.createDocs(doc);
            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendMessage(doc);
            }
            $o.saveRecord.documentLink(extension, fileUrl);
        },

        sessionToEmailForm: function (stringEmail, sendEmail) { //DEPRECATED??
            $o.forms.sessionToEmail.sendEmail = sendEmail;
            $o.forms.sessionToEmail.Email = stringEmail;
        },

        imageValidator: function (fileUrl) {
            var extension = fileUrl.split('.').pop().toLowerCase();
            var isImage = $o.forms.extensionImageArray.indexOf(extension) > -1;
            return isImage;
        },

        closeSession: function () {
                //parent.postMessage("CLOSESESSION", "*");
            $.connection.hub.stop();
            $o.core.agentsConnected = false;
            var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
            $o.visitorStart.changeStatus(queryString, "Finalized");
            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.status, value: "Finalized" }]);
        },

        sendCustomForm: function (formType, totalFields) { //ENVIA FORMULARIO PERSONALIZADO DENTRO CHAT
            var form = $("#custom-wrapper-" + formType);
            var data = [];
            var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
            var canPass = $o.settings.privacyPolicy.length ? false : true;

            if ($o.settings.privacyPolicy.length) {
                var accept = form.find("input[type='checkbox']");
                if (!accept.is(":checked")) {
                    accept.parent().addClass("data-contact-error");
                } else {
                    canPass = true;
                    accept.parent().removeClass("data-contact-error");
                };
            };

            if (form.find("input[type='email']").length) {     //Validación de mail solamente
                var emailField = form.find("input[type='email']");
                var email = emailField.val();
                emailField.removeClass("data-contact-error");
                if (!regex.test(email)) {
                    emailField.addClass("data-contact-error");
                    canPass = false;
                    return;
                };
            };

            if (canPass) {
                for (var i = 0; i < totalFields; i++) { //Montar array de respuestas

                    var value = form.find("input[name='custom-fields-" + i + "']").val();

                    if (!value) {
                        value = form.find("select[name='custom-fields-" + i + "']").val();
                    }
                    data.push(value);
                }
                var id = form.find("a").attr("data-form-id");
                $o.forms.sendFormResponse(id, data);
            };
        },

        sendSummaryCustomForm: function(formType, totalFields) { //ENVIA FORMULARIO PERSONALIZADO DENTRO CHAT
            var form = $("#custom-wrapper-" + formType);
            var data = [];
            var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
            var canPass = $o.settings.privacyPolicy.length ? false : true;
            var emailField = form.find("input[type='email']");
            var email = emailField.val();

            if ($o.settings.privacyPolicy.length) {
                var accept = form.find("input[type='checkbox']");
                if (!accept.is(":checked")) {
                    accept.parent().addClass("data-contact-error");
                } else {
                    canPass = true;
                    accept.parent().removeClass("data-contact-error");
                };
            };

            if (form.find("input[type='email']").length) {     //Validación de mail solamente
               // var emailField = form.find("input[type='email']");
              //  var email = emailField.val();
                emailField.removeClass("data-contact-error");
                if (!regex.test(email)) {
                    emailField.addClass("data-contact-error");
                    canPass = false;
                    return;
                };
            };

            if (canPass) {
                for (var i = 0; i < totalFields; i++) { //Montar array de respuestas
                    var value = form.find("input[name='custom-fields-" + i + "']").val();
                    data.push(value);
                }
                var id = form.find("a").attr("data-form-id");
                $o.forms.sendFormResponse(id, data);
                $o.visitorSearch.getRecordsMailInfo(email);
            };
        },


    sessionToEmail: {
            sendEmail: false,
            Email: ""
    },

      
    type: {
            CALLBACK: "CALLBACK",
            SENDCONTACT: "SENDCONTACT",
            SKYPE: "SKYPE",
            DOCUMENT: "DOCUMENT",
            SENDSESSION: "SENDSESSION",
            VISITORUPLOAD: "VISITORUPLOAD",
            ACCESSFORM: "ACCESSFORM",
            ASKFORSS: "ASKFORSS",
            ORDER: "ORDER",
            VALORATION: "VALORATION",
            STARSVALORATION: "STARSVALORATION"
    },
    extensionImageArray: ['gif', 'png', 'jpg', 'jpeg', 'bmp', 'otf'],
    };

})(window);

if (window.addEventListener) addEventListener("message", $o.forms.getUrlFromUploadIframe, false);
else attachEvent("onmessage", $o.forms.getUrlFromUploadIframe);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.productsChat = {
        init: function () {
            // se utiliza en los productos que envia el agente
            $("#oct8ne-chat-room").on("click", ".holder", function () {
                var attr = $(this).find("div").attr('data-internalid');
                if (typeof attr !== typeof undefined && attr !== false) {
                    if ($o.core.globalVariables.userType == "V") {
                        if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT) {
                            if ($o.core.globalVariables.showSearch != "True" || $o.core.globalVariables.edition == $o.core.editions.FREE) {
                                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.VIEWER);
                            } else {
                                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
                            }
                            $("#pending-products").hide();
                            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.pendingProducts, value: "" }]);
                        }
                    }
                    if (attr != $o.core.globalVariables.internalId && !$o.search.sendingProductToCanva) {
                        $o.search.sendingProductToCanva = true;
                        $o.carousel.sentProductToCanva(attr);
                        viewedVM.setActiveTab();
                    }
                    $o.sideBubbles.hide();
                }
            });
        },

        sentProductByAgent: function (parameters) {
            if (parameters.InternalId.indexOf("Oct8neUpload") === -1) {
                $o.productsChat.createSentProductMessage(parameters);
                $o.productsChat.agentSentProducts.push(parameters.InternalId);
            }
        },

        sentManyProductsByAgent: function (parameters) {            
                $o.productsChat.createManyProductsMessage(parameters);
                $o.productsChat.agentSentProducts.push(parameters.InternalId);            
        },

        createSentProductMessage: function (parameters) {
            parameters.Name = $o.core.userType == "V" ? $o.core.globalVariables.otherName : $o.core.globalVariables.myName;
            parameters.Body = culture.coviewer.TakeALook + "<br/><b>" + parameters.Title + "</b>";
            $o.speak.messages.push(new $o.speak.product({
                body: parameters.Body,
                tokens: parameters.Tokens,
                sentBy: "A",
                name: parameters.Name,
                time: parameters.Time ? parameters.Time : $o.speak.getMessageTime(),
                internalId: parameters.InternalId,
                thumbnail: parameters.URLMedia
            }));
            $o.scroll.moveChatToBottom();
        },

        createManyProductsMessage: function (parameters) {
            parameters.Name = $o.core.userType == "V" ? $o.core.globalVariables.otherName : $o.core.globalVariables.myName;
            parameters.Body = culture.coviewer.ViewManyProducts,
            $o.speak.messages.push(new $o.speak.manyProducts({
                body: parameters.Body,
                tokens: parameters.Tokens,
                sentBy: "A",
                name: parameters.Name,
                time: parameters.Time ? parameters.Time : $o.speak.getMessageTime(),
                internalId: parameters.InternalId,
                thumbnail: parameters.URLMedia
            }));
            $o.scroll.moveChatToBottom();
        },
        agentSentProducts: [],
    };
})(window); window.oct8ne = window.$o = window.oct8ne || {};;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.speak = {
        init: function () {
            $o.chat.init();
            $o.productsChat.init();
        },

        getMessageTime: function () {
            var date = new Date(),
                hours = date.getHours(),
                minutes = date.getMinutes();
            // ampm = hours >= 12 ? 'PM' : 'AM';
            //hours = hours % 12;
            //hours = hours ? hours : 12;
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var strTime = hours + ':' + minutes;
            return strTime;
        },

        messages: ko.observableArray([]),

        translatorEnabled: ko.observable(false),

        chat: function (data) {
            this.category = "CHAT";
            this.body = data.body;
            this.translation = ko.observable(data.translation);
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.id = data.id;
            this.viewing = data.translation;
            this.agentImg = data.agentImg;
            this.validationCode = data.validationCode;
        },

        product: function (data) {
            this.category = "PRODUCT";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.internalId = data.internalId;
            this.thumbnail = data.thumbnail;
        },

        manyProducts: function (data) {
            this.category = "MANY_PRODUCTS";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.internalId = data.internalId;
            this.thumbnail = data.thumbnail;
        },

        canned: function (data) {
            this.category = "CANNED";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.type = data.type;
            this.id = data.id;
            this.response = ko.observable(data.response);
        },

        validation: function (data) {
            this.category = "VALIDATION";
            this.code = data.code;
            this.lastMessage = data.lastMessage;
        },
      
        gdpr: function (data) {
            this.category = "GDPR";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.type = data.type;
            this.id = data.id;
            this.response = ko.observable(data.response);
        },

        form: function (data) {
            this.category = "FORM";
            this.body = data.body;
            this.tokens = data.tokens;
            this.room = data.room;
            this.sessionSummaryId = data.sessionSummaryId;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.type = data.type;
            this.id = data.id;
            this.response = ko.observableArray(data.response);
        },

        docs: function (data) {
            this.category = "DOCS";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.type = data.type;
            this.id = data.id;
            this.response = ko.observableArray(data.response);
        },

        supervisorChat: function (data) {
            this.category = "SUPERVISOR";
            this.body = data.body;
            this.tokens = data.tokens;
            this.sentBy = data.sentBy;
            this.name = data.name;
            this.time = data.time;
            this.role = data.role;
            this.room = data.room;
            this.id = data.id;
        },

    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.translate = {
        toggleTranslation: function (license, status, agentLanguage, visitorLanguage) {
            $o.translate.isEnabled = status == "true" || status === true ? true : false;
            $o.translate.setApiKey(license);

            //para controlar parametros vista en knockout
            $o.speak.translatorEnabled($o.translate.isEnabled);
            $o.translate.agentLanguage = agentLanguage;
            $o.translate.visitorLanguage = visitorLanguage;
            if ($o.core.globalVariables.userType == "A") $o.translateAgent.visitorLanguageDetected = true;
        },

        startTranslation: function (message, type, action) {
            $o.translate.message = message;
            $o.translate.messageType = type;
            action = action || $o.translate.actions.TRANSLATE;          
            if (($o.translate.isEnabled === true || action == $o.translate.actions.DETECT || action == $o.translate.actions.GETLANGUAGELIST)) { //remove message fetures http from 'if'. It works better!
                $o.translate.providerAPIS[$o.translate.provider](action);
            } else {
                $o.translate.translationCallback();
            }
        },

        translationCallback: function (translatedMessage) {
            var translation = translatedMessage ? translatedMessage : "";
            $o.translate.message = {
                original: $o.translate.message,
                translated: translation
            };
            if ($o.translate.messageType == $o.translate.messageTypes.CHAT) {
                if ($o.core.globalVariables.userType == "A" && $o.translateAgent.waitingForReview) {
                    $o.translateAgent.reviewTranslation($o.translate.message);
                } else {
                    $o.chat.send($o.translate.message);
                }
            };
            if ($o.translate.messageType == $o.translate.messageTypes.CANNED) { };
            if ($o.translate.messageType == $o.translate.messageTypes.FORM) { };
        },

        //GOOGLE TRANSLATION API
        providerAPIS: {
            GOOGLE: function (action) {

                var targetLanguage = $o.core.globalVariables.userType == "A" ? $o.translate.visitorLanguage : $o.translate.agentLanguage;
                var sourceLanguage = $o.core.globalVariables.userType == "A" ? $o.translate.agentLanguage : $o.translate.visitorLanguage;
                var staticUrl = "https://translation.googleapis.com/language/translate/v2",
                    actionUrl = "",
                    querystring = "?key=" + $o.translate.apiKey,
                    data = { 'q': $o.translate.message, 'source': sourceLanguage, 'target': targetLanguage };

                //url por defecto para TRANSLATE y PREVIOUS es 'https://translation.googleapis.com/language/translate/v2?key='+$o.translate.apiKey
                if (action == $o.translate.actions.DETECT) {
                    actionUrl = "/detect";
                    data = { 'q': $o.translate.message }
                }

                if (action == $o.translate.actions.PREVIOUS) {
                    //si al acción es previous el agente traduce para si mismo no para el visitor, por lo que traduce del idioma del visitor a su propio idioma
                    data = { 'q': $o.translate.message, 'source': targetLanguage, 'target': sourceLanguage };
                }

                //if (action == $o.translate.actions.GETLANGUAGELIST) {
                //    actionUrl = "/languages";
                //    data = { 'target': $o.translate.agentLanguage }
                //}

                $.post(staticUrl + actionUrl + querystring, data)
                    .done(function (result) {
                        var translatedText = "";
                        if (action == $o.translate.actions.TRANSLATE) {
                            translatedText = result.data.translations[0].translatedText.replace(/&#39;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "&");
                            $o.translate.translationCallback(translatedText);
                        }
                        //acciones del agente
                        if (action == $o.translate.actions.DETECT) {
                            $o.translateAgent.setVisitorLanguage(result.data.detections[0][0].language, true);
                        }
                        if (action == $o.translate.actions.PREVIOUS) {
                            translatedText = result.data.translations[0].translatedText.replace(/&#39;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "&");
                            $o.translateAgent.updatePreviousMessageWithTranslation(translatedText);
                        }
                        //if (action == $o.translate.actions.GETLANGUAGELIST) {
                        //    $o.translateAgent.printLanguagesList(result.data.languages);
                        //}
                    })
                    .fail(function (xhr, status, error) {
                        //Control de fallos en la api                        
                        if (action == $o.translate.actions.TRANSLATE) { $o.translate.translationCallback($o.translate.message); }
                        if (action == $o.translate.actions.DETECT) { $o.translateAgent.setVisitorLanguage($o.translate.agentLanguage); }
                        if (action == $o.translate.actions.PREVIOUS) { $o.translateAgent.updatePreviousMessageWithTranslation($o.translate.message); }
                      //  if (action == $o.translate.actions.GETLANGUAGELIST) { $o.translateAgent.printLanguagesList(); }
                    });

            }
        },
        setApiKey: function (license) {
            $o.translate.apiKey = license;
        },
        isEnabled: false,
        providers: {
            GOOGLE: {
                name: "GOOGLE",
                logos: {
                    toolBox: "<span class='google-logo icon-agent-translator-logo'><span>Powered by</span></span>",
                    chatInput: "<span class='icon-agent-translator-logo google-logo'></span>"
                }
            }
        },
        apiKey: "",
        provider: "GOOGLE",
        message: null,
        messageTypes: {
            CHAT: "CHAT",
            CANNED: "CANNED",
            FORM: "FORM"
        },
        actions: {
            DETECT: "DETECT",
            TRANSLATE: "TRANSLATE",
            PREVIOUS: "PREVIOUS",
            //GETLANGUAGELIST: "GETLANGUAGELIST"
        },
        agentLanguage: "",
        visitorLanguage: ""
    };
})(window);;
/*!
 *		Curve version 2.0
 *
 *		Smooth curves (cardinal splines) on canvas.
 *
 *		By Ken Fyrstenberg Nilsen (c) 2013
 *		Abdias Software, http://abdiassoftware.com/
 *
 *		MIT licensed.
*/
/**
 *		Uses an array of points (x,y) to draw a smooth curve (cardinal
 *		spline). There is no use of control points, and the curve is
 *		drawn through each point.
 *
 *		USAGE:
 *
 *			context.curve(points, tension, numberOfSegments, minSegs)
 *
 *			curve(array)
 *			curve(array, float)
 *			curve(array, float, integer)
 *			curve(array, float, integer, integer)
 *
 *		points
 *			Array of float or integers arranged as:
 *			[x1, y1, x2, y1, ..., xn, yn]. Minimum two points is
 *			required.
 *
 *		tension (optional)
 *			[0, 1], 0 = no smoothing, 0.5 = smooth (default), 1 = very
 *			smoothed.  Tension value may be outside the interval to
 *			create curles at the junction points.
 *
 *		numberOfSegments (optional)
 *			Defaults to -4 (adaptive 25%). If positive value 1 - n each
 *			line between two points will be split in number of segments
 *			(aka resolution). The higher value the higher resolution.
 *			If a negative value -1 to n the line will be divided
 *			dynamically based on line length and 1 / segments. Default
 *			is -4 which means the line will be split into 25% segments
 *			of line length between two points. The lower value the lower
 *			resolution.
 *			The default value should be OK for most scenarios but to get
 *			more speed you can use static values instead which gives
 *			best result if the line lengths between points are somewhat
 *			similar in length.
 *
 *		minSegs (optional, only used with adaptive mode)
 *			Minimum number of segments when using adaptive mode.
 *			Default value is 7. This is to avoid short distanced lines
 *			with a steep curve becoming low resolution as only the
 *			distance between the two actual points making the line is
 *			measured (the curved result could be much longer).
 *
 *		NOTE: point array must contain a minimum set of two points.
*/
if (typeof CanvasRenderingContext2D !== 'undefined') {
	CanvasRenderingContext2D.prototype.curve = function(ptsa, tension, numOfSegments, minSegments) {

		var pts, res = [],			/// clone array
			x, y,					/// our x,y coords
			t1x, t2x, t1y, t2y,		/// tension vectors
			c1, c2, c3, c4,			/// cardinal points
			st, t, i,				/// steps based on num. of segments
			pow3, pow2,				/// cache powers
			pow32, pow23,
			p0, p1, p2, p3,			/// cache points
			pl = ptsa.length,
			as = false, dx, dy,		/// adaptive segmentation
			aseg = 0.25,
			minSeg = 7;

		// use input value if provided, or use a default value	 
		tension = (typeof tension === 'number') ? tension : 0.5;

		if (typeof numOfSegments === 'number') {
			numOfSegments = parseInt(numOfSegments, 10);
			if (numOfSegments === 0) numOfSegments = -4;
			as = numOfSegments < 0 ? true : false;
			aseg = 1 / Math.abs(numOfSegments);

			if (as === true)
				minSeg = (typeof minSegments === 'number') ? parseInt(minSegments, 10) : 7;
				if (minSeg < 1) minSeg = 1;
		} else {
			as = true;
		}

		pts = ptsa.concat();		/// clone array so we don't change the original content

		pts.unshift(ptsa[1]);		/// copy 1. point and insert at beginning
		pts.unshift(ptsa[0]);
		pts.push(ptsa[pl - 2], ptsa[pl - 1]);	/// copy last point and append

		/// 1. loop goes through point array
		/// 2. loop goes through each segment between the two points + one point before and after
		for (i = 2; i < pl; i += 2) {

			p0 = pts[i];
			p1 = pts[i + 1];
			p2 = pts[i + 2];
			p3 = pts[i + 3];

			/// calc tension vectors
			t1x = (p2 - pts[i - 2]) * tension;
			t2x = (pts[i + 4] - p0) * tension;

			t1y = (p3 - pts[i - 1]) * tension;
			t2y = (pts[i + 5] - p1) * tension;

			if (as === true) {
				dx = p2 - p0;
				dy = p3 - p0;
				numOfSegments = (Math.max(minSeg, Math.abs(Math.sqrt(dx * dx + dy * dy)) * aseg + 0.5))|0;
			}

			for(t = 0; t <= numOfSegments; t++) {

				/// calc step
				st = t / numOfSegments;
			
				pow2 = Math.pow(st, 2);
				pow3 = pow2 * st;
				pow23 = pow2 * 3;
				pow32 = pow3 * 2;

				/// calc cardinals
				c1 = pow32 - pow23 + 1; 
				c2 = pow23 - pow32;
				c3 = pow3 - 2 * pow2 + st; 
				c4 = pow3 - pow2;

				/// calc x and y cords with common control vectors
				x = c1 * p0 + c2 * p2 + c3 * t1x + c4 * t2x;
				y = c1 * p1 + c2 * p3 + c3 * t1y + c4 * t2y;
			
			    /// store points in array
				this.lineTo(x, y);
			}
		}
		return this;
	}
}
 ;
var Oct8ne;
(function (Oct8ne) {
    var Drawings;
    (function (Drawings) {
        var DrawingBoard = (function () {
            function DrawingBoard(drawingContext, container, localCanvas, remoteCanvas, currentUserId, currentResourceId) {
                this.drawingContext = drawingContext;
                this.currentUserId = currentUserId;
                this.currentResourceId = currentResourceId;
                this.isDrawing = false;
                this.currentColor = "black";
                this.currentSegmentPoints = [];
                this.backgroundSegments = [];
                this.remoteActionsQueue = {};
                this.changed = false;
                this.segmentCounter = 1;
                this.drawingBoardErased = false;
                this.isCanvasVisible = true;
                this.minDistanceBetweenPoints = DrawingBoard.MEDIUM_DISTANCE_BETWEEN_POINTS;
                //#endregion
                this.processingVolatileDrawings = false;
                this.container = $(container);

                this.initialWidth = this.container.width();
                this.localCanvasElement = $(localCanvas);
                this.remoteCanvasElement = $(remoteCanvas);
                this.localCanvasContext = localCanvas.getContext("2d");
                this.remoteCanvasContext = remoteCanvas.getContext("2d");
            }
            //#region Canvas management public methods
            DrawingBoard.prototype.hideDrawings = function () {
                this.isCanvasVisible = false;
                this.localCanvasElement.hide();
                this.remoteCanvasElement.hide();
            };
            DrawingBoard.prototype.showDrawings = function () {
                this.isCanvasVisible = true;
            };
            DrawingBoard.prototype.setColor = function (color) {
                this.currentColor = color;
            };
            DrawingBoard.prototype.getColor = function (color) {
                return this.currentColor;
            };

            DrawingBoard.prototype.setCurrentResourceId = function (resourceId) {
                this.currentResourceId = resourceId;
            };
            DrawingBoard.prototype.setCanvasDimensions = function (width, height,isNewImage) {
                this.imageWidth = width;
                this.imageHeight = height;
                //actualizamos initialWidth solo si es nueva imagen
                if (isNewImage) this.initialWidth = width;
                if (!this.isCanvasVisible) {
                    return;
                }
                this.localCanvasElement.attr("lineWidth", "2px");
                this.remoteCanvasElement.attr("lineWidth", "2px");
                this.remoteCanvasElement.attr("width", width);
                this.remoteCanvasElement.attr("height", height);
                this.remoteCanvasContext.canvas.width = width;
                this.remoteCanvasContext.canvas.height = height;
                this.imageScale = width / this.initialWidth;
                this.remoteCanvasContext.scale(this.imageScale, this.imageScale);
                this.redrawBackground(true);
                this.minDistanceBetweenPoints = (DrawingBoard.MEDIUM_DISTANCE_BETWEEN_POINTS / this.imageScale);
                if (this.minDistanceBetweenPoints < DrawingBoard.MINIMUM_DISTANCE_BETWEEN_POINTS)
                    this.minDistanceBetweenPoints = DrawingBoard.MINIMUM_DISTANCE_BETWEEN_POINTS;
                this.localCanvasElement.css({ width: width, height: height
                });
                this.localCanvasElement.attr("width", width);
                this.localCanvasElement.attr("height", height);
                this.localCanvasContext.canvas.width = width;
                this.localCanvasContext.canvas.height = height;
                this.localCanvasContext.scale(this.imageScale, this.imageScale);
                this.localCanvasElement.show();
                this.remoteCanvasElement.show();
        };
            //#endregion
            //#region Resizing public methods
            DrawingBoard.prototype.onBeginResize = function () {
                if (this.isDrawing) {
                    this.currentSegmentPoints =[];
                    this.endDraw();
        }
            };
            DrawingBoard.prototype.onEndResize = function () {
                var _this = this;
                if (this.isDrawing) {
                    this.currentSegmentPoints =[];
                    this.endDraw();
                    return;
                }
                if (this.resizeTimer) {
                    clearTimeout(this.resizeTimer);
                }
                this.resizeTimer = setTimeout(function () {
                    var container = _this.getContainerDimensions();
                    _this.remoteCanvasElement.attr("width", container.width);
                    _this.remoteCanvasElement.attr("height", container.height);
                    var scale = container.width / container.height;
                    _this.remoteCanvasContext.scale(scale, scale);
                    _this.redrawBackground(true);
                    _this.localCanvasElement.attr("width", container.width);
                    _this.localCanvasElement.attr("height", container.height);
                    _this.localCanvasContext.scale(scale, scale);
            }, 500);
        };
            //#endregion
            //#region Remote events
            DrawingBoard.prototype.addRemoteSegment = function (segment) {
                if (segment.points.length === 0)
                    return;
                this.drawingBoardErased = false;
                if (this.remoteActionsQueue[segment.userId]) {
                    this.remoteActionsQueue[segment.userId].push({ action: "draw", segment: segment
                });
                }
                else {
                    this.remoteActionsQueue[segment.userId]=[{ action: "draw", segment: segment
                }];
                this.startDrawingAnimation(segment.userId);
        }
            };
            DrawingBoard.prototype.addDeleteSegment = function (segmentId, userId) {
                this.drawingBoardErased = false;
                if (this.remoteActionsQueue[userId]) {
                    this.remoteActionsQueue[userId].push({ action: "deletesegment", id: segmentId, userId: userId
                });
                }
                else {
                    this.remoteActionsQueue[userId]=[{ action: "deletesegment", id: segmentId, userId: userId
                }];
                this.startDrawingAnimation(userId);
        }
            };
            DrawingBoard.prototype.getCurrentDrawings = function () {
                var drawings =[];
                for (var i = 0; i < this.backgroundSegments.length; i++) {
                    var segment = this.backgroundSegments[i];
                    drawings.push({ id: segment.id, userId: segment.userId, color: segment.color, points: segment.points
            });
                }
                return drawings;
        };
            //#region Volatile drawings management
            DrawingBoard.prototype.startVolatileDrawingsDeletion = function () {
                var _this = this;
                if (this.processingVolatileDrawings)
                    return;
                this.processingVolatileDrawings = true;
                setTimeout(function () { return _this.deleteVolatileDrawings();
            }, 500);
            };
            DrawingBoard.prototype.deleteVolatileDrawings = function () {
                var pending = false;
                var currentMs = new Date().getTime();
                var backgroundSegments = this.backgroundSegments.slice(0) ;
                for (var i = 0; i < backgroundSegments.length; i++) {
                    var seg = backgroundSegments[i];
                    if (seg.deletion && currentMs > seg.deletion) {
                        this.addDeleteSegment(seg.id, seg.userId);
                    }
                    else if (seg.deletion) {
                        pending = true;
            }
                }
                this.processingVolatileDrawings = false;
                if (pending) {
                    this.startVolatileDrawingsDeletion();
        }
        };
            //#endregion
            //#region Drawing animation queue
            DrawingBoard.prototype.startDrawingAnimation = function (userId) {
                var delay = 80;
                var that = this;
                var currentAction = this.remoteActionsQueue[userId].shift();
                var currentPoint = 2;
                processAction();
                function processAction() {
                    if (!currentAction || (currentAction.segment && currentAction.segment.resourceId !== that.currentResourceId)) {
                        return;
                }
                if (that.drawingBoardErased) {
                        that.drawingBoardErased = false;
                        that.drawingContext.getPencil(userId).clearQueue().delay(1000).hide("slow");
                        delete that.remoteActionsQueue[userId];
                    return;
                }
                if (currentAction.action === "draw") {
                        var currentSegment = currentAction.segment;
                    that.changed = true;
                        var ptsToDraw = currentSegment.points.slice(0, currentPoint);
                        movePencilToImageCoord(currentSegment.points[currentPoint], currentSegment.points[currentPoint +1]);
                        that.drawPoints(that.remoteCanvasContext, currentSegment.color, ptsToDraw);
                    currentPoint += 2;
                        if (currentPoint > currentSegment.points.length) {
                            currentPoint = 0;
                            that.backgroundSegments.push(currentSegment);
                            that.drawSegment(that.remoteCanvasContext, currentSegment);
                            currentSegment.deletion = currentSegment.isPermanent ? null: ((new Date().getTime()) +DrawingBoard.MILLISECONDS_FOR_VOLATILE_DRAWINGS);
                            changeToNextAction();
                            if (currentSegment.deletion) {
                                that.startVolatileDrawingsDeletion();
                        }
                }
                }
                    else if (currentAction.action === "deletesegment") {
                        that.deleteBackgroundSegment(currentAction.id, currentAction.userId);
                        changeToNextAction();
                    }
                    else {
                        changeToNextAction();
                }
                if (currentAction) {
                        setTimeout(processAction, delay);
                }
                else {
                        that.drawingContext.getPencil(userId).clearQueue().delay(1000).fadeOut("slow");
                        delete that.remoteActionsQueue[userId];
                }
                    function changeToNextAction() {
                        if (that.remoteActionsQueue[userId]&& that.remoteActionsQueue[userId].length > 0) {
                            currentAction = that.remoteActionsQueue[userId].shift();
                        }
                        else {
                            currentAction = null;
                    }
                }
                    function movePencilToImageCoord(left, top) {
                        var containerPosition = that.container.position();
                        var pencil = that.drawingContext.getPencil(userId);
                        var pl = left * that.imageScale;
                        var pt = top * that.imageScale;
                        pencil.clearQueue().css({ left: pl +containerPosition.left + "px", top: pt +containerPosition.top + "px"
                    }).show();
            }
        }
            };
            DrawingBoard.prototype.deleteBackgroundSegment = function (segmentId, userId) {
                for (var i = 0; i < this.backgroundSegments.length; i++) {
                    var seg = this.backgroundSegments[i];
                    if (seg.id == segmentId && seg.userId == userId) {
                        this.backgroundSegments.splice(i, 1);
                        this.clearCanvas(this.remoteCanvasContext);
                        this.clearCanvas(this.localCanvasContext);
                        this.redrawBackground(true);
                        break;
            }
        }
        };
            // #endregion
            //#region Drawing
            DrawingBoard.prototype.beginDraw = function (left, top, isPermanent) {
                this.isDrawing = true;
                this.isCurrentDrawingPermanent = isPermanent;
                this.onPencilMoved(left, top);
            };
            DrawingBoard.prototype.onPencilMoved = function (left, top) {
                var currentTimer = new Date().getTime();
                var deltaX = Math.abs(left -this.prevLeft);
                var deltaY = Math.abs(top -this.prevTop);
                var tooNear = Math.sqrt(deltaX * deltaX +deltaY * deltaY) < this.minDistanceBetweenPoints;
                var oneMomentAgo = (currentTimer - this.lastPointTime < DrawingBoard.MAX_DELAY_BETWEEN_POINTS);
                if (!tooNear && !oneMomentAgo) {
                    this.addAndDrawPoint(left, top);
                    this.lastPointTime = currentTimer;
                    this.prevLeft = left;
                    this.prevTop = top;
        }
            };
            DrawingBoard.prototype.endDraw = function () {
                if (this.isDrawing) {
                    this.isDrawing = false;
                    this.changed = true;
                    this.submitCurrentSegment();
        }
            };
            DrawingBoard.prototype.clearAll = function () {
                this.clearCanvas(this.localCanvasContext);
                this.clearCanvas(this.remoteCanvasContext);
                this.currentSegmentPoints =[];
                this.backgroundSegments =[];
                this.remoteActionsQueue =[];
                this.drawingBoardErased = true;
            };
            DrawingBoard.prototype.submitCurrentSegment = function (isPartial) { 
                if (isPartial === void 0) {
isPartial = false;
            }
                            if (this.currentSegmentPoints.length == 0)
                    return;
                var newSegment = new Drawings.Segment();
                newSegment.resourceId = this.currentResourceId;
                newSegment.color = this.currentColor;
                newSegment.points = this.currentSegmentPoints;
                newSegment.deletion = this.isCurrentDrawingPermanent ? null: ((new Date()).getTime()) +DrawingBoard.MILLISECONDS_FOR_VOLATILE_DRAWINGS;
                newSegment.id = this.segmentCounter++;
                newSegment.userId = this.currentUserId;
                this.backgroundSegments.push(newSegment);
                this.changed = true;
                var lastPointX = this.currentSegmentPoints[this.currentSegmentPoints.length -2];
                var lastPointY = this.currentSegmentPoints[this.currentSegmentPoints.length -1];
                // Broadcast!
                this.drawingContext.sendDrawingSegment(newSegment.points, newSegment.color, this.isCurrentDrawingPermanent, newSegment.id);
                if (isPartial) {
                    this.currentSegmentPoints =[lastPointX, lastPointY];
                }
                else {
                    this.currentSegmentPoints =[];
                }
                this.drawSegment(this.remoteCanvasContext, newSegment);
                this.clearCanvas(this.localCanvasContext);
                if (!this.isCurrentDrawingPermanent) {
                    this.startVolatileDrawingsDeletion();
        }
            };
            DrawingBoard.prototype.addAndDrawPoint = function (left, top) {
                this.currentSegmentPoints.push(+left.toFixed(2));
                this.currentSegmentPoints.push(+top.toFixed(2));
                if (this.currentSegmentPoints.length > 2 * DrawingBoard.UPDATE_PEERS_EVERY_POINTS) {
                    this.submitCurrentSegment(true);
                }
                this.clearCanvas(this.localCanvasContext);
                this.drawPoints(this.localCanvasContext, this.currentColor, this.currentSegmentPoints);
            };
            DrawingBoard.prototype.drawSegment = function (drawingCtx, segment) {
                this.drawPoints(drawingCtx, segment.color, segment.points);
            };
            DrawingBoard.prototype.drawPoints = function (drawingCtx, color, points, lineWidth) { 
                if (lineWidth === void 0) { lineWidth = DrawingBoard.DEFAULT_PEN_SIZE; }
                drawingCtx.beginPath();
                drawingCtx.lineWidth = lineWidth;
                if (DrawingBoard.SHOW_KEY_POINTS) {
                    drawingCtx.fillStyle = "red";
                    var kpSize = DrawingBoard.DEFAULT_PEN_SIZE +1;
                    for (var i = 0; i < points.length; i += 2) {
                        drawingCtx.fillRect(points[i]- kpSize, points[i + 1]- kpSize, kpSize * 2, kpSize * 2);
            }
                }
                drawingCtx.strokeStyle = color;
                drawingCtx.curve(points);
                drawingCtx.stroke();
        };
            //#endregion
            //#region Private functions
            DrawingBoard.prototype.getContainerDimensions = function () {
                return { width: this.container.width(), height: this.container.height()
        };
            };
            DrawingBoard.prototype.redrawBackground = function (force) { 
                if (force === void 0) {
force = false;
            }
                            if (!this.changed && !force)
                    return;
                for (var i = 0; i < this.backgroundSegments.length; i++) {
                    var segment = this.backgroundSegments[i];
                    this.remoteCanvasContext.beginPath();
                    this.remoteCanvasContext.lineWidth = DrawingBoard.DEFAULT_PEN_SIZE;
                    this.remoteCanvasContext.strokeStyle = segment.color;
                    this.remoteCanvasContext.moveTo(segment.points[0], segment.points[1]);
                    this.remoteCanvasContext.curve(segment.points);
                    this.remoteCanvasContext.stroke();
                }
                this.changed = false;
            };
            DrawingBoard.prototype.highlightSegment = function (segment) {
                this.clearCanvas(this.localCanvasContext);
                this.drawPoints(this.localCanvasContext, "red", segment.points, 8);
            };
            DrawingBoard.prototype.dehighlightSegment = function (segment) {
                this.clearCanvas(this.localCanvasContext);
            };
            DrawingBoard.prototype.clearCanvas = function (ctx) {
                ctx.save();
                ctx.setTransform(1, 0, 0, 1, 0, 0);
                ctx.clearRect(0, 0, this.imageWidth, this.imageHeight);
                ctx.restore();
            };
            DrawingBoard.prototype.log = function (message) {
                console.log("[DrawingBoard] " +message);
            };
            DrawingBoard.MILLISECONDS_FOR_VOLATILE_DRAWINGS = 10000;
            DrawingBoard.DEFAULT_PEN_SIZE = 3;
            DrawingBoard.MAX_DELAY_BETWEEN_POINTS = 50;
            DrawingBoard.MEDIUM_DISTANCE_BETWEEN_POINTS = 5;
            DrawingBoard.MINIMUM_DISTANCE_BETWEEN_POINTS = 3;
            DrawingBoard.UPDATE_PEERS_EVERY_POINTS = 25;
            DrawingBoard.SHOW_KEY_POINTS = false;
            return DrawingBoard;
        }());
        Drawings.DrawingBoard = DrawingBoard;
    }) (Drawings = Oct8ne.Drawings ||(Oct8ne.Drawings = { }));
}) (Oct8ne || (Oct8ne = { }));
;
var Oct8ne;
(function (Oct8ne) {
    var Drawings;
    (function (Drawings) {
        var DrawingUi = (function () {
            function DrawingUi(container, localCanvas, remoteCanvas, currentUserId, currentResourceId) {
                this.currentUserId = currentUserId;
                this.currentResourceId = currentResourceId;
                this.isDrawing = false;
                this.isStarted = false;
                this.pencils = [];
                this.color = "black";
                this.container = $(container);
                this.initialWidth = this.container.width();
                this.drawingBoard = new Drawings.DrawingBoard(this, container, localCanvas, remoteCanvas, currentUserId, currentResourceId);
                this.localCanvas = $(localCanvas);
                this.remoteCanvas = $(remoteCanvas);
                this.localCanvas.css("touch-action", "none");
                this.resource = this.container.find("img");
                this.stop();
            }
            DrawingUi.prototype.start = function () {
                var _this = this;
                this.localCanvas.css("cursor", "none");
                this.localCanvas.on("mousedown touchstart", function (e) { return _this.onMouseDown(e); });
                this.localCanvas.on("mousemove touchmove", function (e) { return _this.onMouseMove(e); });
                this.localCanvas.on("mouseleave mouseup touchend", function (e) { return _this.onMouseUp(e); });
                this.localCanvas.on("mouseleave", function (e) { return _this.onMouseLeave(e); });
                this.updateCanvasDimensions();
                this.isStarted = true;
            };
            DrawingUi.prototype.stop = function () {
                this.localCanvas.css("cursor", "move");
                this.localCanvas.off("mousedown mousemove mouseleave mouseup");
                this.updateCanvasDimensions();
                this.isStarted = false;
                this.getPencil("me").hide();
            };
            DrawingUi.prototype.onMouseDown = function (e) {
                $("#color-picker").removeClass();
                if (!this.isStarted)
                    return false;
                this.unifyTouchEvents(e);
                var coords = this.getRealCoords(e);
                var left = coords.left;
                var top = coords.top;
                var imageCoords = this.zoomedImageCoordsToActualImageCoords(left, top);
                left = imageCoords.left;
                top = imageCoords.top;
                this.drawingBoard.beginDraw(left, top, false /* true=persistent drawings*/);
                this.isDrawing = true;
                e.preventDefault();
                return false;
            };
            DrawingUi.prototype.onMouseMove = function (e) {
                if (!this.isStarted)
                    return false;
                this.unifyTouchEvents(e);
                var coords = this.getRealCoords(e);
                var left = coords.left;
                var top = coords.top;

                var pencil = this.getPencil("me");
                var containerPosition = this.container.position();
                pencil.css({ left: e.offsetX + containerPosition.left + "px", top: e.offsetY + containerPosition.top + "px" }).show();
                if (!this.isDrawing)
                    return false;
                var imageCoords = this.zoomedImageCoordsToActualImageCoords(left, top);
                left = imageCoords.left;
                top = imageCoords.top;
                this.drawingBoard.onPencilMoved(left, top);
                e.preventDefault();
                return false;
            };
            DrawingUi.prototype.onMouseLeave = function (e) {
                this.getPencil("me").hide();
            };
            DrawingUi.prototype.onMouseUp = function (e) {
                if (!this.isStarted || !this.isDrawing)
                    return false;
                this.unifyTouchEvents(e);
                var coords = this.getRealCoords(e);
                var left = coords.left;
                var top = coords.top;
                var imageCoords = this.zoomedImageCoordsToActualImageCoords(left, top);
                left = imageCoords.left;
                top = imageCoords.top;
                this.drawingBoard.onPencilMoved(left, top);
                this.drawingBoard.endDraw();
                this.getPencil("me").hide();
                this.isDrawing = false;
                e.preventDefault();
                return false;
            };
            DrawingUi.prototype.zoomedImageCoordsToActualImageCoords = function (left, top) {

                var newLeft = left;
                var newTop = top;
                var factor = this.initialWidth / this.container.width();
                newLeft = newLeft * factor;
                newTop = newTop * factor;
                return { left: newLeft, top: newTop };
            };
            DrawingUi.prototype.unifyTouchEvents = function (e) {
                if (e.type === "touchmove" || e.type === "touchstart" || e.type === "touchend") {
                    if (e.originalEvent && e.originalEvent.changedTouches) {
                        var touch = e.originalEvent.changedTouches[0];
                        var offset = $(touch.target).offset();
                        e.pageX = touch.pageX;
                        e.pageY = touch.pageY;
                        e.offsetX = touch.pageX - offset.left;
                        e.offsetY = touch.pageY - offset.top;
                    }
                }
            };
            DrawingUi.prototype.getRealCoords = function (e) {
                var htmlElement = e.target;
                var offsetX, offsetY;
                if (e.offsetX == undefined) {
                    var off = $(htmlElement).offset();
                    offsetX = e.pageX - off.left;
                    offsetY = e.pageY - off.top;
                }
                else {
                    offsetX = e.offsetX;
                    offsetY = e.offsetY;
                }
                var left = this.roundToInteger(offsetX);
                var top = this.roundToInteger(offsetY);
                if (htmlElement.tagName === "IMG") {
                    var position = $(e.target).position();
                    left += position.left;
                    top += position.top;
                }
                return { left: left, top: top };
            };
            DrawingUi.prototype.updateCanvasDimensions = function (newImage) {
                var image = this.container.find("img");
                var width = image.width();
                var height = image.height();
                //cambio javi: modifico this.initialWidth al cambiar de imagen ( se llam aqui al hacer zoom tb) para solucionar 
                // error cuando agente y visitor empiezan con tama�o de helper diferente
                if(newImage)this.initialWidth = width;
                //al llamar a esta funcion modifico this.drawingBoard.initialWidth con el mismo width (solo si es nueva imagen)
                this.drawingBoard.setCanvasDimensions(width, height,newImage);
            };

            DrawingUi.prototype.sendDrawingSegment = function (points, color, isCurrentDrawingPermanent, segmentId) {
                if (!this.onLocalSegmentAdded) {
                    throw "onLocalSegmentAdded callback must be defined";
                }
                this.onLocalSegmentAdded(this.currentUserId, this.currentResourceId, points, color, isCurrentDrawingPermanent, segmentId);
            };
            DrawingUi.prototype.clearAll = function () {
                for (var p in this.pencils) {
                    if (this.pencils.hasOwnProperty(p)) {
                        this.pencils[p].hide().clearQueue();
                    }
                }
                this.drawingBoard.clearAll();
            };
            DrawingUi.prototype.getPencil = function (userId) {
                
                var result = this.pencils[userId];
                if (!result) {
                    var pencil = $("#pencil-" + userId);
                    if (pencil.length === 0)
                    //pencil = $("<img class='oct8ne-pencil' id='pencil-" + userId + "' src='/api/img/core/" + (userId === "me" ? "mypencil" : "otherpencil") + ".png' draggable='false' alt='' style='pointer-events:none; display: block; position: absolute; z-index: " + (userId === "me" ? "120" : "110") + ";'>");
                    
                    pencil = $("<span class='oct8ne-pencil icon-common-pen' id='pencil-" + userId + "' draggable='false' alt='' style='position: absolute;font-weight: bold;pointer-events: none;display: none;font-size: 30px;margin-left: -5px;margin-top: -26px; text-shadow: rgb(255, 255, 255) 1px 1px 2px;z-index: 120;  z-index: " + (userId === "me" ? "120" : "110") + ";'></span>");
                    pencil.hide();
                    this.container.parent().append(pencil);
                    result = this.pencils[userId] = pencil;
                }
                return result;
            };
            DrawingUi.prototype.setColor = function (color) {
                this.drawingBoard.setColor(color);
            };
            DrawingUi.prototype.setCurrentResourceId = function (resourceId) {
                this.currentResourceId = resourceId;
                this.drawingBoard.setCurrentResourceId(resourceId);
                //console.log("CurrentResourceId=" + this.currentResourceId);
            };
            DrawingUi.prototype.roundToInteger = function (n) {
                return Math.round(n);
            };
            DrawingUi.prototype.addRemoteDrawingSegment = function (userId, resourceId, points, color, isPermanent, segmentId) {
                if (resourceId !== this.currentResourceId) {
                    //console.log("Ignoring remote segment for resourceId=" + resourceId + " and current=" + this.currentResourceId);
                    return;
                }
                //console.log("Adding remote segment for resourceId=" + resourceId + " and current=" + this.currentResourceId);
                var segment = new Drawings.Segment();
                segment.color = color;
                segment.id = segmentId;
                segment.points = points;
                segment.userId = userId;
                segment.isPermanent = isPermanent;
                segment.resourceId = resourceId;
                this.drawingBoard.addRemoteSegment(segment);
            };
            return DrawingUi;
        }());
        Drawings.DrawingUi = DrawingUi;
    })(Drawings = Oct8ne.Drawings || (Oct8ne.Drawings = {}));
})(Oct8ne || (Oct8ne = {}));
;
var Oct8ne;
(function (Oct8ne) {
    var Drawings;
    (function (Drawings) {
        var Segment = (function () {
            function Segment() {
            }
            return Segment;
        }());
        Drawings.Segment = Segment;
    })(Drawings = Oct8ne.Drawings || (Oct8ne.Drawings = {}));
})(Oct8ne || (Oct8ne = {}));
;
window.oct8ne = window.$o = window.oct8ne || {};

$(function () {
    oct8ne.delay = {
        global: 0,
        chatQueue: 0,
        setGlobal: function (ms) {
            oct8ne.delay.global = oct8ne.delay.global + ms;
            //console.log("delay: " + oct8ne.delay.global);
        },
        reset: function () {
            //console.warn("reset delay: " + oct8ne.delay.global);
            oct8ne.delay.global = 0;
        }
    };

    oct8ne.registerBotResponse = function () {
        if ($o.bot && $o.bot.responseChecker) {
            $o.bot.responseChecker.onResponseReceived();
        }
    };

    //ENTRADA
    $.connection.hubInterface.client.close = function () {
        $.connection.hub.stop();
        $o.inactivity.stopProcess();
        parent.postMessage("CLOSEIFRAME", "*");
    };

    //$.connection.hubInterface.client.yetConnected = function (token) {
    //    $o.hubsOut.yetConnected(token);
    //};

    $.connection.hubInterface.client.closeLastConnection = function () {
        var interactionObject = $o.saveRecord.openNewTab();
        interactionObject[0].Fields = JSON.stringify(interactionObject[0].Fields); //Stringifear Fields
        $.ajax({
            type: "POST",
            url: "/Data/SaveInteractions",
            data: { sessionSummaryId: $o.variablesVisitor.sessionSummaryId, tokenSession: $o.core.globalVariables.room, tokenVisitor: $o.variablesVisitor.tokenVisitor, jsonListData: JSON.stringify(interactionObject) },
        }).always(function () { //SE EJECUTA SIEMPRE
            $.connection.hub.stop();
            parent.postMessage("CLOSEMODAL", "*");
        });
    };

    $.connection.hubInterface.client.receiveEnableClientTranslation = function (license, status, agentLanguage, visitorLanguage) {
        $o.translate.toggleTranslation(license, status, agentLanguage, visitorLanguage);
    };

    $.connection.hubInterface.client.changeStatus = function (parameters, doTransfer) {
        //console.log(doTransfer);
        var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
        if (doTransfer != "true") $o.visitorStart.changeStatus(queryString, parameters.Visitor.Status);
        $o.core.globalVariables.otherToken = parameters.Visitor.Agent.Token;
        if (parameters.Visitor.Status == "Attending") {
            //parent.postMessage("SENDANALYTICSEVENT,GAAttendedByAgent," + parameters.Visitor.Agent.Name, "*");
            $o.visitorPixel.sales.setCookie();
            $o.carousel.sendProductToAnalytics("V");
            //$o.inactivity.attending.start();
            $o.core.hasBeenWaiting = true;
            $o.core.globalVariables.visitorsOverflow = false;
            $o.visitorStart.changeHeaderChatToChatting();
        } else if (parameters.Visitor.Status == "Waiting") {
            $o.core.hasBeenWaiting = true;
            $o.visitorSearch.getAgentStatusAfterWaiting(parameters);
            $o.core.globalVariables.visitorsOverflow = false;
            //  $o.inactivityAgent.clearTimerInterval();
        }

        if (doTransfer) {
            //if (parameters.Visitor.Status == "Waiting" && parameters.Visitor.Agent.Name != "Overbooking") {
            //    $o.inactivityAgent.timerInterval = setInterval($o.inactivityAgent.updateVisitorTime, 1000);
            //}

            $o.visitorTransfer.doTransferVisitor($o.core.globalVariables.agentId, null, $o.core.globalVariables.myToken, culture.coviewer.TransferMoreAvailable, $o.visitorTransfer.types.LIMITCHATEXCEEDED, parameters.Visitor.Agent.Name, "first available");
        }
        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
            { cookie: $o.cookies.status, value: parameters.Visitor.Status }
        ]);
    };

    $.connection.hubInterface.client.changeStatusOverbookingToWaiting = function (parameters) {
        var queryString = "?tokenSession=" + $o.core.globalVariables.room
            + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
            + "&statusVisitor=" + parameters.Status
            + "&idDept=" + $o.visitorStart.assignedDepartment.Id
            + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
            + "&typeTransfer=" + $o.visitorTransfer.types.TAKEVISITOR;
        if ($o.core.globalVariables.room) {
            $.post("/Visitor/CreateSessionSameToken" + queryString);
        }
        //$o.visitorStart.changeStatus(queryString, parameters.Status);
        $o.visitorSearch.changeStatusOverbookingToWaiting(parameters);
        $o.core.hasBeenWaiting = true;
        $o.core.agentsConnected = true;

    };

    $.connection.hubInterface.client.openCoviewerFromPin = function (parameters) {
        parent.postMessage("SENDANALYTICSEVENT,GAEnteredoct8ne,PINCODE", "*");
        $o.iframes.openCoviewerFromPin(parameters);
    };

    $.connection.hubInterface.client.receiveConferenceMessage = function (message, param, conferenceId) {
        $o.visitorStart.platform.processConferenceMessage(message, param);
    };

    $.connection.hubInterface.client.receiveSignalingMessage = function (message, conferenceId) {
        $o.visitorStart.platform.processSignalingMessage(message);
    };

    $.connection.hubInterface.client.receiveRefreshAgentInCall = function () {
        $o.visitorStart.platform.processConferenceMessage(99);
    };

    $.connection.hubInterface.client.receiveOnHoldCall = function (room, status) {
        if (window.conferenceVM) {
            window.conferenceVM.initOnHoldState(status);
        }
    };

    $.connection.hubInterface.client.receiveOnBackgroundApp = function () {
        if (window.conferenceVM) {
            window.conferenceVM.receiveOnBackgroundApp();
        }
    };

    $.connection.hubInterface.client.receiveOnForegroundApp = function () {
        if (window.conferenceVM) {
            window.conferenceVM.receiveOnForegroundApp();
        }
    };

    $.connection.hubInterface.client.receiveRejectedVideoCall = function () {
        if (window.conferenceVM) {
            window.conferenceVM.receiveRejectedVideoCall();
        }
    };


    //$.connection.hubInterface.client.onSelfDisconnectedConference = function () {
    //    $o.visitorStart.platform.onSelfDisconnected.trigger();
    //};

    $.connection.hubInterface.client.receiveMessage = function (parameters, delay) {
        if (delay) {
            $o.delay.setGlobal(delay);
        }
        oct8ne.registerBotResponse();

        var executeChat = function () {
            --$o.delay.chatQueue;
            $o.chat.hideTyping();
            $o.chat.sendAlert(parameters.Body.Original);
            if ($o.recoverRecords.startingRecoverViewer) {
                $o.chat.queueChats.push(parameters);
            } else {
                window.oct8ne.chat.updateMessage(parameters);
            }
            if ($o.delay.chatQueue > 0) {
                setTimeout(function () { $o.chat.showTypingDelayFromBot(); }, 600);
            } else {
                $o.delay.reset();
            }
            $o.chat.sendIsAttendedToAnalytics(parameters.Category, parameters.SentBy);
            $o.inactivity.attending.start();
        };

        if (parameters.Category == "CHAT") {
            if ($o.delay.global != 0) {
                ++$o.delay.chatQueue;
                $o.chat.showTypingDelayFromBot();

                setTimeout(function () {
                    executeChat();
                }, $o.delay.global);

            } else {
                executeChat();
            }
        }
        if (parameters.Category == "CANNED") {
            setTimeout(function () {
                window.oct8ne.canned.createCanned(parameters);
            }, $o.delay.global);

        }
        if (parameters.Category == "FORM") {
            setTimeout(function () {
                $o.chat.sendAlert(culture.coviewer.ChatAlertForm);
                window.oct8ne.forms.createForm(parameters);
            }, $o.delay.global);

        }
        if (parameters.Category == "DOCS") {
            setTimeout(function () {
                $o.chat.sendAlert(culture.coviewer.ChatAlertDocument);
                window.oct8ne.forms.createDocs(parameters);
            }, $o.delay.global);

        }
        setTimeout(function () {
            $o.chat.playVisitorSound();
        }, $o.delay.global);

    };

    $.connection.hubInterface.client.receiveIsTyping = function (parameters) {
        window.oct8ne.chat.typing(parameters);
    };

    $.connection.hubInterface.client.receiveImage = function (parameters) {
        window.oct8ne.canva.update(parameters);
        $o.carousel.currentImage = parameters.Index;
        $o.carousel.updateCarouselArrows($o.carousel.currentImage);
        $o.inactivity.attending.restart();
    };

    $.connection.hubInterface.client.receivePoint = function (parameters) {
        window.oct8ne.drag.addPoint(parameters, false);
    };

    $.connection.hubInterface.client.receiveDrag = function (parameters) {
        window.oct8ne.drag.changeDrag(parameters);
    };

    $.connection.hubInterface.client.receivePin = function (parameters) {
        window.oct8ne.pin.addPin(parameters);
    };

    $.connection.hubInterface.client.receiveDrawing = function (parameters) {
        window.oct8ne.pencil.receiveDrawing(parameters);
    };

    $.connection.hubInterface.client.changeNode = function (parameters) {
        var product = window.viewedVM.getProduct(parameters.InternalId);
        if (parameters.SentBy == "A") {

            if (!product) {
                $o.carousel.sendProductToAnalytics("A");
            };

            if (!product && parameters.FromAgentSearch) $o.canva.imageFromAgent = true;
            $o.productsChat.sentProductByAgent(parameters);


            if ($o.settings.hasOwnProperty("autoShowCoviewer") && $o.settings.autoShowCoviewer == true && ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT)) {
                $(".show-coviewer").addClass("blinking");
                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
            } else {
                $o.chat.addAlertProduct(parameters);
            };

            $o.carousel.loadingProduct();

            //     if (parameters.InternalId.indexOf("Oct8ne") == -1) {
            //         parameters.BuyURL = $o.platform.getBuyURL(parameters);
            //     }
            //parameters.Thumbnail = parameters.URLMedia;
            //     $o.carousel.sendProductToCarousel(parameters, parameters.ListType, $o.carousel.actions.VIEWINCANVA, "recover");

            if ((($o.platform) && ((($o.platform.productBuyURL == "") || (!$o.platform.productBuyURL)) && (parameters.InternalId.indexOf("Oct8ne") == -1))) || ($o.utils && $o.utils.doAlwaysProductInfo && parameters.InternalId.indexOf("Oct8ne") == -1)) {
                $o.platform.getFullProductInfo(parameters.InternalId, $o.carousel.lists.VIEWED, "recover");
            } else {
                parameters.Thumbnail = parameters.URLMedia;
                if (parameters.InternalId.indexOf("Oct8ne") == -1) {
                    $o.carousel.sendNewProductToTrackingBar(parameters);
                    parameters.BuyURL = $o.platform.getBuyURL(parameters);
                }
                $o.carousel.sendProductToCarousel(parameters, parameters.ListType, $o.carousel.actions.VIEWINCANVA, "recover");
            }

            $o.inactivity.attending.restart();

        }
    };

    $.connection.hubInterface.client.resetImage = function (parameters) {
        window.oct8ne.carousel.resetImage();
    };

    $.connection.hubInterface.client.changeZoom = function (parameters) {
        window.oct8ne.zoom.changeZoom(parameters);
    };

    $.connection.hubInterface.client.receiveVideoAction = function (action, time, room) {
        var processAction = function () { $o.core.youtubeViewModel.processAction(action, time) };
        if ($o.core.youtubeViewModel.loaded) {
            processAction();
        } else {
            $o.core.youtubeViewModel.setup(function () { processAction(); });
        }
    };

    $.connection.hubInterface.client.receiveNote = function (parameters) {
        window.oct8ne.note.addNote(parameters);
    };

    $.connection.hubInterface.client.receiveAgentLogOut = function (parameters, messageType) {
        $o.inactivity.setVisitorActive();
        $o.visitorStart.agentDisconnectedInterval = setInterval(function () {
            ++$o.visitorStart.agentDisconnectedTimer;
            //console.log("disconnected: " + $o.visitorStart.agentDisconnectedTimer);
            if ($o.visitorStart.agentDisconnectedTimer == 15) {
                $o.visitorStart.agentDisconnectedTimer = 0;
                clearInterval($o.visitorStart.agentDisconnectedInterval);
                $o.saveRecord.agentOut($o.core.globalVariables.otherName, messageType);
                $o.visitorTransfer.doTransferVisitor($o.core.globalVariables.agentId, null, $o.core.globalVariables.myToken, culture.coviewer.ChatTransferedCuz + " " + parameters.Agent.Name + " " + culture.coviewer.WasDisconnected, $o.visitorTransfer.types.AGENTDISCONNECT, $o.core.globalVariables.otherName, "first available");
            }
        }, 1000);

        if ($o.core.globalVariables.conferenceProvider && $o.visitorStart.platform != "") { $o.visitorStart.platform.processConferenceMessage(99); }

    };

    $.connection.hubInterface.client.changeTokenAgent = function (token) {
        $o.visitorStart.agentDisconnectedTimer = 0;
        clearInterval($o.visitorStart.agentDisconnectedInterval);
        $o.core.globalVariables.otherToken = token;

    };

    $.connection.hubInterface.client.changeAgent = function (parameters) {
        //parameters.Result = 0 Transfer ok
        //parameters.Result = 2 no more agents connected.
        //parameters.Result = 3 overbooking      
        oct8ne.registerBotResponse();
        if ($o.delay.global != 0) {
            $o.delay.setGlobal(700);
        };

        var canned;
        var showCanned = true;
        if ($o.utils && $o.utils.showCannedFromTransfer) {
            showCanned = $o.utils.showCannedFromTransfer(parameters);
        }

        if (parameters.Result == 0) {
            if ($o.utils && $o.utils.customTransferCallback) {
                $o.utils.customTransferCallback(parameters);
            }

            //console.log(parameters)
            if (parameters.OldAgent.IsBot) {
                //console.log("transfer desde bot")
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.disableCounter();
                }
                parent.postMessage("SENDANALYTICSEVENT,GATransferFromBot," + parameters.Visitor.Agent.Name, "*");
            }
            $o.core.globalVariables.agentType = $o.visitorStart.agentTypes.HUMAN;
            //Canned mensaje que el agente ya no esta disponible y te ha transferido
            if (parameters.TypeTransfer == $o.visitorTransfer.types.AGENTDISCONNECT || parameters.TypeTransfer == $o.visitorTransfer.types.INACTIVITYTOFIRST || parameters.TypeTransfer == $o.visitorTransfer.types.LIMITCHATEXCEEDED) {

                if (showCanned) {
                    if (parameters.TypeTransfer == $o.visitorTransfer.types.INACTIVITYTOFIRST && $o.core.globalVariables.baseUrl.indexOf("tdtprofesional") > -1) {
                        // console.log("NO SE MUESTRAN INACTIVITIES");
                    } else {
                        canned = culture.coviewer.NowAttendedBy;
                        canned = canned.replace("{{##old##}}", $o.core.globalVariables.otherName).replace("{{##new##}}", parameters.Visitor.Agent.Name);
                        setTimeout(function () {
                            $o.canned.sendCanned($o.canned.type.TRANSFER, canned);
                        }, $o.delay.global);
                    }
                
            }

        } else if (parameters.TypeTransfer == $o.visitorTransfer.types.MANUALTOAGENT || parameters.TypeTransfer == $o.visitorTransfer.types.MANUALTOFIRST || parameters.TypeTransfer == $o.visitorTransfer.types.BOTTOFIRST) {
            if (showCanned) {
                setTimeout(function () {
                    $o.canned.sendCanned($o.canned.type.TRANSFER, culture.coviewer.YouTranfered + " " + parameters.Visitor.Agent.Name);
                }, $o.delay.global);
            }
        } else if (parameters.TypeTransfer == $o.visitorTransfer.types.TAKEVISITOR) {
            if (showCanned && $o.variablesVisitor.status != "Searching") {
                canned = culture.coviewer.NowAttendedBy;
                canned = canned.replace("{{##old##}}", $o.core.globalVariables.otherName).replace("{{##new##}}", parameters.Visitor.Agent.Name);
                setTimeout(function () {
                    $o.canned.sendCanned($o.canned.type.TRANSFER, canned);
                }, $o.delay.global);
            }
        }
        setTimeout(function () {
            $o.visitorStart.changeAgentUI(parameters);
            $o.visitorStart.sendOnAgentAssignedEventToApi(parameters.Visitor.Agent);
            $o.chat.toogleDenyVisitorTyping(false);
        }, $o.delay.global);

        //Reiniciar contador inactividad agente en lado visitor
        //if (parameters.Visitor.Status == $o.variablesVisitor.status) { //Se resetea si el status  es igual porque si es diferente.. se hace en el changeStatus.
        //    $o.inactivityAgent.restartTimerInterval();
        //}

    } else if (parameters.Result == 2) {
        // Mensaje de que no hay mas agentes disponibles + boton de formulario
        if ($o.utils && $o.utils.noAgentsInTransfer) {
            $o.utils.noAgentsInTransfer(parameters);
        } else {
            $o.inactivityAgent.clearTimerInterval();
            $.connection.hub.stop();
            $o.inactivity.setVisitorActive();
            $o.core.agentsConnected = false;
            setTimeout(function () {
                $o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
            }, $o.delay.global);
            $o.inactivity.disableChatInputUI();
            if (window.conferenceVM) {
                window.conferenceVM.hideStartCallButtons(true);
            }
            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                { cookie: $o.cookies.sessionWithoutAgent, value: true }
            ]);
        }

    } else if (parameters.Result == 3) {
        setTimeout(function () {
            $o.canned.sendCanned($o.canned.type.OVERBOOKING);
        }, $o.delay.global);
        $o.core.agentsConnected = false;
        $o.inactivity.disableChatInputUI();
        //parar contador inactividad agente en lado visitor
        $o.inactivityAgent.clearTimerInterval();
    }

    if (parameters.Visitor.Status != $o.variablesVisitor.status) {
        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.status, value: parameters.Visitor.Status }]);
        var statusQueryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
        $o.visitorStart.changeStatus(statusQueryString, parameters.Visitor.Status);
    }

    $o.inactivityAgent.lapseTime = 0;

};

var closeSession = function (hideMessage) {
    oct8ne.registerBotResponse();

    setTimeout(function () {
        let mustRatingsAtEnd = $o.utils && $o.utils.forceRatingAtEnd ? $o.utils.forceRatingAtEnd : null; //UTILS SOBREESCRIBE BBDD

        if (mustRatingsAtEnd === null) {
            mustRatingsAtEnd = $o.settings.forceRatingsAtEnd;
        }

        if ($o.variablesVisitor.status === "Attending" && $o.settings.showRatingAgent == "True" && mustRatingsAtEnd) { //Send GET RATED form at the end of the session
            //Añadir en if  Attending && activos ratings
            var params = {
                AgentImg: null,
                Body: {
                    Original: null,
                    Translated: null
                },
                Category: "FORM",
                DenyVisitorTyping: false,
                Id: "EndVal",
                Room: $o.core.globalVariables.room,
                SentBy: "A",
                Type: "VALORATION"
            };
            $.connection.hubInterface.client.receiveMessage(params, 0);
        }


        if (!hideMessage) { $o.canned.sendCanned($o.canned.type.RECONNECTSESSION); } //DEJAMOS EL RECONNECT SESSION
        $o.inactivity.stopProcess();
        $o.inactivity.disableChatInputUI();
        // $o.forms.disableOld();
        $.connection.hub.stop();
        $o.core.agentsConnected = false;
        var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
        $o.visitorStart.changeStatus(queryString, "Finalized");
        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.status, value: "Finalized" }]);
        $o.core.globalVariables.sessionFinalized = true;
        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" }, { cookie: $o.cookies.lastInteractionAFK, value: "" },]);
    }, $o.delay.global);
};

$.connection.hubInterface.client.closeSessionByInactivity = function () {
    $o.saveRecord.inactivityServer();
    closeSession();
};

$.connection.hubInterface.client.closeSession = function (hideMessage) {
    oct8ne.registerBotResponse();
    closeSession(hideMessage);
};

$.connection.hubInterface.client.reciveForm = function (disconnectSignalR) {
    if (disconnectSignalR) {
        $.connection.hub.stop();
        $o.core.agentsConnected = false;
        var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
        $o.visitorStart.changeStatus(queryString, $o.variablesVisitor.status);
        $o.canned.sendCanned($o.canned.type.AGENTSBUSY);
        $o.inactivity.disableChatInputUI();
    } else {
        $o.visitorSearch.reciveFormUI();
    }
};

$.connection.hubInterface.client.receiveUndo = function (parameters) {
    $o.tools.deletePin(parameters.Id);
};

$.connection.hubInterface.client.receiveSendToMyList = function (internalId) {

    if ($o.core.globalVariables.enterType != $o.core.enterType.CHECKOUT) {
        $.getJSON($o.platform.domain + "oct8ne/frame/addtowishlist?callback=?&productIds=" + internalId, function (result) {
            $o.search.addNodeToMyList(internalId);
        });
        var node = $o.fullProducts.searchProduct($o.core.globalVariables.internalId);
        var whoAdd = "Agent";
        $o.hubsOut.alertAgentAddToMyList(node.Title, $o.core.globalVariables.otherToken, $o.core.globalVariables.myToken, $o.core.globalVariables.room, whoAdd);
        $o.visitorSearch.reciveSendToMyListUI();
    }
};

$.connection.hubInterface.client.receiveSendToMyCart = function (internalId) {
    if ($o.core.globalVariables.enterType != $o.core.enterType.CHECKOUT) {

        $o.platform.startAddToCartProcess(internalId);
        var node = $o.fullProducts.searchProduct($o.core.globalVariables.internalId);
        //     if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT || $o.iframes.iframeStatus.MINIMIZED) $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
        parent.postMessage("SENDANALYTICSEVENT,GAClickAddToCart,Agent", "*");
        $o.hubsOut.alertAgentAddToCart(node.Title, $o.core.globalVariables.otherToken, $o.core.globalVariables.myToken, "open");
    }
};

$.connection.hubInterface.client.receiveAjaxUpdates = function (what) {
    // en un futuro nos llegara la parte que tenemos que actualizar (cart, mylist, user)
    //if (what == "cart") {
    //} else if (what == "mylist") {
    //} else if (what == "user") {
    //} else {
    $o.platform.addPlatformLogin(); //DE MOMENTO SOLO ESTO TODO
    //};
};

$.connection.hubInterface.client.receiveOrder = function (orderStatus) {
    if ($o.platform && $o.platform.hasOwnProperty("orders")) {
        if (orderStatus.OrderId !== null) {
            $o.platform.orders.getDetailsFromVisitor(orderStatus);
        } else {
            $o.forms.sendOrderForm(orderStatus);
        }
    } else {
        for (var i = 0; i < orderStatus.OrderStatusNoPlugin.length; i++) {
            if (orderStatus.OrderStatusNoPlugin[i].action === "text") {
                var message = {
                    Body: orderStatus.OrderStatusNoPlugin[i].body,
                    Name: $o.core.globalVariables.otherName,
                    Room: $o.core.globalVariables.room,
                    Category: "CHAT",
                    Id: $o.tools.generateRandomId(),
                    SentBy: "A" //Se envía desde Visitor pero debe ser Agent!!!
                };
                $o.saveRecord.chat(message.Body, message.Name, message.Id, message.SentBy, false);
                $o.chat.updateMessage(message);
            }

            if (orderStatus.OrderStatusNoPlugin[i].action === "transfer") {
                $o.visitorTransfer.doTransferVisitor($o.core.globalVariables.agentId, null, $o.core.globalVariables.myToken, "Transfer desde BOT", $o.visitorTransfer.types.BOTTOFIRST, "Bot", "first available");
            }
        }
    }
};

$.connection.hubInterface.client.receiveVisitorOrderRequest = function (orderId) {
    oct8ne.registerBotResponse();
    if ($o.platform && $o.platform.hasOwnProperty("orders")) {
        $o.platform.orders.getDetailsForTreeBot(orderId);
    } else {
        $o.hubsOut.sendVisitorOrderResult({ details: {}, error: true });
    }
};

//$.connection.hubInterface.client.receiveTag = function (tag) {
//    parent.postMessage("SENDANALYTICSEVENT,GAAddedTag," + tag, "*");
//};

$.connection.hubInterface.client.receiveAnalyticsEvent = function (event) {
    oct8ne.registerBotResponse();
    parent.postMessage("SENDANALYTICSEVENT," + event.Action + "," + event.Label + "," + event.Value + "," + event.CustomActionType, "*");
};

$.connection.hubInterface.client.receiveRunAsyncScript = function (parameters) {
    oct8ne.registerBotResponse();
    if ($o.delay.global != 0) {
        $o.delay.setGlobal(700);
    };

    setTimeout(function () {
        if (parameters.RunInsideOct8ne) {
            var script = "try {" + decodeURIComponent(parameters.Script) + "} catch (error) {console.error('Bot script error: ' + error);}";
            eval(script);
        } else {
            parent.postMessage("RUNSCRIPT," + parameters.Script, "*");
        }
    }, $o.delay.global);
};
});;
$(function () {
    //SALIDA
    //Enviem a signalr y afegim interaccions
    oct8ne.hubsOut = {
        sendSummary: function (parameters) {
            $.connection.hubInterface.server.sendSummary(parameters);
        },

        sendMessage: function (parameters) {
            $o.delay.reset();
            if ((parameters.SentBy == "V") && (parameters.Category == "CHAT")) {
                $o.inactivity.setVisitorActive();
                // $o.inactivity.attending.restart();
            }
            $o.chat.sendIsAttendedToAnalytics(parameters.Category, parameters.SentBy );
            $.connection.hubInterface.server.sendMessage(parameters);
        },

        sendFormResponse: function (parameters) {
            $.connection.hubInterface.server.sendFormResponse(parameters);
        },

        sendTransferVisitor: function (oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer) {
            $.connection.hubInterface.server.transfer(oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer, 0);
        },
        sendTransferVisitor2: function (oldAgentToken, newAgentId, tokenVisitor, textToTransfer, typeTransfer, forceDeptIdNull) {
            var deptId;
            if (!$o.enterData || !$o.enterData.allowedDepartmentsId || $o.enterData.allowedDepartmentsId == "null" || forceDeptIdNull === true) {
                deptId = null;
            } else {
                deptId = $o.enterData.allowedDepartmentsId;
            }
            $.connection.hubInterface.server.transferVisitor(oldAgentToken, newAgentId, tokenVisitor, textToTransfer, typeTransfer, deptId);
        },
        //yetConnected: function (token) {
        //    $.connection.hubInterface.server.yetConnected(token);
        //},

        sendResetImage: function () {
            var image = {
                Room: $o.core.globalVariables.room,
                SentBy: $o.core.userType,
                Type: "RESET"
            };
            $.connection.hubInterface.server.sendResetImage(image);
        },

        sendSearchTerm: function (parameters, sendSearchToAgent) {
            $.connection.hubInterface.server.sendSearchTerm(parameters, sendSearchToAgent);
            $o.inactivity.setVisitorActive();
        },

        sendSearchTermCatalog: function (parameters) {
            $.connection.hubInterface.server.sendSearchTermCatalog(parameters);
        },

        sendNode: function (parameters) {
            // if (!parameters.ListType) parameters.ListType = $o.carousel.lists.VIEWED;
            //$o.log("-----------------------SEND-----------------------");
            //$o.log(parameters);            
            $.connection.hubInterface.server.sendNode(parameters);
            $o.inactivity.setVisitorActive();

        },

        sendImage: function (parameters) {
            $o.inactivity.setVisitorActive();
            $.connection.hubInterface.server.sendImage(parameters);
        },


        //CONFERENCE AREA
        //sendConferenceMessage: function (message, param) {

        //    console.log(message, param)
        //    $.connection.hubInterface.server.sendConferenceMessage(message, param);
        //},

        //sendSignalingMessage: function (parameters, data) {
        //    $.connection.hubInterface.server.sendSignalingMessage(parameters, data);
        //},

        //getIceServers: function () { //SERVIDORES DE VIDEOLLAMADA!
        //    return $.connection.hubInterface.server.getIceServers();
        //},

        //END CONFERENCE AERA

        sendPoint: function (parameters) {
            $.connection.hubInterface.server.sendPoint(parameters);
        },

        sendDrag: function (parameters) {
            $.connection.hubInterface.server.sendDrag(parameters);
        },

        responseCallBack: function (parameters) {
            $.connection.hubInterface.server.sendVoiceForm(parameters);
        },

        //sendPin: function (parameters) {
        //    $.connection.hubInterface.server.sendPin(parameters);
        //},

        //sendNote: function (parameters) {
        //    $.connection.hubInterface.server.sendNote(parameters);
        //},
        sendVideoAction: function (action, time, room) {
            $.connection.hubInterface.server.videoAction(action, time, room);
        },



        //sendUndo: function (parameters) {
        //    $.connection.hubInterface.server.sendUndo(parameters);
        //},


        sendDrawing: function (parameters) {
            $.connection.hubInterface.server.sendDrawing(parameters);
        },

        sendViewChange: function (parameters) {
            $.connection.hubInterface.server.sendViewChange(parameters);
        },

        addInteraction: function () { },
        sendDataVisitorToDashboard: function (tokenVisitor, parameters) {
            $.connection.hubInterface.server.sendDataVisitor(tokenVisitor, parameters);
        },

        sendCartDataToDashboard: function (tokenVisitor, parameters) {
            $.connection.hubInterface.server.sendCartData(tokenVisitor, parameters);
        },

        sendWriting: function (chat) {
            $.connection.hubInterface.server.isTyping(chat);
        },

        alertAgentAddToCart: function (title, tokenAgent, tokenVisitor, action) {
            $.connection.hubInterface.server.alertAgentAddToCart(title, tokenAgent, tokenVisitor, action);
        },

        alertAgentAddToMyList: function (title, tokenAgent, tokenVisitor, tokenRoom, whoAdd) {
            $.connection.hubInterface.server.alertAgentAddToMyList(title, tokenAgent, tokenVisitor, tokenRoom, whoAdd);
        },

        sendInteractionsToAgent: function (agentToken, tokenVisitor, interactionsToSave) {
            $.connection.hubInterface.server.sendInteractionsToAgent(agentToken, tokenVisitor, interactionsToSave);
        },

        sendVisitorCheckout: function () {
            $.connection.hubInterface.server.sendVisitorCheckout($o.core.globalVariables.room, $o.core.globalVariables.room);
        },

        sendVisitorOrderResult: function (orderResult) {
            orderResult = Interactions.BaseManager.objectAdapter(orderResult, Interactions.Targets.Backend);
            $.connection.hubInterface.server.sendVisitorOrderResult(orderResult, Core.Helpers.getTokenRoom());
        }
    };
});;
//Lanzar tests si se modifica

window.oct8ne = window.$o = window.oct8ne || {};
(function () {
    oct8ne.inactivity = {
        init: function () {           
            $o.inactivity.recover();
            $o.inactivity.events();
        },

        timer: {
            general: null,
            ticks: 0,
            frequency: 1000,            
            add: function () { return $o.inactivity.timer.ticks += ($o.inactivity.timer.frequency / 1000); }, 
            reset: function () {
                oct8ne.log("Reseteamos timer");
                $o.inactivity.timer.ticks = 0;
            }
        },

        setVisitorActive: function () {
            $o.inactivity.stopProcess();
        },

        justLooking: {
            start: function () {               
                if ($o.inactivity.timer.general === null) {
                    oct8ne.log("Arranca inactividad JS visitante");
                    $o.inactivity.timer.general = setInterval(function () {$o.inactivity.justLooking.increase();}, $o.inactivity.timer.frequency);
                };
            },

            increase: function () {               
                if ($o.inactivity.timer.add() > $o.inactivity.justLooking.limit) {
                    $o.inactivity.justLooking.disconnect();
                }
                oct8ne.log("Sumamos tiempo inactividad JS visitante: " + $o.inactivity.timer.ticks);
                $o.inactivity.storage.setData($o.inactivity.timer.ticks, null);
            },

            disconnect: function () {
                oct8ne.log("Desconectamos visitante por inactividad JL: " + $o.inactivity.timer.ticks);
                var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
                $o.visitorStart.changeStatus(queryString, "Searching");
                $o.inactivity.stopProcess();
                $o.inactivity.disconnectCommonActions();
            },
            limit: 1200
        },

        attending: {           
            level: null,
            start: function () {
                oct8ne.log("Start Attending Inactivity");
                if ($o.inactivity.timer.general === null) {
                    if ($o.inactivity.attending.level===null)$o.inactivity.attending.level = 0;
                    oct8ne.log("Arrancamos Attending Inactivity");
                    $o.inactivity.timer.general = setInterval(function () { $o.inactivity.attending.increase(); }, $o.inactivity.timer.frequency);
                    return true;
                } else {                    
                    oct8ne.log("Ya estaba en marcha Attending Inactivity");
                    return false;
                }
            },

            increase: function () {
                $o.inactivity.timer.add();                
                $o.inactivity.storage.setData($o.inactivity.timer.ticks,$o.inactivity.attending.level);
                if ($o.inactivity.timer.ticks >= $o.settings.inactivityVisitorStages[$o.inactivity.attending.level]) {
                    $o.inactivity.attending.updateLevel();
                }
                oct8ne.log("Checkeamos inactividad visitante: " + $o.inactivity.timer.ticks);
            },
            
            updateLevel: function () {                
                var level = ++$o.inactivity.attending.level;               
                oct8ne.log("Subimos nivel inactividad a: " +level);
                $o.inactivity.timer.reset();
                $o.canned.sendCanned($o.canned.type["INACTIVITYVISITOR" + level], $o.settings.inactivityVisitorMessages[level-1]);
                if (level == 3) $o.inactivity.attending.disconnect();
            },           
            
            disconnect: function () {
                oct8ne.log("Desconectamos por inactividad visitante");
                $o.inactivity.stopProcess();
                $o.inactivity.disableChatInputUI();
                $o.visitorStart.changeStatus("", "Searching");
                $o.canned.sendCanned($o.canned.type.RECONNECTSESSION);
                $o.inactivity.disconnectCommonActions();
            },
            restart: function () {
                oct8ne.log("Reseteamos inactividad visitante");                
                $o.inactivity.stopProcess();
                $o.inactivity.attending.start();
            }
        },

        stopProcess: function () {
            oct8ne.log("STOP inactividad visitante");
            if ($o.inactivity.timer.general !== null) {
              
                $o.inactivity.timer.reset();
                clearInterval($o.inactivity.timer.general);
                $o.inactivity.timer.general = null;
                $o.inactivity.attending.level = null;
                $o.inactivity.storage.deleteData();
            } else {
                oct8ne.log("Ya está parada, no hacemos nada");
            }
        },

        recover: function () {           
            var data = $o.inactivity.storage.getData();
           
            oct8ne.log("Recuperamos inactividad visitante");
            oct8ne.log(data)
            if (data) {
                $o.inactivity.timer.ticks = data.timer;
                //si devuelve level es de tipo attending
                if (data.level !== null) {
                    $o.inactivity.attending.level = data.level;
                    $o.inactivity.attending.start()
                } else {
                    $o.inactivity.justLooking.start()
                };  
            };
        },

        disconnectCommonActions: function () {           
            $.connection.hub.stop();
            $o.core.agentsConnected = false; 
            $o.choices.disableAllOnEnd();           
            $o.customForms.disableAll();
        },        

        storage: {
            getData: function () {
                if ($o.storage.local.get($o.core.localStorageTypes.INACTIVITYVISITOR)) {                   
                    return JSON.parse($o.storage.local.get($o.core.localStorageTypes.INACTIVITYVISITOR));
                }                
                return false;
            },

            setData: function (ticks, level) {               
                if (ticks) {
                    var inactivity = {
                        timer: ticks,
                        level: level                    }    
                    oct8ne.log("Guardamos inactividad visitante: " + ticks);

                    $o.storage.local.set($o.core.localStorageTypes.INACTIVITYVISITOR, JSON.stringify(inactivity));
                } else {
                    return false;
                }
            },

            deleteData: function () {               
                oct8ne.log("Borramos localStorage inactividad visitante");
                $o.storage.local.set($o.core.localStorageTypes.INACTIVITYVISITOR, $o.core.localStorageActions.REMOVE);
               // $o.storage.local.set($o.core.localStorageTypes.HIDENEWTUTORIAL, $o.core.localStorageActions.REMOVE); //Quizá no es su sitio!.
            }
        }        
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.inactivityAgent = {

        startCounter: function () {
            var inactivityAgentTimer = $o.storage.local.get($o.core.localStorageTypes.INACTIVITYAGENT);

            if (inactivityAgentTimer != null) { //F5
                $o.inactivityAgent.lapseTime = parseInt(inactivityAgentTimer);
            };

            $o.inactivityAgent.timeInactivityLimit = $o.settings.inactivityAgentTime;
            $o.inactivityAgent.timerInterval = setInterval($o.inactivityAgent.updateVisitorTime, 1000);

        },

        updateVisitorTime: function () {
            $o.inactivityAgent.lapseTime += 1;
            if ($o.inactivityAgent.lapseTime <= $o.inactivityAgent.timeInactivityLimit) {
                $o.storage.local.set($o.core.localStorageTypes.INACTIVITYAGENT, parseInt($o.inactivityAgent.lapseTime));
               //console.log($o.inactivityAgent.lapseTime);
            } else {
                $o.inactivityAgent.clearTimerInterval();
                if ($o.variablesVisitor.status == "Waiting") {
                    $o.visitorTransfer.doTransferVisitor($o.core.globalVariables.agentId,
                        null,
                        $o.core.globalVariables.myToken,
                        culture.coviewer.TransferMoreAvailable,
                        $o.visitorTransfer.types.INACTIVITYTOFIRST,
                        $o.core.globalVariables.otherName,
                        "first available");
                }
                return;
            }
        },

        clearTimerInterval: function () {
            clearInterval($o.inactivityAgent.timerInterval);
            $o.storage.local.set($o.core.localStorageTypes.INACTIVITYAGENT, $o.core.localStorageActions.REMOVE);
            
        },

        //clearSessionStorage: function() {
        //    sessionStorage.removeItem('oct8ne-inactivity-agent');
        //},

        restartTimerInterval: function () { //DEPRECATED
            $o.inactivityAgent.clearTimerInterval();
            $o.inactivityAgent.startCounter();
        },

        timerInterval: null,
        lapseTime: 0,
        timeInactivityLimit: "" //VARIABLE DE SETTINGS
    };

})(window);;

window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.visitorTransfer= {
        doTransfer: function (oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer, oldAgentName, newAgentName) {

            if ($o.core.isSignalRConnected()) {
                $o.hubsOut.sendTransferVisitor(oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer);
            }

            //save record
             var tokenSession = $("#transfer-layout").attr("data-token-session");
             $o.saveRecord.transfer(oldAgentName, newAgentName, textToTransfer, tokenSession, tokenVisitor, typeTransfer);
        },



        doTransferVisitor: function (oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer, oldAgentName, newAgentName, forceDeptIdNull) {

            if ($o.core.isSignalRConnected()) { $o.hubsOut.sendTransferVisitor2(oldAgentToken, newAgentToken, tokenVisitor, textToTransfer, typeTransfer, forceDeptIdNull);}

            //save record
            var tokenSession = $("#transfer-layout").attr("data-token-session");
            $o.saveRecord.transfer(oldAgentName, newAgentName, textToTransfer, tokenSession, tokenVisitor, typeTransfer);
        },


        types: {
            MANUALTOAGENT: "MANUALTOAGENT",
            MANUALTOFIRST: "MANUALTOFIRST",
            INACTIVITYTOFIRST: "INACTIVITYTOFIRST",
            AGENTDISCONNECT: "AGENTDISCONNECT",
            VISITORSTART: "VISITORSTART",
            LIMITCHATEXCEEDED: "LIMITCHATEXCEEDED",
            TAKEVISITOR: "TAKEVISITOR",
            BOTTOFIRST: "BOTTOFIRST"
        }
    };
})(window);
;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.variablesVisitor = {
        sendCookiesToApi: function (nameFunction, arrayCookies) {
            for (key in arrayCookies) {
                switch (arrayCookies[key].cookie) {
                    case $o.cookies.status:
                        $o.variablesVisitor.status = arrayCookies[key].value;
                        break;
                    case $o.cookies.tokenVisitor:
                        $o.variablesVisitor.tokenVisitor = arrayCookies[key].value;
                        break;
                    case $o.cookies.tokenSession:
                        $o.core.globalVariables.room = arrayCookies[key].value;
                        break;
                    case $o.cookies.connection:
                        $o.variablesVisitor.connection = arrayCookies[key].value;
                        break;
                    case $o.cookies.coviewerStatus:
                        $o.variablesVisitor.coviewerStatus = arrayCookies[key].value;
                        break;
                    case $o.cookies.pendingProducts:
                        $o.variablesVisitor.pendingProducts = arrayCookies[key].value;
                        break;
                    case $o.cookies.statusBeforeMin:
                        $o.variablesVisitor.statusBeforeMin = arrayCookies[key].value;
                        break;
                    case $o.cookies.sessionWithoutAgent:
                        $o.variablesVisitor.sessionWithoutAgent = arrayCookies[key].value;
                        break;
                    case $o.cookies.sessionSummaryId:
                        $o.variablesVisitor.sessionSummaryId = arrayCookies[key].value;
                        break;
                    case $o.cookies.visitorOverFlow:
                        $o.variablesVisitor.visitorsOverflow = arrayCookies[key].value;
                        break;
                }
            }
            parent.postMessage(nameFunction + "," + JSON.stringify(arrayCookies), "*");
        },

        nameFunction: {
            deleteCookies: "DELETECOOKIESOCT8NE",
            saveCookies: "SAVECOOKIESOCT8NE"
        },
        tokenVisitor: "",
        tokenSession: "",
        status: "",
        coviewerStatus: "",
        domain: "",
        connection: "",
        pendingMessages: "",
        pendingProducts: "",
        statusBeforeMin: "",
        currencyVisitor: "",
        sessionWithoutAgent: "",
        sessionSummaryId: "",
        lastInteractionAFK: false,
        nowInteractionAFK: false,
        referenceTimeAFK: 0 //6 horas // en milisegundos. (60000 --> 1min , 240000 --> 4mins , 1800000 --> 30min)

    };


    //constantes
    oct8ne.cookies = {
        status: "STATUS",
        pixelSale: "OCT8NEPIXELSALE",
        tokenVisitor: "TOKENVISITOR",
        tokenSession: "TOKENSESSION",
        coviewerStatus: "COVIEWERSTATUS",
        sessionId: "SESSIONID",
        connection: "CONNECTION",
        pendingProducts: "PENDINGPRODUCTS",
        statusBeforeMin: "STATUSBEFOREMIN",
        sessionWithoutAgent: "SESSIONWITHOUTAGENT",
        sessionSummaryId: "SESSIONSUMMARYID",
        lastInteractionAFK: "LASTINTERACTIONAFK",
        visitorOverFlow: "OCT8NEOVERFLOW",
        firstEnter: "FIRSTENTER"
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};
(function () {
    oct8ne.visitorPixel = {
        sales: {
            setCookie: function () {
                if ($o.settings.allowPixelSale && $o.core.globalVariables.domainId != null && $o.core.globalVariables.room != null) {
                    $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies,
                        [
                            { cookie: $o.cookies.pixelSale, value: $o.core.globalVariables.room }
                        ]);
                    return true;
                }
                return false;
            }
        }
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.visitorRatings = {
        init: function () {
            $o.visitorRatings.events();
        },
        getQuestionsList: function () {
            $.post("/Ratings/GetQuestionsList", { domainId: $o.variablesVisitor.domain }, function (result) {
               $o.visitorRatings.printRatings(result);
            });
        },
        saveRatingAnswers: function () {

        },

        saveRateAgent: function (domain, tokenSession, idAgent, value, comment, agentName, typeRating) {
            if (typeRating == $o.visitorRatings.TypeRatingGoodBad) {
                var ratingMessageType = value ? "GAGoodRating" : "GABadRating";
                parent.postMessage("SENDANALYTICSEVENT," + ratingMessageType + "," + agentName, "*");
            }

            $.post("/Ratings/SaveResponseAgentRating", { domainId: domain, tokenSession: tokenSession, agentId: idAgent, response: value, comment: comment, typeRating: typeRating });
            $o.saveRecord.rate(value, $o.core.globalVariables.otherName);
        },
        agentRated:false,
        TypeRatingGoodBad: 1,
        TypeRatingStars:3

    };




})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {

    oct8ne.recoverRecords = {

        getRecords: function (tokenVisitor, tokenSession, onlyMessages) {
            var date = new Date();
            var timeZone = date.getTimezoneOffset();
            $o.recoverRecords.startingRecoverViewer = true;
            if (onlyMessages) {
                $("#oct8ne-chat-room").append('<div class="loading-message-interactions" id="loading-message-interactions"></div>');
            };
            $.post("Data/GetInteractionsBySessionFromVisitor", { "sessionSummaryId": parseInt($o.core.globalVariables.sessionSummaryId), "tokenSession": tokenSession, "tokenVisitor": tokenVisitor, "recoverType": 1, "utcOffSet": timeZone }, function (records) {
                if (records.DataInteractions) {
                    $o.recoverRecords.recoverViewerFromVisitor(tokenVisitor, records.DataInteractions, onlyMessages);
                }
                if ($o.settings.allowTrackingProductsLite) $o.catalog.getProductsByUrls([$o.core.globalVariables.actualUrl]);
                parent.postMessage("COVIEWER_READY", "*"); 
            }).fail(function () {
                //controlar error recuperar mensajes de signalr
                //y permitir entrada mensajes de visitor
                $o.recoverRecords.startingRecoverViewer = false;
            });
        },

        //  RECUPERA COVIEWER
        recoverViewerFromVisitor: function (token, visitorInteractions, onlyMessages) {
            $o.visitorSearch.showSearchTutorial();
            $o.visitorSearch.showCoviewerTutorial();
            var changeNodeInteractionsIds = [],
                lastSearch = "",
                lastRelatedSearch = "",
                translationEnabled = false;

            //--- recorremos interacciones
            if (onlyMessages) {
                $o.speak.messages([]);
            }
            var foundProductsByBotSearch = 0;
            var recoveredProductsFromBotSearch = 0;

            if (visitorInteractions) {
                var i = 0;
                for (key in visitorInteractions) {
                    i++;
                    var visitorInteraction = visitorInteractions[key];
                    visitorInteraction.Tokens = {
                        Sender: (visitorInteraction.sentBy != "V") ? token : $o.core.globalVariables.myToken,
                        Receiver: (visitorInteraction.sentBy != "V") ? token : $o.core.globalVariables.myToken,
                    };

                    visitorInteraction.Fields = JSON.parse(visitorInteraction.Fields);

                    //CHAT
                    if (visitorInteraction.Type == "Chat") {
                        var chatRecord = {
                            Body: visitorInteraction.Fields.Content,
                            Tokens: visitorInteraction.Tokens,
                            SentBy: visitorInteraction.SentBy,
                            Name: visitorInteraction.Fields.Name,
                            Time: visitorInteraction.CreatedAt,
                            DenyVisitorTyping: visitorInteraction.Fields.DenyVisitorTyping
                        };                        
                        if ($o.chat.chatsInConversation < $o.chat.chatsForSendingAttendedEvent) {
                            ++$o.chat.chatsInConversation;
                            if ($o.chat.chatsInConversation >= $o.chat.chatsForSendingAttendedEvent) {
                                $o.chat.sentAttendedToAnalytics = true;
                            }
                        }

                        $o.chat.updateMessage(chatRecord, "recoverfromV");
                        if ($o.variablesVisitor.status == "Attending") $o.visitorStart.changeHeaderChatToChatting();
                    }

                    //TRANSLATION
                    else if (visitorInteraction.Type == "Translation") {
                        $o.translate.toggleTranslation(visitorInteraction.Fields.License, visitorInteraction.Fields.Status, visitorInteraction.Fields.AgentLanguage, visitorInteraction.Fields.VisitorLanguage);
                    }
                    //ITEMS
                    //search product from bot 
                    //agrupamos productos si hay varios
                    else if (visitorInteraction.Type == "BotProductSearch") {                        
                        var parsedResults = JSON.parse(visitorInteraction.Fields.ResultsData);
                        if (parsedResults.length > 1) {
                            foundProductsByBotSearch = parsedResults.length;
                            recoveredProductsFromBotSearch = parsedResults.length;
                        }
                        for (var i = 0; i < parsedResults.length; i++) {
                            $o.carousel.sendProductToCarousel(parsedResults[i], $o.carousel.lists.VIEWED,null, "recover");  
                        }
                    }
                    else if (!onlyMessages && (visitorInteraction.Type == "ViewedItem") || (visitorInteraction.Type == "MyCartItem") || (visitorInteraction.Type == "MyListItem") || (visitorInteraction.Type == "UploadItem") || (visitorInteraction.Type == "CatalogItem") || (visitorInteraction.Type == "TrackItem") || (visitorInteraction.Type == "DeleteCartItem")) {
                        if (visitorInteraction.Type == "DeleteCartItem") {
                            $o.recoverRecords.removedFromCartInteractions.push(visitorInteraction);
                        } else {

                            //parseamos info
                            var list = "";
                            if (visitorInteraction.Type == "MyCartItem") list = $o.carousel.lists.MYCART;
                            if (visitorInteraction.Type == "MyListItem") list = $o.carousel.lists.MYLIST;
                            if ((visitorInteraction.Type == "UploadItem") || (visitorInteraction.Type == "CatalogItem") || (visitorInteraction.Type == "TrackItem") || (visitorInteraction.Type == "ViewedItem")) list = $o.carousel.lists.VIEWED;
                            var itemRecord = {
                                InternalId: visitorInteraction.ProductId,
                                ListType: list,
                                Tokens: visitorInteraction.Tokens,
                                SentBy: visitorInteraction.SentBy,
                                Thumbnail: visitorInteraction.Fields.Thumbnail,
                                URLMedia: visitorInteraction.Fields.Thumbnail,
                                Time: visitorInteraction.CreatedAt,
                                Title: visitorInteraction.Fields.Title,
                                Order: parseInt(key),
                                Type: visitorInteraction.Type
                            };
                            $o.recoverRecords.changeNodeInteractions.push(itemRecord);
                            //\parseamos info
                            if (visitorInteraction.Type != "MyCartItem") {
                                //si no esta en la lista de nodos vistos lo añadimos
                                //SOLO se añade de IDs si no esta en la lista
                                if (($.inArray(itemRecord.InternalId, changeNodeInteractionsIds) == -1) && (visitorInteraction.Type != "TrackItem")) {
                                    changeNodeInteractionsIds.push(itemRecord.InternalId);
                                }                                
                                if (foundProductsByBotSearch == 0) {
                                    if (visitorInteraction.SentBy == "A" && visitorInteraction.Fields.FromAgentSearch) {
                                        $o.productsChat.sentProductByAgent(itemRecord);
                                    }
                                } else {
                                    if (foundProductsByBotSearch == recoveredProductsFromBotSearch) {
                                        $o.productsChat.sentManyProductsByAgent(itemRecord);
                                      
                                    } 
                                    --recoveredProductsFromBotSearch;
                                    if (recoveredProductsFromBotSearch == 0) {
                                        foundProductsByBotSearch=0;
                                    }                    
                                }

                                $o.carousel.addProductInfoToList(itemRecord, itemRecord.ListType);

                                if (visitorInteraction.Type == "UploadItem") {
                                    var product = $o.carousel.getProductFromUpload(itemRecord.InternalId, itemRecord.Thumbnail, itemRecord.SentBy);
                                    $o.fullProducts.addProductToCollection(product);
                                }
                            } else {
                                $o.recoverRecords.addToCartInteractions.push(itemRecord);
                            }
                            $o.carousel.sentProductsToAnalytics = true;
                        }
                    }

                    //QUERY
                    else if (visitorInteraction.Type == "Query" && !onlyMessages) {
                        var queryType = visitorInteraction.Fields.Type;
                        var term = visitorInteraction.Fields.Term;
                        if (queryType == "Catalog") {
                            lastRelatedSearch = term;
                        }
                        if (queryType == "Query") {
                            lastSearch = $o.recoverRecords.searchInteractionToObject(term);
                        }
                    }

                    //CANNED
                    else if (visitorInteraction.Type == "Canned") {
                        var responsed = false;
                        var cannedRecord = {
                            Body: visitorInteraction.Fields.Content,
                            Tokens: visitorInteraction.Tokens,
                            SentBy: visitorInteraction.SentBy,
                            Type: visitorInteraction.Fields.SubType,
                            Name: visitorInteraction.Fields.Name,
                            Id: visitorInteraction.Fields.Id,
                            Time: visitorInteraction.CreatedAt,
                            Response: visitorInteraction.Fields.Response
                        };
                        if ((visitorInteraction.Fields.SubType == $o.canned.type.NOMOREAGENTS) || (visitorInteraction.Fields.SubType == $o.canned.type.AGENTSBUSY) || (visitorInteraction.Fields.SubType == $o.canned.type.OVERBOOKING)) { responsed = true; }
                        $o.canned.createCanned(cannedRecord, responsed);

                        if (visitorInteraction.Fields.SubType == $o.canned.type.TRANSFER) {
                            $o.chat.toogleDenyVisitorTyping(false);
                        }
                    }

                    else if (visitorInteraction.Type == "Gdpr") {
                        var gdprRecord = {
                            Body: visitorInteraction.Fields.Content,
                            Tokens: visitorInteraction.Tokens,
                            SentBy: visitorInteraction.SentBy,
                            Type: visitorInteraction.Fields.SubType,
                            Name: visitorInteraction.Fields.Name,
                            Id: visitorInteraction.Fields.Id,
                            Time: visitorInteraction.CreatedAt,
                            Response: visitorInteraction.Fields.Response
                        };

                        $o.canned.createGdpr(gdprRecord, true);

                    }

                    //RESPUESTA CANNED
                    else if (visitorInteraction.Type == "CannedResponse") {
                        var cannedResponseRecord = {
                            Id: visitorInteraction.Fields.Id,
                            Response: visitorInteraction.Fields.Response
                        };
                        $o.canned.updateCannedWithResponse(cannedResponseRecord);
                    }

                    //FORM
                    else if (visitorInteraction.Type == "Form") {
                        var formRecord = {
                            Body: visitorInteraction.Fields.Content,
                            Tokens: visitorInteraction.Tokens,
                            SentBy: visitorInteraction.SentBy,
                            Name: visitorInteraction.Fields.Name,
                            Time: visitorInteraction.CreatedAt,
                            Id: visitorInteraction.Fields.Id,
                            Type: visitorInteraction.Fields.SubType,
                            Response: visitorInteraction.Fields.Response
                        };
                        $o.forms.createForm(formRecord, true);
                    }

                    //RESPUESTA FORM
                    else if (visitorInteraction.Type == "FormResponse") {
                        var responseRecord = {
                            Id: visitorInteraction.Fields.Id,
                            Response: JSON.parse(visitorInteraction.Fields.Response)
                        };
                        $o.forms.updateFormWithResponse(responseRecord);
                    }

                    //DOCUMENT LINK
                    else if (visitorInteraction.Type == "DocumentLink") {
                        var doc = {
                            Body: visitorInteraction.Fields.Url,
                            Room: $o.core.globalVariables.room,
                            SentBy: visitorInteraction.SentBy,
                            Type: visitorInteraction.Fields.Extension,
                            Category: "DOCS",
                            Id: $o.tools.generateRandomId()
                        };
                        $o.forms.createDocs(doc, true);
                    }

                    //IMAGE
                    else if (visitorInteraction.Type == "Image" && !onlyMessages) {
                        var imageRecord = {
                            InternalId: visitorInteraction.ProductId,
                            URLMedia: visitorInteraction.Fields.Thumbnail,
                            Scope: visitorInteraction.Fields.Scope,
                            Order: parseInt(key)
                        };
                        $o.recoverRecords.lastImageChange = imageRecord;
                    }

                    //PIN
                    else if (visitorInteraction.Type == "Pin" && !onlyMessages) {
                        var pin = {
                            Coords: {
                                PosX: visitorInteraction.Fields.CoordX,
                                PosY: visitorInteraction.Fields.CoordY
                            },
                            InternalId: visitorInteraction.ProductId,
                            Scope: visitorInteraction.Fields.Scope,
                            Type: "P",
                            Id: visitorInteraction.Fields.Id
                        };
                        $o.pin.pinsHistory.push(pin);
                    }

                    //UNDO
                    else if (visitorInteraction.Type == "Undo" && !onlyMessages) {
                        $o.tools.deletePin(visitorInteraction.Fields.Id);
                    }

                    //ZOOM
                    else if (visitorInteraction.Type == "Zoom" && !onlyMessages) {
                        var zoomRecord = {
                            InternalId: visitorInteraction.ProductId,
                            Level: visitorInteraction.Fields.Level,
                            Scope: visitorInteraction.Fields.Scope,
                            Order: parseInt(key)
                        };
                        $o.recoverRecords.lastZoomChange = zoomRecord;
                    }

                    //SIDEBUBBLE
                    else if (visitorInteraction.Type == "SideBubble") {
                        $o.sideBubbles.recover(visitorInteraction);
                    }

                    //CHOICE
                    else if (visitorInteraction.Type == "Choice") {
                        $o.choices.recover(visitorInteraction);
                    }
                    else if (visitorInteraction.Type == "ChoiceResponse") {
                        $o.choiceResponses.recover(visitorInteraction);
                    }
                    else if (visitorInteraction.Type == "CustomForm") {
                        $o.customForms.recover(visitorInteraction);
                    }
                    else if (visitorInteraction.Type == "CustomFormResponse") {
                        $o.customFormsResponses.recover(visitorInteraction);
                    }
                }
                //--FIN de recorrer interaccions

                if (!onlyMessages) {
                    //recupera busqueda
                    if (lastSearch != "") {
                        $o.search.sortedBy = lastSearch.orderby;
                        $o.search.direction = lastSearch.dir;
                        $o.search.doSearch(lastSearch.term, undefined, "RECOVER");
                        $("#search-term").val(lastSearch.term);
                    } else if (lastRelatedSearch != "" && lastSearch == "") {
                        $o.platform.searchProductsByCategory(lastRelatedSearch, "RECOVER");
                        $("#search-term").val("");
                    }

                    $o.recoverRecords.cartManagement();

                    //recorremos los productos vistos y recopilamos los que no se han visto anteriormente
                    //sirve por si se han visto varios productos rapido sin abrir oct8ne
                    if ($o.enterData.productsViewed.length) {
                        $o.recoverRecords.newProductsFromTrackingBar(changeNodeInteractionsIds);
                    };

                    $o.recoverRecords.showCurrentProduct();

                    $o.enterData.idProduct = "";
                } else {
                    $("#loading-message-interactions").remove();
                    $("#oct8ne-chat-room").animate({ scrollTop: 10000 }, 1000);
                }

                $o.recoverRecords.startingRecoverViewer = false;
                $.each($o.chat.queueChats, function (i) {
                    window.oct8ne.chat.updateMessage($o.chat.queueChats[i], "recoverfromV");
                });
            }
            if (!onlyMessages && $o.platform) {
                // console.log("from-recover-records");
                $o.platform.addPlatformLogin();
            }
        },

        showCurrentProduct: function () {

            // decidimos el producto que se ha de mostrar en el visor
            var lastInteraction = $o.recoverRecords.changeNodeInteractions[$o.recoverRecords.changeNodeInteractions.length - 1];
            //si hay productos de tracking bar nuevos o ( que no coinciden con el ultimo visto o no hay vistos anteriormente)
            if (($o.enterData.idProduct) && ($o.enterData.idProduct != "") && ($o.enterData.idProduct != "undefined") && (((lastInteraction != undefined) && ($o.enterData.idProduct != lastInteraction.InternalId) && ($o.core.globalVariables.pageType == "Product")) || (lastInteraction == undefined) || $o.core.globalVariables.enterType == $o.core.enterType.RECOVERSESSION)) {
                $o.platform.getFullProductInfo($o.enterData.idProduct, $o.carousel.lists.VIEWED);
            } else {

                //si no hay productos de tracking bar o es igual al de la última interaccion cojemos la ultima interaccion
                if (lastInteraction) {
                    var imageChangeScope = 0;

                    //si hay cambio de imagen en el producto a mostrar
                    if (($o.recoverRecords.lastImageChange != "") && ($o.recoverRecords.lastImageChange.InternalId == lastInteraction.InternalId) && ($o.recoverRecords.lastImageChange.Order > lastInteraction.Order)) {
                        imageChangeScope = $o.recoverRecords.lastImageChange.Scope - 1;
                    }

                    //si hay cambio de zoom en el producto a mostrar resetea al agente
                    if ($o.core.isSignalRConnected()) {
                        if ($o.recoverRecords.lastZoomChange != "" && $o.recoverRecords.lastZoomChange.InternalId == lastInteraction.InternalId && $o.recoverRecords.lastZoomChange.Order > lastInteraction.Order) {
                            if ((imageChangeScope != 0 && $o.recoverRecords.lastZoomChange.Order > $o.recoverRecords.lastImageChange.Order) || (imageChangeScope == 0)) {
                                if ($o.core.isSignalRConnected()) $o.hubsOut.sendResetImage();
                            }
                        }
                    }
                    if ((lastInteraction.Type == "CatalogItem") || (lastInteraction.Type == "UploadItem")) {
                        $o.carousel.sentProductToCanva(lastInteraction.InternalId, "RECOVER");
                    } else {
                        $o.platform.getFullProductInfo(lastInteraction.InternalId, lastInteraction.List, "RECOVER", imageChangeScope);
                    }
                }
            };
        },

        newProductsFromTrackingBar: function (changeNodeInteractionsIds) {
            var productsFromPage = $o.enterData.productsViewed.split(",");
            $.each(productsFromPage, function (w) {
                var productSeenBefore = false;
                $.each(changeNodeInteractionsIds, function (x) {
                    if (productsFromPage[w] == changeNodeInteractionsIds[x]) {
                        productSeenBefore = true;
                    }
                });
                if (!productSeenBefore) {
                    $o.recoverRecords.newProductsFromPage.push(productsFromPage[w]);
                }
            });
            $o.enterData.productsViewed = "";
            //FALTA MOSTRAR newProductsFromPage!!!!!!!!!!!!!!!!!!!!!!
        },

        cartManagement: function () {
            //--- gestion cart
            var nodesToDeleteFromCart = [];
            $.each($o.recoverRecords.removedFromCartInteractions, function (h) {
                $.each($o.recoverRecords.addToCartInteractions, function (j) {
                    if ($o.recoverRecords.removedFromCartInteractions[h].ProductId == $o.recoverRecords.addToCartInteractions[j].InternalId) {
                        nodesToDeleteFromCart.push(j);
                    };
                });
            });
            $.each(nodesToDeleteFromCart, function (m) {
                $o.recoverRecords.addToCartInteractions.splice(nodesToDeleteFromCart[m], 1);
            });

            //$.each($o.recoverRecords.addToCartInteractions, function (x) {
            //    $o.recoverRecords.changeNodeInteractions.push($o.recoverRecords.addToCartInteractions[x]);
            //});
        },

        searchInteractionToObject: function (searchString) {
            var pairs = (searchString).split('&');
            var result = {};
            for (var i in pairs) {
                var pair = pairs[i].split('=');
                if (!pair[1]) {
                    result["term"] = decodeURIComponent(pair[0] || '');
                } else {
                    result[pair[0].toLowerCase()] = decodeURIComponent(pair[1] || '');
                }
            }
            return result;
        },

        interactionsList: {
            agent: "",
            visitors: {},
            fromTransfer: []
        },

        changeNodeInteractions: [],
        lastImageChange: "",
        lastZoomChange: "",
        addToCartInteractions: [],
        newProductsFromPage: [],
        removedFromCartInteractions: [],
        startingRecoverViewer: false
    };
})(window);;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.visitorSearch = {
        init: function () {
            $o.visitorSearch.events();

            $("#send-access-form-info").on("click", function () {
                var validDepts = true, validInfo = false, errorClass = "data-contact-error";

                if ($o.visitorStart.showDepartmentsSelect) {
                    $o.visitorStart.selectedDepartment = $("#select-department").val();
                    if ($o.visitorStart.selectedDepartment == "null") {
                        $("#select-department").addClass(errorClass);
                        validDepts = false;
                    } else {
                        $("#select-department").removeClass(errorClass);
                        validDepts = true;
                    }
                }
                if ($o.settings.showAccessForm) {
                    var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
                    $o.visitorSearch.accesFormNameInput = $("#access-form-name"),
                        $o.visitorSearch.accesFormEmailInput = $("#access-form-email"),
                        $o.visitorSearch.accesFormMessageInput = $("#access-form-message");

                    if ($o.visitorSearch.accesFormNameInput.val().length <= 0) $o.visitorSearch.accesFormNameInput.addClass(errorClass);
                    else $o.visitorSearch.accesFormNameInput.removeClass(errorClass);

                    if ($o.visitorSearch.accesFormEmailInput.val().length <= 0) $o.visitorSearch.accesFormEmailInput.addClass(errorClass);
                    else if (!regex.test($o.visitorSearch.accesFormEmailInput.val().trim())) $o.visitorSearch.accesFormEmailInput.addClass(errorClass);
                    else $o.visitorSearch.accesFormEmailInput.removeClass(errorClass);

                    if ($("#access-form-phone").is(":visible")) { //campo opcional para Sellam y Fodeocci (if en vista)
                        $o.visitorSearch.accesFormPhoneInput = $("#access-form-phone");
                        var regexPhone = /^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]*$/;
                        if ($o.visitorSearch.accesFormPhoneInput.val().length <= 0) {
                            $o.visitorSearch.accesFormPhoneInput.addClass(errorClass);
                        } else if (!regexPhone.test($o.visitorSearch.accesFormPhoneInput.val().trim())) {
                            $o.visitorSearch.accesFormPhoneInput.addClass(errorClass);
                        } else {
                            $o.visitorSearch.accesFormPhoneInput.removeClass(errorClass);
                        }

                    }


                    if ($o.visitorSearch.accesFormMessageInput.val().length <= 0) $o.visitorSearch.accesFormMessageInput.addClass(errorClass);
                    else $o.visitorSearch.accesFormMessageInput.removeClass(errorClass);

                    if ($o.visitorSearch.accesFormNameInput.val().length > 0 && $o.visitorSearch.accesFormEmailInput.val().length > 0 && $o.visitorSearch.accesFormMessageInput.val().length > 0 && ($o.visitorSearch.accesFormPhoneInput ? $o.visitorSearch.accesFormPhoneInput.val().length > 0 : true)) {
                        if (regex.test($o.visitorSearch.accesFormEmailInput.val().trim())) {
                            validInfo = true;
                            if ($("#access-form-phone").is(":visible")) {
                                if (!regexPhone.test($o.visitorSearch.accesFormPhoneInput.val().trim())) {
                                    validInfo = false;
                                }
                            }
                        }
                    }
                    var checkboxPolicy = $("#checkbox-conditions-access");
                    if (checkboxPolicy.length) {
                        if (!checkboxPolicy.is(":checked")) {
                            validInfo = false;
                            $("#info-wrapper .checkbox-conditions-wrapper").addClass("not-accepted");
                        } else {
                            $("#info-wrapper .checkbox-conditions-wrapper").removeClass("not-accepted");
                        }
                    }
                } else {
                    validInfo = true;
                }

                if (validInfo && validDepts) {
                    if ($o.visitorStart.showDepartmentsSelect) {
                        parent.postMessage("SENDANALYTICSEVENT,GASelectedDepartment," + $("#select-department option:selected").text(), "*");
                    }
                    if ($o.settings.showAccessForm) {
                        $o.chat.pendingAccessFormMessage = {
                            name: $o.visitorSearch.accesFormNameInput.val(),
                            email: $o.visitorSearch.accesFormEmailInput.val(),
                            message: $o.visitorSearch.accesFormMessageInput.val()
                        };
                        if ($("#access-form-phone").is(":visible")) { //Añadimos phone si lleva
                            $o.chat.pendingAccessFormMessage.phone = $o.visitorSearch.accesFormPhoneInput.val();
                        }
                    }

                    $o.visitorSearch.accesFormActive = true;
                    var showEmailUs = false;
                    if ($o.utils && $o.utils.rewriteVisitorStartResult) {
                        showEmailUs = $o.utils.rewriteVisitorStartResult();
                    }

                    var deptId = $o.visitorStart.assignedDepartment.Id || $o.visitorStart.selectedDepartment || 0;

                    $.post("Visitor/AgentsConnected", { domainId: $o.variablesVisitor.domain, deptId: deptId, isReconnect: false }, function (result) {
                        $o.core.agentsConnected = result == "True";
                        $o.visitorStart.connectVisitor().then(function (connectionResult) {
                            $o.visitorStart.visitorStart($o.core.globalVariables.enterType);
                            if (!$o.core.agentsConnected && connectionResult == false) {
                                $o.visitorStart.agentsDisconnectedChangesUI();
                                //    //$o.inactivityAgent.clearTimerInterval();
                                //    //$o.inactivity.setVisitorActive();
                                //    //$(".connecting-agent,.agent-info").hide();
                                //    //$o.inactivity.disableChatInputUI();
                                //    ////$o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
                                $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                                    { cookie: $o.cookies.sessionWithoutAgent, value: true }
                                ]);
                            }
                        });
                    });

                    if ($o.settings.showAccessForm) {
                        $("#email-us-email").val($o.visitorSearch.accesFormEmailInput.val());
                        $("#email-us-name").val($o.visitorSearch.accesFormNameInput.val());
                        $("#email-us-comments").text($o.visitorSearch.accesFormMessageInput.val());
                    }
                    $("#access-form-wrapper").hide();

                    if ($o.core.globalVariables.enterType !== $o.core.enterType.PINCODE) {
                        if (showEmailUs !== true) {
                            $o.visitorStart.showChatWrapperUI();
                        }
                    }
                }
            });
        },

        //Send canned message in chat when user choose just looking TODO: revisar NOT USING 
        sendJustLookingChatMessage: function (message, justLookingButton) {

            if ($o.utils && $o.utils.changeWelcomeMessage) {
                message = $o.utils.changeWelcomeMessage(message);
            }

            $o.visitorSearch.sendJustLookingChatMessageUI(message, justLookingButton);
        },
        sendGdprMessage: function (message) {
            $o.visitorSearch.sendGdprMessageUI(message);
        },
        sendVipChatMessage: function (message) {
            $o.visitorSearch.sendVipChatMessageUI(message);
        },

        //Change User's status to "Waiting" in activity dashboard.
        changeToWaitingStatus: function (message, callback) {
            $o.inactivity.setVisitorActive();
            var queryString = "statusVisitor=" + $o.variablesVisitor.status
                + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                + "&tokenSession=" + $o.core.globalVariables.room
                + "&domainId=" + $o.variablesVisitor.domain + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
            if ($.connection.hub.state == $.signalR.connectionState.disconnected) {
                $.post("Visitor/AgentsConnected?" + queryString, { domainId: $o.variablesVisitor.domain, deptId: $o.visitorStart.assignedDepartment.Id, isReconnect: true }, function (agentsConnected) {
                    $o.visitorSearch.enableSelectResult = false;
                    if (agentsConnected == "True") {
                        $o.core.agentsConnected = true;
                        $o.visitorStart.restartConnection(null, true);
                        if (callback) {
                            callback($o.core.globalVariables.room);
                        }
                    } else {
                        $o.core.agentsConnected = false;
                        $o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
                        $o.inactivity.disableChatInputUI();
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                            { cookie: $o.cookies.sessionWithoutAgent, value: true }
                        ]);
                    }
                });
            } else {
                var deptId = $o.visitorStart.assignedDepartment.Id || 0;
                $.post("Visitor/AgentsConnectedWithReasonTransfer?" + queryString, { domainId: $o.variablesVisitor.domain, deptId: deptId, isReconnect: true }, function (result) {
                    if (result.agentsConnected == true) {
                        $.connection.hubInterface.server.sendStatus({ tokenVisitor: $o.core.globalVariables.myToken, tokenSession: $o.core.globalVariables.room, status: "Waiting" }).done(
                            function () {
                                $o.core.hasBeenWaiting = true;
                                if (message) $o.chat.sendMessagesBeforeConnected(message);
                                if (callback) {
                                    callback($o.core.globalVariables.room);
                                }
                            });
                        if (result.reason === "LIMITCHATEXCEEDED") {
                            var queryString = "?tokenSession=" + $o.core.globalVariables.room
                                + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                                + "&statusVisitor=" + $o.variablesVisitor.status
                                + "&idDept=" + deptId
                                + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
                                + "&typeTransfer=" + result.reason;
                            $.post("/Visitor/CreateSessionSameToken" + queryString);
                        }
                    } else {
                        //  if (!$o.forms.sessionToEmail.sendEmail) $o.forms.receiveInvitation("reconnect-session-email", "invitation");
                        // else $o.forms.receiveInvitation("reconnect-session", "invitation");
                        $o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
                        $o.inactivity.disconnectCommonActions();
                        $o.inactivity.stopProcess();
                        $o.inactivity.disableChatInputUI();
                        $o.visitorStart.changeStatus("?" + queryString, "Searching");
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                            { cookie: $o.cookies.sessionWithoutAgent, value: true }
                        ]);

                        var queryStringSameToken = "?tokenSession=" + $o.core.globalVariables.room
                            + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                            + "&statusVisitor=" + $o.variablesVisitor.status
                            + "&idDept=" + $o.visitorStart.assignedDepartment.Id
                            + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
                            + "&typeTransfer=" + result.reason;
                        $.post("/Visitor/CreateSessionSameToken" + queryStringSameToken);
                        //oct8ne.log("test transfer","warn");
                    }
                });
            }
            $o.visitorSearch.changeToWaitingStatusUI();

            //  $o.inactivityAgent.init();
        },

        getAgentStatusAfterWaiting: function (data) {
            //Esta en la overbooking list

            if (data.Visitor.Agent.AgentId == 0) {
                $o.canned.sendCanned($o.canned.type.OVERBOOKING);
                $o.inactivity.disableChatInputUI();
            }
            //l'agent que tenia assignat ja no esta disponible
            else {
                $o.core.globalVariables.otherToken = data.Visitor.Agent.Token;
                // $("#other-token").val(data.Visitor.Agent.Token);
                $o.core.globalVariables.otherName = data.Visitor.Agent.Name;
                // $("#other-name").val(data.Visitor.Agent.FirstName);
                $o.visitorSearch.assignedAgentName = data.Visitor.Agent.Name;
                $o.visitorSearch.otherAgentAfterWaitingUI(data.Visitor.Agent);
                //$o.log("Llenado de token");
            }


        },

        //Change status from overbooking to waiting.
        changeStatusOverbookingToWaiting: function (visitor) {
            $o.canned.sendCanned($o.canned.type.AGENTAVAILABLE, visitor.Agent.Name);
            var isOldAgent = $o.core.globalVariables.otherToken == visitor.Agent.Token;
            $o.core.globalVariables.otherToken = visitor.Agent.Token;
            $o.core.globalVariables.otherName = visitor.Agent.Name;
            $o.visitorSearch.assignedAgentName = visitor.Agent.Name;
            $o.visitorSearch.changeStatusOverbookingToWaitingUI(visitor);

            $("#chat-input").attr("readonly", false).focus();
            $("#chat-input").removeClass("chat-input-disabled");

            if ($(".emoji-wysiwyg-editor").is(":visible")) {
                $(".chat-input-emoji").removeClass("chat-input-disabled"); //Nuevo Visor
                $(".emoji-wysiwyg-editor").attr("contenteditable", true).focus();   //NUevo visor
            }
            //var myToken = $o.core.globalVariables.myToken;
            //var savingVisitor;
            //savingVisitor = $o.recoverRecords.interactionsList.visitors[myToken];
            //if (savingVisitor && !isOldAgent) {
            //    $o.hubsOut.sendInteractionsToAgent(visitor.Agent.Token, myToken, JSON.stringify(savingVisitor.interactions));
            //}
        },

        //crea mail: PENDIENTE PARA MOVIL!!!
        getRecordsMailInfo: function (visitorEmail) {

            var email = visitorEmail,
                agentName = $o.core.globalVariables.otherName,
                visitorName = "You",
                sessionId = $o.core.globalVariables.room,
                //1-emailTimeLineLinkUrl: caso smarthouse, link a timeline va a pgina nuestra
                //2-sendEmailBaseUrl: caso dermacenter, todas las webs tienen el mismo baseurl
                //3. caso normal
                url = $o.core.globalVariables.emailTimeLineLinkUrl || $o.core.globalVariables.sendEmailBaseUrl || $o.core.globalVariables.baseUrl,
                baseUrl = $o.core.globalVariables.protocolHttp + url,
                //  headerBkg = $(".CVBkg1").css("backgroundColor"),
                headerBkg = $(".mailHeaderBkg").css("backgroundColor"),
                textColor = $(".mailTextColor").css("color"),

                logoUrl = $(".mailImageLogoSrc").attr("data-attr"),
                viewedProducts = viewedVM.nodes(),
                mycartProducts = mycartVM.nodes(),
                mylistProducts = mylistVM.nodes(),
                listCounter = { CV: 0, ML: 0, CA: 0 },
                viewedTable = "", myListTable = "", myCartTable = "",



                createHeader = function (title) {
                    var tr = "<tr ><td colspan='4'><h3 style='margin:5px 0 0 0'>" + title + "</h3></td></tr><tr>";
                    return tr;
                },

                createRow = function (internalId, title, URLMedia) {
                    var protocol;
                    if (URLMedia.indexOf('http://') > -1 || URLMedia.indexOf('https://') > -1) protocol = "";
                    else protocol = $o.core.globalVariables.protocolHttp;

                    var tdElement = "<td align='center' class='mini-img'><a href='" + baseUrl + "?recoverSession=" + sessionId + "&productId=" + internalId + "' style='outline: 0; text-decoration: none'><img  width='150' style='border: 1px dotted #999999; width: 150px;' alt='" + title + "' src='" + protocol + URLMedia + "'></a></td>";
                    return tdElement;
                },

                createViewMoreRow = function () {
                    var tr = "</tr><tr><td colspan='4' align='right' height='10' style='padding:5px'><a href='" + baseUrl + "' >" + culture.coviewer.ViewMore + "</a></td>";
                    return tr;
                };

            for (var i = 0; i < viewedProducts.length; i++) {
                if (listCounter.CV < 8) {
                    if (listCounter.CV == 0) {
                        var header = createHeader(culture.coviewer.ItemsYouViewed);
                        viewedTable += header;
                    }
                    if (listCounter.CV == 4) viewedTable += "</tr><tr>";
                    var row = createRow(viewedProducts[i].internalId(), viewedProducts[i].title(), viewedProducts[i].thumbnail());
                    viewedTable += row;

                }
                else if (listCounter.CV == 8) {
                    var viewMoreRow = createViewMoreRow();
                    viewedTable += viewMoreRow;
                }
                ++listCounter.CV;
            };
            for (var i = 0; i < mylistProducts.length; i++) {
                if (listCounter.ML < 8) {
                    if (listCounter.ML == 0) {
                        var header = createHeader(culture.coviewer.ItemsMyList);
                        viewedTable += header;
                    }
                    if (listCounter.ML == 4) viewedTable += "</tr><tr>";
                    var row = createRow(mylistProducts[i].internalId(), mylistProducts[i].title(), mylistProducts[i].thumbnail());
                    viewedTable += row;

                }
                else if (listCounter.ML == 8) {
                    var viewMoreRow = createViewMoreRow();
                    viewedTable += viewMoreRow;
                }
                ++listCounter.ML;
            };
            for (var i = 0; i < mycartProducts.length; i++) {
                if (listCounter.CA < 8) {
                    if (listCounter.CA == 0) {
                        var header = createHeader(culture.coviewer.ItemsCart);
                        viewedTable += header;
                    }
                    if (listCounter.CA == 4) viewedTable += "</tr><tr>";
                    var row = createRow(mycartProducts[i].internalId(), mycartProducts[i].title(), mycartProducts[i].thumbnail());
                    viewedTable += row;

                }
                else if (listCounter.CA == 8) {
                    var viewMoreRow = createViewMoreRow();
                    viewedTable += viewMoreRow;
                }
                ++listCounter.CA;
            };

            if (viewedTable.length) viewedTable += "</tr>";
            if (myListTable.length) myListTable += "</tr>";
            if (myCartTable.length) myCartTable += "</tr>";

            var products = myCartTable + myListTable + viewedTable;
            var queryString = "?domainId=" + $o.variablesVisitor.domain + "&locale=" + $o.core.globalVariables.locale + "&tokenSession=" + $o.core.globalVariables.room
                + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;

            if ($o.utils && $o.utils.actualPageLogo) {
                logoUrl = $o.utils.actualPageLogo;
            }
            //  console.log(products)

            $.post("Records/SendSummaryMail" + queryString, { email: email, agentName: agentName, visitorName: visitorName, language: $o.core.globalVariables.locale, baseUrl: baseUrl, sessionId: sessionId, headerBkg: headerBkg, textColor: textColor, logoUrl: logoUrl, products: products, token: $o.core.globalVariables.myToken, sessionSummaryId: $o.core.globalVariables.sessionSummaryId }, function () {
                var interaction = {
                    Body: email,
                    Room: $o.core.globalVariables.room,
                    SentBy: "V",
                    Type: "SU",
                    Name: "Visitor"
                };
                if ($o.core.isSignalRConnected()) {
                    $o.hubsOut.sendSummary(interaction);
                }
            });
        },

        actionWhenClosingIframe: function () {
            $o.saveRecord.closeViewerB();
            $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CLOSE);
            $o.inactivityAgent.clearTimerInterval();
            $o.storage.local.set($o.core.localStorageTypes.SEARCHCACHE, $o.core.localStorageActions.REMOVE);

            if ($o.core.globalVariables.conferenceProvider && $o.visitorStart.platform != "") {
                conferenceVM.removeCallInformation();
            };
        },

        getViewedProductsForEmail: function (userData) {
            var allCurrentProducts = viewedVM.nodes();
            var viewedList = $o.visitorSearch.getProductUrls(allCurrentProducts);

            if ($o.visitorSearch.pendingUrlCatalogs.length > 0) {
                $o.visitorSearch.getCatalogUrls(viewedList, userData);
            }
            else if ($o.visitorSearch.pendingUrlProducts.length > 0) {
                $o.platform.getFullProductInfoManyProducts(viewedList, userData, $o.visitorSearch.pendingUrlProducts);
            } else {
                $o.visitorSearch.sendFormEmail(viewedList, userData);
            };
        },

        getCatalogUrls: function (viewedList, userData) {
            $.ajax({
                type: "POST",
                url: $o.settings.catalogServer + "Resources/GetCatalogItems",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ "InternalIds": JSON.stringify($o.visitorSearch.pendingUrlCatalogs), "License": $o.settings.license }),
                dataType: "json",
                success: function (result) {
                    $.each(viewedList, function (i) {
                        $.each(result, function (x) {

                            if ((result[x].InternalId == viewedList[i].Id) && (result[x].ProductUrl)) {
                                //viewedList[i].RouteTo = result[x].RouteTo.replace("https:", "").replace("http:", "");
                                viewedList[i].ProductUrl = result[x].ProductUrl;
                            }
                        });
                    });
                    if ($o.visitorSearch.pendingUrlProducts.length) {
                        $o.platform.getFullProductInfoManyProducts(viewedList, userData, $o.visitorSearch.pendingUrlProducts);
                    } else {
                        $o.visitorSearch.sendFormEmail(viewedList, userData);
                    }
                }
            });
        },

        sendFormEmail: function (allCurrentProducts, userData, fullProductsInfo) {
            var protocol = $o.core.globalVariables.protocolHttp;
            var doubleSlashPos;
            //LIO de PROTOCOLOS.EN PRESTA  llegan 2. (http:http://).. .los  borramos y le cascamos el protocolo otra vez
            for (var i = 0; i < allCurrentProducts.length; i++) {
                if (allCurrentProducts[i].ProductUrl.lastIndexOf("//") > -1) {
                    doubleSlashPos = allCurrentProducts[i].ProductUrl.lastIndexOf("//");
                    allCurrentProducts[i].ProductUrl = allCurrentProducts[i].ProductUrl.substring(doubleSlashPos, allCurrentProducts[i].ProductUrl.length);
                    allCurrentProducts[i].ProductUrl = protocol + allCurrentProducts[i].ProductUrl;
                }
                if (allCurrentProducts[i].Thumbnail.lastIndexOf("//") > -1) {
                    doubleSlashPos = allCurrentProducts[i].Thumbnail.lastIndexOf("//");
                    allCurrentProducts[i].Thumbnail = allCurrentProducts[i].Thumbnail.substring(doubleSlashPos, allCurrentProducts[i].Thumbnail.length);
                    allCurrentProducts[i].Thumbnail = protocol + allCurrentProducts[i].Thumbnail;
                }
            };
            //END LIO de PROTOCOLOS.EN PRESTA. Ahora ya esta como MAGENTO

            if (fullProductsInfo) {
                for (var i = 0; i < fullProductsInfo.length; i++) {
                    for (var x = 0; x < allCurrentProducts.length; x++) {
                        if (fullProductsInfo[i].hasOwnProperty("internalId")) {
                            if (fullProductsInfo[i].internalId == allCurrentProducts[x].Id) {
                                if (fullProductsInfo[i].productUrl.indexOf("http://") > -1 || fullProductsInfo[i].productUrl.indexOf("https://") > -1) {
                                    allCurrentProducts[x].ProductUrl = fullProductsInfo[i].productUrl;
                                }
                                else {
                                    allCurrentProducts[x].ProductUrl = protocol + fullProductsInfo[i].productUrl;
                                }
                            }
                        }
                        //no añadia links desde ajax productInfo 
                        else if (fullProductsInfo[i].hasOwnProperty("InternalId")) {
                            if (fullProductsInfo[i].InternalId == allCurrentProducts[x].Id) {
                                if (fullProductsInfo[i].ProductUrl.indexOf("http://") > -1 || fullProductsInfo[i].ProductUrl.indexOf("https://") > -1) {
                                    allCurrentProducts[x].ProductUrl = fullProductsInfo[i].RouteTo;
                                }
                                else {
                                    allCurrentProducts[x].ProductUrl = protocol + fullProductsInfo[i].RouteTo;
                                }
                            }
                        }
                    };
                };
            };


            var htmlCode = "<tr>";

            if (allCurrentProducts.length) {
                for (var i = 0; i < allCurrentProducts.length; i++) {

                    var remainder = i % 5;
                    if (remainder == 0) {
                        htmlCode += "</tr><tr>";
                    }
                    if (allCurrentProducts[i].ProductUrl) {
                        htmlCode += "<td class='mini-img'><a href='" + allCurrentProducts[i].ProductUrl + "'><img  width='140' style='width:140px;'  alt='" + allCurrentProducts[i].Title + "' src='" + allCurrentProducts[i].Thumbnail + "'/></a></td>";
                    } else {

                        htmlCode += "<td class='mini-img'><img  width='140' style='width:140px;' alt='" + allCurrentProducts[i].Title + "' src='" + allCurrentProducts[i].Thumbnail + "'/></td>";
                    }
                };
                htmlCode += "</tr>";
            } else {
                htmlCode = "<td class='header-md'>" + culture.coviewer.NoViewedProducts + "</td>";

            }

            //caso dermacenter, todas las webs tienen el mismo baseurl
            var baseUrl = $o.core.globalVariables.sendEmailBaseUrl || $o.core.globalVariables.baseUrl;

            var emailsToSend;
            var pageLogo;

            if ($o.utils && $o.utils.emailsContactUs) {
                emailsToSend = $o.utils.emailsContactUs;
            }

            if ($o.utils && $o.utils.actualUrlForContactUs) {
                baseUrl = $o.utils.actualUrlForContactUs();
            }

            if ($o.utils && $o.utils.actualPageLogo) {
                pageLogo = $o.utils.actualPageLogo;
            }


            var queryStringSendEmail = "?tokenSession=" + $o.core.globalVariables.roomForLastOperations
                + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                + "&domainId=" + $o.variablesVisitor.domain
                + "&assignedAgent=" + $o.core.globalVariables.inviteLinkAssignedAgent
                + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;

            $.post("Visitor/SendEmailUs" + queryStringSendEmail, { firstName: userData.name, email: userData.email, product: userData.product, knowUs: userData.knowUs, phone: userData.phone, zip: userData.zip, language: $o.core.globalVariables.locale, comments: userData.comments, baseUrl: baseUrl, products: htmlCode, emails: emailsToSend, pageLogo: pageLogo }, function (confirm) {
                if (confirm == "True") {

                    if ($o.utils && $o.utils.sendContactFormCallback) {
                        $o.utils.sendContactFormCallback();
                    } else {
                        $(".contact-form-fields").find("input, textarea").attr("readonly", "readonly");
                        $("#email-us-form-loading, .checkbox-conditions-wrapper").hide();
                        $("#email-success").show().find("p").html(culture.coviewer.EmailAgreement);
                    }
                } else {
                    $("#email-us-form-message").show().html(culture.coviewer.EmailError).css("color", "rgb(214, 2, 2)");
                    $("#send-email-us").show();
                    $("#email-us-form-loading").hide();
                }
            });

            //console.log(htmlCode);

            if ($o.core.isSignalRConnected()) {
                $.connection.hub.stop();
                var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
                $o.visitorStart.changeStatus(queryString, "Searching");
                $o.core.agentsConnected = false;
            }
        },

        getProductUrls: function (list) {
            var protocol = $o.core.globalVariables.protocolHttp;
            var listWithUrls = [];

            $.each(list, function (i) {
                var url = "";
                if (list[i].internalId().indexOf('Oct8neCatalog') > -1) {
                    $o.visitorSearch.pendingUrlCatalogs.push(list[i].internalId());
                } else {
                    var product = $o.fullProducts.searchProduct(list[i].internalId());
                    if (product) {
                        url = protocol + product.RouteTo;
                    } else {
                        $o.visitorSearch.pendingUrlProducts.push(list[i].internalId());
                    }
                }

                var thumb = list[i].thumbnail().indexOf('upload.oct8ne.com') > -1 || list[i].internalId().indexOf('Catalog') > -1 ? list[i].thumbnail() : protocol + list[i].thumbnail();

                listWithUrls.push({
                    Id: list[i].internalId(),
                    Title: list[i].title(),
                    Thumbnail: thumb,
                    ProductUrl: url
                });
            });

            return listWithUrls;
        },
        accesFormActive: false,
        accesFormNameInput: "",
        accesFormEmailInput: "",
        accesFormMessageInput: "",
        assignedAgentName: "",
        enableSelectResult: true,
        disableChangeToWaiting: false,
        openProduct: false,
        showedJustLookingMessage: false,
        showedGdprMessage: false,
        pendingUrlProducts: [],
        pendingUrlCatalogs: []
    };
})(window);;

window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.visitorStart = {
        doStart: function (enterType) {
            $o.chat.toogleDenyVisitorTyping(true);//Para que el vistante no pueda escribir hasta que haya pasado el Visitor/Start
            $o.variablesVisitor.lastInteractionAFK = new Date(); //está para que al clicar sobre el chat mientras aparece "Conectando con un agente" no aparezca la capa de AFK

            parent.postMessage("GETPARAMETERS", "*");
            $o.visitorStart.events();
            $o.visitorStart.enterTypeForStart = enterType;

            if ($o.core.globalVariables.conferenceProvider && $o.visitorStart.platform != "") { //Puede tener conferenceProvider,  pero que no hayan los archivos de videoconferencia cargados. En caso de NO ser https!.
                $.connection.hub.disconnected(function () {
                    $o.visitorStart.platform.onSelfDisconnected.trigger();
                });
            };
        },

        getVisitorStartData: function (info) {
            var pageInfo = JSON.parse(info);

            $o.core.globalVariables.pageUrl = pageInfo.pageUrl;
            $o.core.globalVariables.urlHash = pageInfo.urlHash;
            $o.core.globalVariables.userAgent = pageInfo.userAgent;
            $o.core.globalVariables.isDevice = pageInfo.isDevice;

            $o.core.globalVariables.pageTitle = pageInfo.pageTitle;
            $o.core.globalVariables.pageType = pageInfo.pageType;
            $o.core.globalVariables.customOptions = (pageInfo.hasOwnProperty("options")) ? JSON.parse(pageInfo.options) : "";
            $o.core.globalVariables.customData = (pageInfo.hasOwnProperty("customData")) ? JSON.parse(pageInfo.customData) : "";
            $o.core.globalVariables.navigationUrls = (pageInfo.hasOwnProperty("navigation")) ? pageInfo.navigation : "";
            $o.core.globalVariables.actualUrl = (pageInfo.hasOwnProperty("actualUrl")) ? pageInfo.actualUrl : "";
            $o.core.globalVariables.triggerMessage = (pageInfo.hasOwnProperty("triggerMessage")) ? pageInfo.triggerMessage : null;
            $o.core.globalVariables.forceAssignToAgents = (pageInfo.hasOwnProperty("forceAssignToAgents")) ? pageInfo.forceAssignToAgents : false;
            $o.core.globalVariables.treePreviewId = (pageInfo.hasOwnProperty("treePreviewId")) ? pageInfo.treePreviewId : false;
            $o.core.globalVariables.treePreviewNodeId = (pageInfo.hasOwnProperty("treePreviewNodeId")) ? pageInfo.treePreviewNodeId : false;
            $o.core.globalVariables.firstAccessPage = $o.core.globalVariables.navigationUrls.length ? $o.core.globalVariables.navigationUrls[0] : "";
            $o.core.globalVariables.isCustomApp = pageInfo.customApp;
            //form oct8ne.bot.gotoHome/gotoAction
            $o.core.globalVariables.treeStartFromGoto = (pageInfo.hasOwnProperty("treeStartFromGoto")) ? JSON.parse(pageInfo.treeStartFromGoto) : null;

            $o.storage.local.values = pageInfo.localStorageValues;
            oct8ne.log("RECUPERAMOS localStorage");

            $o.core.globalVariables.forceAssignToAgents = (pageInfo.hasOwnProperty("forceAssignToAgents")) ? pageInfo.forceAssignToAgents : false;

            var productId = $o.enterData.idProduct;
            if (productId === "") {
                productId = 0
            } else {
                productId = parseInt($o.enterData.idProduct);
            }
            $o.core.globalVariables.botProductId = productId;
            $o.core.globalVariables.customTheme = pageInfo.customTheme;

            if (typeof ($o.core.globalVariables.customTheme) === "string" && $o.core.globalVariables.customTheme.length) {
                $o.visitorStart.loadCustomThemeFromApi($o.core.globalVariables.customTheme, $o.visitorStart.continueLoadingWithVisitorDataLoaded);
            } else {
                $o.visitorStart.continueLoadingWithVisitorDataLoaded()
            }
        },

        continueLoadingWithVisitorDataLoaded: function () {
            $o.fullProducts.recoverProductsFromLocalStorage();
            $o.inactivity.init();
            $o.visitorStart.setSound();
            $o.visitorStart.startVisitorConnection($o.visitorStart.enterTypeForStart);
        },

        startVisitorConnection: function (enterType) {
            if ($o.core.globalVariables.customOptions && ($o.core.globalVariables.customOptions.hasOwnProperty("user"))) {
                if ($o.core.globalVariables.customOptions.user.name && $o.core.globalVariables.customOptions.user.email) {
                    $("#access-form-name,#email-us-name").val($o.core.globalVariables.customOptions.user.name);
                    $("#email-us-email,#access-form-email").val($o.core.globalVariables.customOptions.user.email);
                }
            }
            if (enterType == $o.core.enterType.TREEPREVIEW) {
                TreePreview.preparePreview();
            }
            $o.visitorSearch.enableSelectResult = false;
            if ($o.core.globalVariables.agentsConnected == "True") {
                $o.visitorStart.showAccessForm = $o.visitorStart.checkAccessFormData(enterType);
                if (enterType == $o.core.enterType.PINCODE) parent.postMessage("SHOWPINCODELOADING", "*");
                if (enterType == $o.core.enterType.LOGINPAGE) $o.platform.goneToLogin = true;
                $o.core.agentsConnected = true;

                $o.visitorStart.connectVisitor().then(function (result) {
                    $o.visitorStart.showContent(enterType, result);
                    if (result) {
                        $o.delayAction.tryRecover();
                    }
                });

            } else if (enterType != $o.core.enterType.PINCODE) {
                $o.core.agentsConnected = false;
                $o.visitorStart.agentsDisconnectedChangesUI();
                $o.iframes.init();
                $o.visitorStart.visitorStart(enterType);
            } else {
                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CLOSE);
            }
        },

        connectVisitor: function () {
            return new Promise(function (resolve, reject) {
                var forceConnection = false;
                if ($o.settings.license == "F3EF64437344DAD9D0C599891E248C6B" && ($o.core.globalVariables.pageUrl.indexOf("bolsa") > -1 || $o.core.globalVariables.pageUrl.indexOf("compra") > -1 || $o.core.globalVariables.pageUrl.indexOf("checkout") > -1)) {
                    forceConnection = true;

                }
                if ($o.settings.license == "883AD255BBCC9AAABAA4214ACB2BF62E" && ($o.core.globalVariables.pageUrl.indexOf("bolsa") > -1 || $o.core.globalVariables.pageUrl.indexOf("compra") > -1 || $o.core.globalVariables.pageUrl.indexOf("checkout") > -1)) {
                    forceConnection = true;
                }

                if ($o.core.agentsConnected == true && (!$o.core.globalVariables.visitorsOverflow || forceConnection) && ($o.visitorStart.showAccessForm == false || $o.visitorSearch.accesFormActive == true)) {
                    $.connection.hub.reconnected(function () {
                        setTimeout(function () {
                            $o.visitorStart.reconnectVisitorSignalR();
                        }, 5000);
                    });
                    $.connection.hub.start().done(function () {
                        resolve(true);
                    });
                } else {
                    resolve(false);
                }
            });
        },

        showContent: function (enterType, checkInactivity) {
            if ($o.core.globalVariables.room && $o.core.isSignalRConnected()) {
                $.connection.hubInterface.server.closeLastConnection($o.core.globalVariables.room);
            }
            $("#email-us-form").hide(); //PORQUE? NO DEBERIA ESTAR AQUI.
            if (checkInactivity && $o.variablesVisitor.status == "") $o.inactivity.justLooking.start();

            if ($o.visitorStart.showDepartmentsSelect || $o.visitorStart.showAccessForm) {
                $o.visitorStart.showAccessFormWrapperUI($o.visitorStart.showDepartmentsSelect, $o.settings.showAccessForm);
                if ($("#iframe-status").val() !== "MINIMIZED") {
                    $("#iframe-status").val($o.iframes.iframeStatus.CHAT);
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT);
                }
                $o.iframes.init();
            } else {
                $o.visitorStart.visitorStart(enterType);
                if (enterType != $o.core.enterType.PINCODE) $o.visitorStart.showChatWrapperUI();
                $o.iframes.init();
            }
        },

        checkAccessFormData: function (enterType) {
            $o.visitorStart.showDepartmentsSelect = $o.visitorStart.checkDepartments(enterType);
            if ($o.visitorStart.checkFormAndDepts(enterType) && ($o.settings.showAccessForm || $o.visitorStart.showDepartmentsSelect)) {
                return true;
            } else {
                return false;
            }
        },

        checkDepartments: function (enterType) {
            //comprobamos que no sea reopen
            if ($o.visitorStart.checkFormAndDepts(enterType) && $o.core.globalVariables.enabledDepartments == 'True') {
                //solo hay dept initial
                if ($o.settings.listDepts.length == 1) {
                    $o.visitorStart.selectedDepartment = $o.settings.listDepts[0].id;
                    //varios depts
                } else if ($o.settings.listDepts.length > 1) {
                    var agentsConnected = [];
                    $.each($o.settings.listDepts, function (i) {
                        if ($o.settings.listDepts[i].agentsConnected == "True") agentsConnected.push($o.settings.listDepts[i].id);
                    });
                    //solo hay agentes conectados en uno
                    if (agentsConnected.length == 1) {
                        $o.visitorStart.selectedDepartment = agentsConnected[0];
                        //agentes conectados en varios
                    } else if (agentsConnected.length > 1) {
                        return true;
                    }
                }
            }
            return false;
        },

        checkFormAndDepts: function (enterType) {
            if ((($o.core.globalVariables.room == "")
                && ((enterType != $o.core.enterType.AUTOOPEN) || (enterType == $o.core.enterType.AUTOOPEN && !$o.core.globalVariables.inviteLinkAssignedAgent))
                && (enterType != $o.core.enterType.CHECKOUT && enterType != $o.core.enterType.PINCODE && enterType != $o.core.enterType.REOPEN && enterType != $o.core.enterType.LOGINPAGE && enterType != $o.core.enterType.PRODUCTPAGE && enterType != $o.core.enterType.REOPENFROMLOGIN && enterType != $o.core.enterType.RECOVERSESSION))) {
                return true;
            } else {
                return false;
            }
        },

        resetVariables: function () {
            $o.translate.isEnabled = false;
        },

        visitorStart: function (enterType) {
            $o.visitorStart.resetVariables();
            if ($o.utils && $o.utils.commonCustomInterface) { $o.utils.commonCustomInterface(); }
            //var domainId = $o.core.getCookie("VisitorDomainId");
            var time = new Date();
            // var search = $o.enterData.searchTerm || $o.core.getCookie("Oct8ne-Search-" + domainId) || "";
            if (($o.core.globalVariables.room != "") &&
                (enterType != $o.core.enterType.CHECKOUT &&
                    enterType != $o.core.enterType.LOGINPAGE &&
                    enterType != $o.core.enterType.PRODUCTPAGE &&
                    enterType != $o.core.enterType.REOPENFROMLOGIN &&
                    enterType != $o.core.enterType.RECOVERSESSION) &&
                enterType != $o.core.enterType.TREEPREVIEW) {
                $o.core.globalVariables.enterType = $o.core.enterType.REOPEN;
                enterType = $o.core.enterType.REOPEN;
            }

            if ($o.core.globalVariables.inviteLinkAssignedAgent && enterType == $o.core.enterType.AUTOOPEN) {
                $o.variablesVisitor.status = "Waiting";
            }
            var queryString = "statusVisitor=" + $o.variablesVisitor.status
                + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                + "&tokenSession=" + $o.core.globalVariables.room
                + "&domainId=" + $o.variablesVisitor.domain
                + "&locale=" + $o.core.globalVariables.locale
                + "&baseUrl=" + $o.core.globalVariables.baseUrl
                + "&currencyVisitor=" + $o.core.globalVariables.currencyVisitor
                + "&apiVersion=" + $o.core.globalVariables.apiVersion
                + "&assignedAgent=" + $o.core.globalVariables.inviteLinkAssignedAgent
                + "&exclusiveAgent=" + $o.core.globalVariables.inviteLinkExclusiveAgent
                + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
                + "&platform=" + $o.core.globalVariables.platform
                + "&forceAssignToAgents=" + $o.core.globalVariables.forceAssignToAgents;

            var visitorHasAudioDevices = $o.core.globalVariables.conferenceProvider ? $o.core.globalVariables.visitorHasAudioDevices : false;
            var visitorHasVideoDevices = $o.core.globalVariables.conferenceProvider ? $o.core.globalVariables.visitorHasVideoDevices : false;

            var connectionId = $.connection.hub.id;
            if (!connectionId || connectionId == undefined || connectionId == "undefined") {
                connectionId = null;//asegurar de que al servidor no se envia un string "undefined"
            }

            $.post("Visitor/Start?" + queryString,
                {
                    connectionId: connectionId,
                    deptSelected: parseInt($o.visitorStart.selectedDepartment),
                    time: time.getTimezoneOffset(),
                    entertype: enterType,
                    iframeStatus: $o.iframes.currentIframeStatus,
                    pageTitle: $o.core.globalVariables.pageTitle,
                    pageUrl: $o.core.globalVariables.pageUrl,
                    pageType: $o.core.globalVariables.pageType,
                    visitorHasAudioDevices: visitorHasAudioDevices,
                    visitorHasVideoDevices: visitorHasVideoDevices,
                    customOptions: JSON.stringify($o.core.globalVariables.customOptions),
                    visitorProtocolPage: window.location.protocol,
                    visitorsOverflow: $o.core.globalVariables.visitorsOverflow,
                    allowedDepartmentsId: $o.enterData.allowedDepartmentsId,
                    startDefaultCategories: $o.utils && $o.utils.startDefaultCatalog ? $o.utils.startDefaultCatalog : null,
                    totalCartValue: null
                },
                function (result) {
                    $o.chat.toogleDenyVisitorTyping(false); //Para que el visitante pueda escribir una vez se le haya asignado un agente

                    if (result.VisitorNotInDicc) {
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" }, { cookie: $o.cookies.lastInteractionAFK, value: "" },]);
                        $("#lay-AFK .afk-content-advice").text(culture.coviewer.AdviceNotInDic);
                        $("#lay-AFK").show();
                        $("#chat-input").blur();
                        if ($.connection.hub.state != $.signalR.connectionState.disconnected) $.connection.hub.stop();
                    }
                    if ($.connection.hub.id) {
                        $o.core.globalVariables.visitorsOverflow = false;
                    }


                    if (result.License == "9D78F0EE93468E25586B540ADE7B0461" && (result.Agent && result.Agent.AgentId == 0)) {
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" },
                        { cookie: $o.cookies.lastInteractionAFK, value: "" }, { cookie: $o.cookies.status, value: "" }]);
                        $("#lay-AFK .afk-content-advice").text(culture.coviewer.AdviceNotInDic);
                        $("#lay-AFK").show();
                        $("#chat-input").blur();
                        if ($.connection.hub.state != $.signalR.connectionState.disconnected) $.connection.hub.stop();
                        return;
                    }
                    var rightNowInteraction2 = new Date();
                    $o.variablesVisitor.lastInteractionAFK = rightNowInteraction2;
                    $o.core.globalVariables.myToken = result.Token;
                    if (result.Status == "Attending" && result.Status != $o.variablesVisitor.status) {
                        var queryString = "?tokenSession=" + result.Room + "&sessionSummaryId=" + result.SessionSummaryId;
                        $o.visitorStart.changeStatus(queryString, result.Status);
                        $o.visitorPixel.sales.setCookie();
                        $o.carousel.sendProductToAnalytics("V");
                        //$o.inactivity.attending.start();
                        $o.core.hasBeenWaiting = true;
                        $o.visitorStart.changeHeaderChatToChatting();
                    }
                    $o.variablesVisitor.lastInteractionAFK = null;

                    if ($o.utils && $o.utils.actionsAfterVisitorStart) { $o.utils.actionsAfterVisitorStart(); }

                    var rightNowInteraction = new Date();
                    if (result.EnterType === $o.core.enterType.TRIGGER && $o.core.globalVariables.device != "mobile" && $o.variablesVisitor.soundNotificationEnabled === 'True' && $o.core.globalVariables.room === '') {
                        var playPromise = $("#visitor-sound")[0].play();
                        if (playPromise) {
                            playPromise.catch();
                        }
                    }

                    if ((result.Status != "Searching") &&
                        (!$o.core.globalVariables.inviteLinkAssignedAgent || enterType != $o.core.enterType.AUTOOPEN)) {
                        $o.core.hasBeenWaiting = true;
                    }
                    if (enterType == $o.core.enterType.REOPEN &&
                        result.EnterType == $o.core.enterType.PINCODE &&
                        result.Status != "Attending") {
                        $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CLOSE); //Cierra la ventana de pinCode cuando carga de nuevo la pagina.
                    } else {
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies,
                            [
                                { cookie: $o.cookies.status, value: result.Status },
                                { cookie: $o.cookies.tokenVisitor, value: result.Token },
                                { cookie: $o.cookies.sessionId, value: result.SessionId },
                                { cookie: $o.cookies.tokenSession, value: result.Room },
                                { cookie: $o.cookies.connection, value: $.connection.hub.id },
                                { cookie: $o.cookies.sessionSummaryId, value: result.SessionSummaryId },
                                { cookie: $o.cookies.lastInteractionAFK, value: rightNowInteraction },
                                { cookie: $o.cookies.visitorOverFlow, value: $o.core.globalVariables.visitorsOverflow },
                                { cookie: $o.cookies.firstEnter, value: "true" }
                            ]);
                        $o.variablesVisitor.lastInteractionAFK = rightNowInteraction;
                        $o.core.globalVariables.myToken = result.Token;
                        $o.core.globalVariables.room = result.Room;
                        $o.core.globalVariables.roomForLastOperations = result.Room;
                        $o.core.globalVariables.sessionSummaryId = result.SessionSummaryId;
                        if (enterType != $o.core.enterType.REOPEN && enterType != $o.core.enterType.CHECKOUT) {
                            $o.saveRecord.statusVisitor(result.Status);
                            if ($o.core.globalVariables.customOptions) {
                                $o.saveRecord.contextInfo($o.core.globalVariables.customOptions);
                            }
                        };
                        if (enterType == $o.core.enterType.treePreview) {
                            $o.visitorStart.agentsConnectedChangesUI(result);
                            $o.visitorStart.sendOnAgentAssignedEventToApi(result.Agent);
                            $o.core.globalVariables.botTreeEnabled = true;
                        }
                        if (enterType == $o.core.enterType.PINCODE) $o.iframes.showToken(result.Room);
                        var schedule = enterType == $o.core.enterType.SCHEDULE
                            ? $o.core.globalVariables.recoverSession
                            : "";

                        $o.visitorStart.assignedDepartment = result.DeptSelected;

                        if (result.Agent && (result.Agent.AgentId != 0 || result.Agent.Name == "Overbooking")) {
                            $o.core.globalVariables.agentId = result.Agent.AgentId;
                            $o.core.globalVariables.agentName = result.Agent.Name;
                            $o.visitorSearch.assignedAgentName = result.Agent.Name;
                            $o.core.globalVariables.agentType = result.Agent.Role === 99 ? $o.visitorStart.agentTypes.BOT : $o.visitorStart.agentTypes.HUMAN;

                            $o.visitorStart.agentsConnectedChangesUI(result);
                            $o.visitorStart.sendOnAgentAssignedEventToApi(result.Agent);

                            if ($.connection.hub.id)
                                $.connection.hubInterface.server.sendDashboard(result.Token,
                                    schedule,
                                    $o.iframes.currentIframeStatus);
                            $o.visitorSearch.enableSelectResult = true;
                            $o.visitorStart.enableSelectResult = true;
                            var pageUrlSanitize;
                            if ($o.core.globalVariables.pageUrl.indexOf("?") != -1
                            ) { //Limpiamos Https de los parametros para evaluar si hay que cargar conferencia.
                                pageUrlSanitize = $o.core.globalVariables.pageUrl.split("?");
                                pageUrlSanitize = pageUrlSanitize[0];
                            } else {
                                pageUrlSanitize = $o.core.globalVariables.pageUrl;
                            };

                            //SOLO SI HAY VIDEOCNFERENCIA
                            if ($o.core.globalVariables.conferenceProvider && pageUrlSanitize.indexOf("https") != -1) {
                                var session = {
                                    "visitor": {

                                        // 'hasAudioDevices': $o.core.globalVariables.visitorHasAudioDevices && result.Agent.AllowAudioConference  ? true : false,
                                        // 'hasVideoDevices': $o.core.globalVariables.visitorHasVideoDevices && result.Agent.AllowVideoConference ? true : false,
                                        //Si viene de BOT las sobreescribimos para que Visitor no pueda llamar
                                        'hasAudioDevices': result.Agent.Role === 99 ? false : $o.core.globalVariables.visitorHasAudioDevices, //&& result.VisitorCanStartConference, 
                                        'hasVideoDevices': result.Agent.Role === 99 ? false : $o.core.globalVariables.visitorHasVideoDevices,// && result.VisitorCanStartConference,
                                        'isWebRtcSupported': result.Agent.Role === 99 ? false : $o.core.globalVariables.visitorIsWebRtcSupported
                                        // 'browser': $o.core.globalVariables.visitorBrowserDevice
                                    },
                                    "agent": {
                                        //"canUseAudioConference": result.Agent.CanUseAudioConference && result.Agent.AllowAudioConference ? true : false,
                                        //"canUseVideoConference": result.Agent.CanUseVideoConference && result.Agent.AllowVideoConference ? true : false,
                                        'hasAudioDevices': result.Agent.AgentHasAudioDevices &&
                                            (result.Agent.AllowAudioConference || result.Agent.AllowMobileAudioConference)
                                            ? true
                                            : false,
                                        'hasVideoDevices': result.Agent.AgentHasVideoDevices &&
                                            (result.Agent.AllowVideoConference || result.Agent.AllowMobileVideoConference)
                                            ? true
                                            : false,
                                        'isWebRtcSupported': result.Agent.AgentIsWebRtcSupported
                                    }
                                };

                                //if (!result.Agent.AllowAudioConference || !result.Agent.AllowMobileAudioConference || !result.Agent.AgentHasAudioDevices || !result.VisitorCanStartConference) {
                                //    $("#oct8ne-conference-toolbar .btn-start-audio").hide(0); //Se esconden los botones antes de pasar por el viewmodel
                                //}
                                //if (!result.Agent.AllowVideoConference || !result.Agent.AllowMobileVideoConference  || !result.Agent.AgentHasVideoDevices || !result.VisitorCanStartConference) {
                                //    $("#oct8ne-conference-toolbar .btn-start-video").hide(0); ////Se esconden los botones antes de pasar por el viewmodel
                                //}

                                if (!result.VisitorCanStartConference) {
                                    window.conferenceVM.hideStartCallButtons(true); //To hide the posibility to make first calls in Visitor side (by setting)
                                }

                                window.conferenceVM
                                    .updateSessionInfo(
                                        session); //Una vez sabemos las capabilities de agente, updateamos info del conferenceVM en Visitor
                                window.conferenceVM
                                    .resumeCallIfNeeded(); //Rellamada Conferencia si hay una establecida.
                            }
                            //END SOLO SI HAY VIDEOCNFERENCIA

                            if (enterType == $o.core.enterType.REOPEN || enterType == $o.core.enterType.CHECKOUT) {
                                var inactivityAgentTimer =
                                    $o.storage.local.get($o.core.localStorageTypes.INACTIVITYAGENT);
                                if (inactivityAgentTimer != null) {
                                    $o.inactivityAgent.lapseTime = parseInt(inactivityAgentTimer);
                                    $o.inactivityAgent.startCounter();
                                };
                            } else {
                                $o.inactivityAgent.clearTimerInterval();
                            }

                            if (enterType == $o.core.enterType.AUTOOPEN &&
                                $o.core.globalVariables.inviteLinkAssignedAgent) {
                                $o.inactivityAgent.startCounter();
                            }
                            $o.visitorStart.displaySoundVisitorUI();


                            //INICIO BOT
                            if (result.Agent.BotType != 0) {
                                var botManager = BotFactory.create(result.Agent.BotType);
                                if (botManager != null) {
                                    $o.bot = botManager;
                                    $o.bot.init($o.core.globalVariables.visitorsOverflow, result.License);
                                }
                            }

                        } else if (enterType == $o.core.enterType.PINCODE) {
                            $o.visitorStart.agentsConnectedChangesUI(result);
                            $o.visitorStart.sendOnAgentAssignedEventToApi(result.Agent);

                            $.connection.hubInterface.server.sendDashboard(result.Token,
                                schedule,
                                $o.iframes.currentIframeStatus);
                            $o.visitorSearch.enableSelectResult = true;
                        } else {
                            if (enterType != $o.core.enterType.REOPEN)
                                parent.postMessage("SENDANALYTICSEVENT,GAContactFormViewed", "*");
                            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies,
                                [
                                    { cookie: $o.cookies.sessionWithoutAgent, value: true }
                                ]);
                            $o.core.agentsConnected = false;
                            //$o.visitorStart.displayFormCuzNoAgentsConnected(); //DEPRECATED!?
                        }

                        if ($o.settings.showAccessForm &&
                            enterType != $o.core.enterType.REOPEN &&
                            $o.visitorSearch.accesFormActive == true ||
                            ($o.core.globalVariables.customOptions.hasOwnProperty("user") &&
                                ($o.core.globalVariables.customOptions.user.email != null))) {
                            var email, name, origin;
                            //si hay info de contexto, esta prevalecerá sobre los datos de los forms
                            if ($o.core.globalVariables.customOptions.hasOwnProperty("user")) {
                                email = $o.core.globalVariables.customOptions.user.email;
                                if ($o.core.globalVariables.customOptions.user.hasOwnProperty("name")) {
                                    name = $o.core.globalVariables.customOptions.user.name;
                                } else {
                                    name = $o.core.globalVariables.myName;
                                }
                                origin = "Context Info";
                            } else {
                                //si rellena access form
                                email = $o.visitorSearch.accesFormEmailInput.val();
                                name = $o.visitorSearch.accesFormNameInput.val();
                                origin = "Access chat form";
                            }
                            $o.core.globalVariables.myName = name;
                            var user = {
                                Email: email,
                                FirstName: name,
                                Origin: origin,
                                EnterPage: $o.core.globalVariables.sendEmailBaseUrl || $o.core.globalVariables.baseUrl
                            };
                            var queryStringData = "?domainId=" +
                                result.Domain +
                                "&tokenVisitor=" +
                                result.Token +
                                "&sessionSummaryId=" +
                                result.sessionSummaryId +
                                "&tokenSession=" +
                                result.Room;
                            $.post("/Visitor/DataVisitor" + queryStringData, user);
                            if ($o.core.isSignalRConnected())
                                $o.hubsOut.sendDataVisitorToDashboard($o.core.globalVariables.myToken, user);
                        }
                        $o.visitorStart.recoverSession(enterType,
                            result.Agent ? result.Agent.CannedMessage : " ",
                            result.Agent,
                            result.Agent ? result.GdprMessage : " ");
                    }
                    });
        },

        enterActions: function () {
            if ($o.enterData.searchTerm && $o.enterData.searchTerm.length > 0) { //SI ES BÚSQUEDA
                var recover = $o.core.globalVariables.enterType == $o.core.enterType.REOPEN ? "recover" : null;
                $o.search.doSearch($o.enterData.searchTerm.replace("&", "%26"), "", recover);
            } else if ($o.enterData.productsViewed && $o.enterData.productsViewed.length > 0 && $o.enterData.productsViewed != "false") { //SI ES CATALOGO
                $o.platform.getProductSummary($o.enterData.productsViewed, $o.enterData.idProduct);
                $o.carousel.loadingProduct();
            }
            //Para las LITE con plugin que no tienen el productsViewed, que se muestre el producto actual en el covisor

            else if (($o.enterData.idProduct && $o.enterData.idProduct.length > 0 && $o.enterData.idProduct != "false") && (!$o.enterData.productsViewed || $o.enterData.productsViewed.length == 0 || $o.enterData.productsViewed == "false") && $o.core.globalVariables.edition == 1) {
                $o.platform.getFullProductInfo($o.enterData.idProduct, $o.carousel.lists.VIEWED);
            } else if ($o.core.globalVariables.enterType != $o.core.enterType.treePreview) {
                $o.visitorSearch.showSearchTutorial();
                $o.visitorSearch.showCoviewerTutorial();
            }
            if ((!$o.enterData.searchTerm) && ($o.enterData.idProduct) && (window.location.pathname.indexOf("V3") === -1)) {
                $o.platform.searchProductsByCategory($o.enterData.idProduct);
            }
        },

        recoverSession: function (enterType, message, agentsConnected, gdprMessage) {
            if (gdprMessage && enterType != $o.core.enterType.REOPEN && enterType != $o.core.enterType.RECOVERSESSION && enterType != $o.core.enterType.CHECKOUT && enterType != $o.core.enterType.LOGINPAGE && enterType != $o.core.enterType.REOPENFROMLOGIN) {
                $o.visitorSearch.sendGdprMessage(gdprMessage);
            }

            if ((enterType == $o.core.enterType.TALKEXPERT) || (enterType == $o.core.enterType.LIVECHAT) || (enterType == $o.core.enterType.TRACKINGBAR) || (enterType == $o.core.enterType.TALKEXPERTBAR) || enterType == $o.core.enterType.SEARCHBOX || enterType == $o.core.enterType.AUTOOPEN) {

                var stopCannedByUtils = $o.utils && $o.utils.stopWelcomeCanned ? $o.utils.stopWelcomeCanned : false;
                var disabledByBot = $o.core.globalVariables.agentType === $o.visitorStart.agentTypes.BOT;

                if (!stopCannedByUtils && !disabledByBot) {
                    $o.visitorSearch.sendJustLookingChatMessage(message);
                }

            } else if (enterType != $o.core.enterType.REOPEN && enterType != $o.core.enterType.CHECKOUT && enterType != $o.core.enterType.treePreview && enterType != $o.core.enterType.PRODUCTPAGE && enterType != $o.core.enterType.LOGINPAGE && enterType != $o.core.enterType.REOPENFROMLOGIN && enterType != $o.core.enterType.TRIGGER && enterType != $o.core.enterType.VIPAREA && enterType != $o.core.enterType.RECOVERSESSION && enterType != $o.core.enterType.POPUP && enterType != $o.core.enterType.TREEPREVIEW) { //SEARCH o
                var justLookingOption = $o.storage.local.get($o.core.localStorageTypes.JUSTLOOKINGOPTION);
                if (justLookingOption == "true") {
                    $o.chat.showJustLookingMessage();
                }
                $o.visitorSearch.sendJustLookingChatMessage(message, true);
            } else if (enterType == $o.core.enterType.RECOVERSESSION) {
                //enviamos canned a BBD para mostrarlo cuando lo recupere
                //solo lo hace cuando clicas en el mail, si haces f5 en la pagina no lo envía
                if (message) {
                    var canned = {
                        Body: {
                            Original: message ? message.replace(/\\n/g, "").replace(/&#39;/g, "'") : "",
                            Translated: false
                        },
                        Room: $o.core.globalVariables.room,
                        Category: "CANNED",
                        Type: $o.canned.type.WELCOME,
                        Id: $o.tools.generateRandomId(),
                        SentBy: "V"
                    };
                    $o.saveRecord.canned(canned.Body, canned.Type, canned.Id);
                }
            }
            //if ((enterType == $o.core.enterType.AUTOOPEN) && ($o.core.globalVariables.inviteLinkAssignedAgent)) {
            //    if (agentsConnected) $o.visitorSearch.changeToWaitingStatus();
            //}

            if ((enterType == $o.core.enterType.TRACKINGBAR) || (enterType == $o.core.enterType.PINCODE) || (enterType == $o.core.enterType.TALKEXPERT) || (enterType == $o.core.enterType.treePreview) || (enterType == $o.core.enterType.LIVECHAT) || (enterType == $o.core.enterType.TALKEXPERTBAR) || (enterType == $o.core.enterType.AUTOOPEN)) {
                $o.visitorStart.enterActions();
            } else if ((enterType == $o.core.enterType.TRIGGER) || (enterType == $o.core.enterType.POPUP)) {
                //if (agentsConnected && $o.enterData.statusFromTrigger == "WAITING") $o.visitorSearch.changeToWaitingStatus();
                var messageTrigger = $o.enterData.cannedMessage.length && $o.enterData.cannedMessage != "undefined" ? $o.enterData.cannedMessage : message;
                //$o.visitorSearch.sendJustLookingChatMessage(messageTrigger); YA NO VA COMO DE SISTEMA, AHORA TIENE QUE SER CHAT BUBBLE NORMAL
                //$o.chat.sendTriggerAsChat(messageTrigger);
                $o.canned.sendCanned($o.canned.type.TRIGGER, $o.core.globalVariables.triggerMessage);
                $o.visitorStart.enterActions();
            } else if (enterType == $o.core.enterType.VIPAREA) {
                $o.visitorSearch.sendVipChatMessage($o.enterData.vipMessage);
                $o.visitorStart.enterActions();
            } else if (enterType == $o.core.enterType.CHECKOUT || enterType == $o.core.enterType.REOPEN || enterType == $o.core.enterType.LOGINPAGE || enterType == $o.core.enterType.PRODUCTPAGE || enterType == $o.core.enterType.REOPENFROMLOGIN) {
                if (enterType === $o.core.enterType.CHECKOUT && $o.platform !== undefined && $o.platform.hideTotallyCartAndMyListButtons !== undefined) {
                    $o.platform.hideTotallyCartAndMyListButtons();
                }
                if ($o.core.globalVariables.device == "mobile") {
                    if ($o.core.globalVariables.pageUrl.indexOf("Reskyt") == -1) {
                        $o.visitorStart.minimizeCoviewerMobile();
                    }
                    else {
                        $("#minimized-widget").trigger("click");
                    }
                }
                $o.visitorStart.goToRecoverRecords = true;
            } else if ((enterType == $o.core.enterType.RECOVERSESSION)) {
                $o.saveRecord.linkSession($o.core.globalVariables.recoverSession);
                $o.visitorStart.goToRecoverRecords = true;
                //if (agentsConnected) $o.visitorSearch.changeToWaitingStatus();
                $o.visitorStart.enterActions();
            }
            if (enterType == $o.core.enterType.SEARCHBOX || enterType == $o.core.enterType.TRACKINGBAR) {
                $("#iframe-status").val($o.iframes.iframeStatus.SEARCH);
                var newStatus = $o.iframes.iframeStatus.SEARCH;
                if (window.location.href.indexOf("jafgifts") > -1) { newStatus = $o.iframes.iframeStatus.CHAT; }

                $("#iframe-status").val(newStatus);
                $o.iframes.changeStatusIframe(newStatus);
            }

            if ($o.chat.pendingAccessFormMessage) {
                setTimeout(function () {
                    //evitamos que se solape con la interacción del cannedmessage, si esta tarda en grabarse
                    $o.forms.sendForm($o.forms.type.ACCESSFORM, $o.chat.pendingAccessFormMessage);
                    $o.chat.prepareSend($o.chat.pendingAccessFormMessage.message);
                    $o.chat.pendingAccessFormMessage = false;
                    // $o.visitorSearch.changeToWaitingStatus();
                }, 500);
            }
            if ($o.visitorStart.goToRecoverRecords) {
                //COVIEWER_READY inside getREcords-> launches oct8ne.chatOpen event
                $o.recoverRecords.getRecords($o.variablesVisitor.tokenVisitor, $o.core.globalVariables.room);
            } else {
                //COVIEWER_READY launches oct8ne.chatOpen event
                parent.postMessage("COVIEWER_READY", "*");
                if ($o.platform) {
                    $o.platform.addPlatformLogin();
                }
            }
            if ($o.settings.allowTrackingProductsLite) {
                if (enterType != $o.core.enterType.REOPEN &&
                    enterType != $o.core.enterType.CHECKOUT &&
                    enterType != $o.core.enterType.REOPENFROMLOGIN &&
                    enterType != $o.core.enterType.LOGINPAGE &&
                    enterType != $o.core.enterType.PRODUCTPAGE) {
                    $o.catalog.getProductsByUrls($o.core.globalVariables.navigationUrls);
                }
            }
        },

        //Recupera la conexió - boton reconnect
        //el callback es el primer mensaje si el visitor esta en visitorsOverflow
        restartConnection: function (callbackText, changeToWaiting) {
            $o.visitorSearch.enableSelectResult = false;
            var visitorStart = function () {
                var time = new Date();
                var search = $o.enterData.searchTerm || "";
                var queryString = "statusVisitor=" + $o.variablesVisitor.status
                    + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                    + "&tokenSession=" + $o.core.globalVariables.room
                    + "&domainId=" + $o.variablesVisitor.domain
                    + "&locale=" + $o.core.globalVariables.locale
                    + "&baseUrl=" + $o.core.globalVariables.baseUrl
                    + "&currencyVisitor=" + $o.core.globalVariables.currencyVisitor
                    + "&apiVersion=" + $o.core.globalVariables.apiVersion
                    + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
                    + "&platform=" + $o.core.globalVariables.platform
                    + "&forceAssignToAgents=" + $o.core.globalVariables.forceAssignToAgents;

                var connectionId = $.connection.hub.id;
                if (!connectionId || connectionId == undefined || connectionId == "undefined") {
                    connectionId = null;//asegurar de que al servidor no se envia un string "undefined"
                }

                $.post("Visitor/Start?" + queryString, {
                    connectionId: connectionId,
                    time: time.getTimezoneOffset(),
                    iframeStatus: $o.iframes.currentIframeStatus,
                    pageTitle: $o.core.globalVariables.pageTitle,
                    pageUrl: $o.core.globalVariables.pageUrl,
                    pageType: $o.core.globalVariables.pageType,
                    visitorProtocolPage: window.location.protocol,
                    visitorsOverflow: $o.core.globalVariables.visitorsOverflow,
                    allowedDepartmentsId: $o.enterData.allowedDepartmentsId,
                    startDefaultCategories: $o.utils && $o.utils.startDefaultCatalog ? $o.utils.startDefaultCatalog : null
                }, function (result) {
                    $o.core.globalVariables.myToken = result.Token;
                    if (result.VisitorNotInDicc) {
                        //alert("NO ESTÁ EN EL DICCIONARIO");
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.status, value: "" }, { cookie: $o.cookies.tokenSession, value: "" }, { cookie: $o.cookies.lastInteractionAFK, value: "" }]);
                        $("#lay-AFK .afk-content-advice").text(culture.coviewer.AdviceNotInDic);
                        $("#lay-AFK").show();
                        $("#chat-input").blur();
                        if ($.connection.hub.state != $.signalR.connectionState.disconnected) $.connection.hub.stop();
                    }
                    if (result.Agent) {
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
                            { cookie: $o.cookies.status, value: result.Status },
                            { cookie: $o.cookies.sessionId, value: result.SessionId },
                            { cookie: $o.cookies.tokenSession, value: result.Room },
                            { cookie: $o.cookies.connection, value: $.connection.hub.id },
                            { cookie: $o.cookies.visitorOverFlow, value: false },
                            { cookie: $o.cookies.firstEnter, value: "true" }
                        ]);

                        var rightNowInteraction2 = new Date();
                        $o.variablesVisitor.lastInteractionAFK = rightNowInteraction2;
                        $o.core.globalVariables.myToken = result.Token;
                        if (result.Status == "Attending" && result.Status != $o.variablesVisitor.status) {
                            var queryString = "?tokenSession=" + result.Room + "&sessionSummaryId=" + result.SessionSummaryId;
                            $o.visitorStart.changeStatus(queryString, result.Status);
                            $o.visitorPixel.sales.setCookie();
                            $o.carousel.sendProductToAnalytics("V");
                            //$o.inactivity.attending.start();
                            $o.core.hasBeenWaiting = true;
                            $o.visitorStart.changeHeaderChatToChatting();
                        }
                        //$o.variablesVisitor.lastInteractionAFK = null;

                        $o.core.globalVariables.agentId = result.Agent.AgentId;
                        $o.core.globalVariables.agentName = result.Agent.Name;
                        $o.visitorSearch.assignedAgentName = result.Agent.Name;
                        $o.core.globalVariables.agentType = result.Agent.Role === 99 ? $o.visitorStart.agentTypes.BOT : $o.visitorStart.agentTypes.HUMAN;

                        $o.visitorStart.agentsConnectedChangesUI(result);
                        $o.visitorStart.sendOnAgentAssignedEventToApi(result.Agent);
                        //pasa la interaccion de la primera busqueda para poder recuperarla  desde el coviewer del agente
                        //var schedule = enterType == $o.core.enterType.SCHEDULE ? $o.core.globalVariables.recoverSession : "";
                        var schedule = "";
                        if ($o.core.isSignalRConnected()) {
                            $.connection.hubInterface.server.sendDashboard(result.Token, schedule, $o.iframes.currentIframeStatus)
                                .done(
                                    function () {
                                        var search = {
                                            Body: $o.search.searchTerm,
                                            Room: $o.core.globalVariables.room,
                                            SentBy: "V",
                                            Type: "Q"
                                        };
                                        $o.hubsOut.sendSearchTerm(search, "true");
                                    });
                        }
                    }
                    if (callbackText) {
                        $o.core.globalVariables.botTreeEnabled = result.Agent.IsBotTree;
                        if ($o.core.globalVariables.botTreeEnabled) {
                            if ($o.core.globalVariables.visitorsOverflow) {
                                $o.bot.connectOverflowAsync();
                                var checkStartedBotOffline = setInterval(function () {
                                    if ($o.core.globalVariables.startedBotOffline) {
                                        clearInterval(checkStartedBotOffline);
                                        $o.chat.prepareSend(callbackText);
                                    }
                                }, 100);
                            }
                        } else {
                            $o.core.hasBeenWaiting = true;
                            $o.chat.prepareSend(callbackText);
                        }
                    }

                    $o.visitorSearch.enableSelectResult = true;
                    $o.core.globalVariables.finishedVisitorRestartConnection = true;

                     });
            };
            if (!$o.core.isSignalRConnected()) {
                $.connection.hub.start().done(function () {
                    $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.connection, value: $.connection.hub.id }]);
                    visitorStart();
                });
            } else {
                visitorStart();
            }
        },

        reconnectVisitorSignalR: function () {
            $o.visitorSearch.enableSelectResult = false;
            var queryString = "statusVisitor=" + $o.variablesVisitor.status
                + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
                + "&tokenSession=" + $o.core.globalVariables.room
                + "&domainId=" + $o.variablesVisitor.domain
                + "&locale=" + $o.core.globalVariables.locale
                + "&baseUrl=" + $o.core.globalVariables.baseUrl
                + "&currencyVisitor=" + $o.core.globalVariables.currencyVisitor
                + "&apiVersion=" + $o.core.globalVariables.apiVersion
                + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId
                + "&license=" + $o.settings.license;

            $.post("Reconnect/ReconnectedSignalR?" + queryString, {
                connectionId: $.connection.hub.id,
                iframeStatus: $o.iframes.currentIframeStatus,
                pageTitle: $o.core.globalVariables.pageTitle,
                pageUrl: $o.core.globalVariables.pageUrl,
                pageType: $o.core.globalVariables.pageType,
                visitorsOverflow: false
            }, function (result) { });
        },

        changeStatus: function (queryString, status) {
            if (status != "Waiting") { //CONTROLA INACTIVIDAD AGENTE EN VISITOR
                $o.inactivityAgent.clearTimerInterval();
            } else {
                $o.inactivityAgent.startCounter();
            }

            $.post("/Visitor/Changestatus" + queryString, { status: status });
            $o.saveRecord.statusVisitor(status);
        },

        finishLoading: function () {
            //FUNCIONES NO NECESARIAS PARA LA CARGA
            ko.applyBindings($o.core.viewModel);
            $("#oct8ne-chat-room").css({ opacity: 1 });
            $o.visitorRatings.init();
            $o.forms.init();
        },

        checkVisitorCapabilities: function () { //CheckVisitor capabilities e inicializa conference VM            
            var settings = {
                isConferenceAllowed: false,
                name: "Visitor",
                role: $o.core.globalVariables.userType,
                conferenceProviderName: $o.core.globalVariables.conferenceProvider,
                ringTone: true,
                chromeExtensionId: $o.core.globalVariables.chromeExtensionId,
                videoUnavailableBackgroundImage: "https://static.oct8ne.com/api/img/dashboard/video-unavailable.png",
                recordingMode: "none",
                ssOnly: $o.settings.ssOnly
            };

            $o.visitorStart.platform = new Oct8ne.Conference.PlatformConnector($.connection.hubInterface.server, "/conference", true);
            window.conferenceVM = new conferenceViewModel(settings, $o.visitorStart.platform, Oct8ne.Conference.LogLevel.None); //Añadir parametro logLevel para debuggar Oct8ne.Conference.LogLevel.ConferenceCoreAndProvider or None

            var capabilityProvider = Oct8ne.Conference.Providers.CapabilitiesProviderFactory.createCapabilityProvider($o.core.globalVariables.conferenceProvider, $o.core.globalVariables.chromeExtensionId);
            var promise = capabilityProvider.getCapabilitiesAsync();
            if (promise) {
                var count = 0;
                var doStart = false;
                var interval = setInterval(function () {
                    if (count < 5) {
                        count++;
                    } else {
                        clearInterval(interval);
                        if (doStart === false) { doStart = true; $o.visitorStart.doStart($o.core.globalVariables.enterType); }
                    }
                }, 100);
                promise.then(function (caps) {
                    $o.core.globalVariables.visitorHasAudioDevices = caps.hasAudioDevices;
                    $o.core.globalVariables.visitorHasVideoDevices = caps.hasVideoDevices;
                    $o.core.globalVariables.visitorIsWebRtcSupported = caps.isWebRtcSupported;
                    $o.core.globalVariables.visitorBrowserDevice = caps.browser;
                    if (doStart === false) { doStart = true; $o.visitorStart.doStart($o.core.globalVariables.enterType); } //Si tiene Conference, antes debe hacer el checkcapablities.
                });
            }
        },

        sendCustomEvent: function (customAction, label, value) {
            parent.postMessage("SENDANALYTICSEVENT,GACustomAction," + label + "," + value + "," + customAction, "*");
        },

        hideMeByNewTab: function () {
            var interactionObject = $o.saveRecord.openNewTab();
            interactionObject[0].Fields = JSON.stringify(interactionObject[0].Fields);
            $.ajax({
                type: "POST",
                url: "/Data/SaveInteractions",
                data: { sessionSummaryId: $o.variablesVisitor.sessionSummaryId, tokenSession: $o.core.globalVariables.room, tokenVisitor: $o.variablesVisitor.tokenVisitor, jsonListData: JSON.stringify(interactionObject) },
            }).always(function () {
                if ($o.core.isSignalRConnected()) {
                    $.connection.hub.stop();
                }
                parent.postMessage("CLOSEMODAL", "*");
            });
        },

        setSound: function () {
            var soundVisitor = "true";
            soundVisitor = $o.storage.local.get($o.core.localStorageTypes.SOUND);
            $o.variablesVisitor.enabledSoundVisitor = soundVisitor == "false" ? soundVisitor : "true";
        },

        sendOnAgentAssignedEventToApi: function (agent) {
            var agentData = {
                id: agent.AgentId,
                name: agent.Name,
                avatar: agent.Avatar
            }
            parent.postMessage("NEW_AGENT_ASSIGNED," + encodeURIComponent(JSON.stringify(agentData)), "*");
        },

        loadCustomThemeFromApi: function (themeUrl, callback) {
            //if client has custom theme, we delete its tag
            $("#custom-theme-tag").remove();

            if (themeUrl.indexOf("http") == -1) {
                themeUrl = $o.core.globalVariables.cdnUrl + "api/source/css/themes/" + themeUrl;
            };

            if (themeUrl.indexOf(".css") == -1) {
                themeUrl = themeUrl + ".css";
            };

            let link = document.createElement('link');
            link.type = 'text/css';
            link.rel = 'stylesheet';
            link.href = themeUrl;
            link.onload = callback;
            link.onerror = function () {
                callback();
                throw ("Custom theme URL is not valid");
            }
            $("head").append(link)
        },

        assignedAgentName: "",
        enableSelectResult: true,
        disableChangeToWaiting: false,
        openProduct: false,
        showedJustLookingMessage: false,
        showedGdprMessage: false,
        agentDisconnectedTimer: 0,
        agentDisconnectedInterval: "",
        selectedDepartment: 0,
        assignedDepartment: "",
        platform: "",
        showAccessForm: false,
        showDepartmentsSelect: false,
        goToRecoverRecords: false,
        agentTypes: {
            BOT: "BOT",
            HUMAN: "HUMAN"
        }
    };
})(window);

generateConferenceId = function () {
    return $o.core.globalVariables.room;
};;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.storage = {
        local: {
            get: function (key) {                
                $o.storage.local.defineValues();
                var value = $o.storage.local.values[key];
                return value;
            },

            set: function (key, value) {
                //guardamos en variable por si necesitamos el valor antes de recargar página               
                $o.storage.local.defineValues();
                if (value !== $o.core.localStorageActions.REMOVE) {
                    $o.storage.local.values[key] = value;
                }
                else {
                    $o.storage.local.values[key] = null;
                }

                parent.postMessage("SETLOCALSTORAGE" + "," + key + "," + value, "*");
            },

            defineValues: function () {
                if (typeof $o.storage.local.values === "undefined") {
                    $o.storage.local.values = {};
                }
            },

            values: {}
        },

        conferenceAdapter: {
            get: function (key) {
                var value = $o.storage.local.get(key);
                return value ? JSON.parse(value) : null;
            },
            set: function (key, value) {
                $o.storage.local.set(key, JSON.stringify(value));
            },
            remove: function (key) {
                $o.storage.local.set(key, $o.core.localStorageActions.REMOVE);
            }
        }
    };
})(window);
;
var Interactions;
(function (Interactions) {
    ;
    var Categories;
    (function (Categories) {
        Categories["Choice"] = "CHOICE";
        Categories["ChoiceResponse"] = "CHOICERESPONSE";
        Categories["Zoom"] = "ZOOM";
        Categories["Chat"] = "CHAT";
        Categories["SideBubble"] = "SIDEBUBBLE";
        Categories["SideBubbleView"] = "SIDEBUBBLEVIEW";
        Categories["Validation"] = "VALIDATION";
        Categories["CustomForm"] = "CUSTOM_FORM";
        Categories["CustomFormResponse"] = "CUSTOM_FORM_RESPONSE";
    })(Categories = Interactions.Categories || (Interactions.Categories = {}));
    var Targets;
    (function (Targets) {
        Targets["Backend"] = "BACKEND";
        Targets["Frontend"] = "FRONTEND";
    })(Targets = Interactions.Targets || (Interactions.Targets = {}));
})(Interactions || (Interactions = {}));

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
window.oct8ne = window.$o = window.oct8ne || {};
var Interactions;
(function (Interactions) {
    function init(userData) {
        $o.tools.init();
        $o.search.init();
        $o.carousel.init();
        $o.canva.init();
        $o.drag.init();
        $o.pin.init();
        $o.speak.init();
        $o.filters.init();
        $o.scroll.init();
        $o.choices = Interactions.Choice.ChoiceManagerFactory.create(userData);
        $o.choiceResponses = Interactions.ChoiceResponse.ChoiceResponseManagerFactory.create(userData, $o.choices);
        $o.zoom = Interactions.Zoom.ZoomManagerFactory.create(userData);
        $o.sideBubbles = Interactions.SideBubble.SideBubbleManagerFactory.create(userData, "sideBubble");
        $o.customForms = Interactions.CustomForm.CustomFormManagerFactory.create(userData);
        $o.customFormsResponses = Interactions.CustomFormResponse.CustomFormResponseManagerFactory.create(userData, $o.customForms);
        if (userData.type == Core.UserTypes.Visitor) {
            $o.validations = new Interactions.Validation.ValidationManager(new Interactions.Validation.VisitorSideRealTimeConnector());
            $o.messageRatings = new Interactions.MessageRating.MessageRatingManager(new Interactions.MessageRating.VisitorSideRealTimeConnector());
            $o.delayAction = new Interactions.DelayAction.DelayManager(new Interactions.DelayAction.VisitorSideRealTimeConnector());
            $o.botErrors = new Interactions.Error.ErrorManager(new Interactions.Error.VisitorSideRealTimeConnector());
            $o.botProductSearch = new Interactions.ProductSearchFromBot.ProductSearchManager(new Interactions.ProductSearchFromBot.VisitorSideRealTimeConnector());
        }
    }
    Interactions.init = init;
    var BaseManager = (function () {
        function BaseManager() {
        }
        BaseManager.prototype.updateUI = function (data) { };
        BaseManager.prototype.create = function (data) { };
        BaseManager.prototype.remove = function () { };
        BaseManager.prototype.save = function (data) { };
        BaseManager.prototype.recover = function (data) { };
        BaseManager.prototype.search = function (data) { return null; };
        BaseManager.objectAdapter = function (obj, target) {
            var isObject = function (o) { return Object.prototype.toString.apply(o) === '[object Object]'; };
            var isArray = function (o) { return Object.prototype.toString.apply(o) === '[object Array]'; };
            var transformedObj = isArray(obj) ? [] : {};
            for (var key in obj) {
                if (obj.hasOwnProperty(key)) {
                    var transformedKey = void 0;
                    if (target === Interactions.Targets.Backend) {
                        transformedKey = key.replace(/^\w/, function (c, _) { return c.toUpperCase(); });
                    }
                    else {
                        transformedKey = key.replace(/^\w/, function (c, _) { return c.toLowerCase(); });
                    }
                    if (isObject(obj[key]) || isArray(obj[key])) {
                        transformedObj[transformedKey] = this.objectAdapter(obj[key], target);
                    }
                    else {
                        transformedObj[transformedKey] = obj[key];
                    }
                }
            }
            return transformedObj;
        };
        BaseManager.sleep = function (ms) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    return [2, new Promise(function (resolve) { return setTimeout(resolve, ms); })];
                });
            });
        };
        BaseManager.prototype.store = function (data) {
            return __awaiter(this, void 0, void 0, function () {
                var result;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4, $o.saveRecord.goToSave(Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Backend))];
                        case 1:
                            result = _a.sent();
                            return [2, result];
                    }
                });
            });
        };
        BaseManager.prototype.scrollBallHack = function (recoveredMessage) {
            if ($o.scroll.enableScroll) {
                setTimeout(function () {
                    $o.scroll.enableScroll();
                    $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { callbacks: false });
                }, 100);
                if (!recoveredMessage) {
                    $o.scroll.moveChatToBottom();
                }
            }
        };
        return BaseManager;
    }());
    Interactions.BaseManager = BaseManager;
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var RealTimeConnector = (function () {
        function RealTimeConnector() {
            this.subscribeToRealTimeEvents();
        }
        RealTimeConnector.prototype.send = function (data) { };
        ;
        RealTimeConnector.prototype.subscribeToRealTimeEvents = function () { };
        ;
        return RealTimeConnector;
    }());
    Interactions.RealTimeConnector = RealTimeConnector;
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Choice;
    (function (Choice) {
        var ChoiceManagerBase = (function (_super) {
            __extends(ChoiceManagerBase, _super);
            function ChoiceManagerBase() {
                var _this = _super.call(this) || this;
                _this.type = "Choice";
                _this.collection = [];
                return _this;
            }
            ChoiceManagerBase.prototype.create = function (choice) {
                var interactionChoice = this.addInteractionProperties(choice);
                this.send(interactionChoice);
                this.updateUI(interactionChoice);
                var fullData = this.addFullProperties(interactionChoice);
                this.save(fullData);
            };
            ChoiceManagerBase.prototype.send = function (choice) {
                this.realTime.send(choice);
            };
            ChoiceManagerBase.prototype.updateUI = function (data) {
                $o.chat.toogleDenyVisitorTyping(data.denyVisitorTyping);
                var fullData = this.addFullProperties(data);
                this.render(fullData, false);
            };
            ChoiceManagerBase.prototype.save = function (data) {
                var parsedData = this.parseDataForSaving(data);
                _super.prototype.store.call(this, parsedData);
            };
            ChoiceManagerBase.prototype.recover = function (data) {
                var formatted = Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Frontend);
                var recovered = this.parseDataForRecovering(formatted);
                this.render(recovered, true);
            };
            ChoiceManagerBase.prototype.search = function (id) {
                var result = null;
                for (var _i = 0, _a = this.collection; _i < _a.length; _i++) {
                    var choice = _a[_i];
                    if (choice.id === id) {
                        result = choice;
                    }
                }
                return result;
            };
            ;
            ChoiceManagerBase.prototype.render = function (data, recoveredMessage) {
                this.collection.push(data);
                $o.speak.messages.push(data);
                $o.chat.toogleDenyVisitorTyping(data.denyVisitorTyping);
                _super.prototype.scrollBallHack.call(this, recoveredMessage);
            };
            ;
            ChoiceManagerBase.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.time = Core.Helpers.getTime();
                newData.sentBy = Core.UserTypes.Agent;
                newData.category = Interactions.Categories.Choice;
                newData.response = ko.observable();
                newData.hideOptions = data.hideOptions === false ? false : true;
                return newData;
            };
            ChoiceManagerBase.prototype.parseDataForSaving = function (data) {
                var record = {
                    recoverType: 1,
                    sentBy: data.sentBy,
                    type: this.type,
                    fields: {
                        body: data.body,
                        id: data.id,
                        options: JSON.stringify(data.options),
                        type: data.type,
                        name: data.name,
                        time: data.time,
                        hideOptions: data.hideOptions,
                        denyVisitorTyping: data.denyVisitorTyping
                    }
                };
                var parsedData = [record];
                return parsedData;
            };
            ChoiceManagerBase.prototype.parseDataForRecovering = function (data) {
                var formatted = Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Frontend);
                var recoveredChoice = {
                    category: Interactions.Categories.Choice,
                    id: formatted.fields.id,
                    name: formatted.fields.name,
                    body: formatted.fields.body,
                    type: formatted.fields.type,
                    options: Interactions.BaseManager.objectAdapter(JSON.parse(formatted.fields.options), Interactions.Targets.Frontend),
                    response: ko.observable(),
                    sentBy: formatted.sentBy,
                    time: formatted.fields.time,
                    hideOptions: formatted.fields.hideOptions,
                    denyVisitorTyping: formatted.fields.denyVisitorTyping
                };
                return recoveredChoice;
            };
            ChoiceManagerBase.prototype.addInteractionProperties = function (data) {
                data.name = Core.Helpers.getMyName();
                data.id = Core.Helpers.generateId();
                return data;
            };
            return ChoiceManagerBase;
        }(Interactions.BaseManager));
        Choice.ChoiceManagerBase = ChoiceManagerBase;
    })(Choice = Interactions.Choice || (Interactions.Choice = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var Choice;
    (function (Choice) {
        ;
        var Types;
        (function (Types) {
            Types["ChoiceList"] = "ChoiceList";
            Types["ChoiceButtons"] = "ChoiceButtons";
            Types["Response"] = "RESPONSE";
        })(Types = Choice.Types || (Choice.Types = {}));
    })(Choice = Interactions.Choice || (Interactions.Choice = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var Choice;
    (function (Choice) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                $.connection.hubInterface.client.receiveChoice = function (choice, delay) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                if ($o.bot && $o.bot.responseChecker) {
                                    $o.bot.responseChecker.onResponseReceived();
                                }
                                if (delay) {
                                    $o.delay.setGlobal(delay);
                                }
                                return [4, Interactions.BaseManager.sleep($o.delay.global)];
                            case 1:
                                _a.sent();
                                $o.chat.sendIsAttendedToAnalytics("CHOICE");
                                $o.chat.playVisitorSound();
                                $o.choices.updateUI(Interactions.BaseManager.objectAdapter(choice, Interactions.Targets.Frontend));
                                $o.delay.reset();
                                return [2];
                        }
                    });
                }); };
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Choice.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.send = function (choice) {
                window.parent.sendChoice(Interactions.BaseManager.objectAdapter(choice, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Choice.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(Choice = Interactions.Choice || (Interactions.Choice = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Choice;
    (function (Choice) {
        var ChoiceVisitorSideManager = (function (_super) {
            __extends(ChoiceVisitorSideManager, _super);
            function ChoiceVisitorSideManager(hub) {
                var _this = _super.call(this) || this;
                _this.realTime = hub;
                return _this;
            }
            ChoiceVisitorSideManager.prototype.render = function (data) {
                this.disablePrevious();
                _super.prototype.render.call(this, data, false);
            };
            ;
            ChoiceVisitorSideManager.prototype.disableAllOnEnd = function () {
                for (var _i = 0, _a = $o.speak.messages(); _i < _a.length; _i++) {
                    var message = _a[_i];
                    if (message.category == "CHOICE") {
                        message.response("true");
                    }
                }
            };
            ChoiceVisitorSideManager.prototype.disablePrevious = function () {
                for (var _i = 0, _a = $o.speak.messages(); _i < _a.length; _i++) {
                    var message = _a[_i];
                    if (message.category == "CHOICE" && message.hideOptions) {
                        message.response("true");
                    }
                }
            };
            return ChoiceVisitorSideManager;
        }(Choice.ChoiceManagerBase));
        Choice.ChoiceVisitorSideManager = ChoiceVisitorSideManager;
    })(Choice = Interactions.Choice || (Interactions.Choice = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var Choice;
    (function (Choice) {
        var ChoiceManagerFactory = (function () {
            function ChoiceManagerFactory() {
            }
            ChoiceManagerFactory.create = function (userData) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentRealTimeHub = new Choice.AgentSideRealTimeConnector();
                    return new Choice.ChoiceAgentSideManager(agentRealTimeHub);
                }
                else {
                    var visitorRealTimeHub = new Choice.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new Choice.ChoiceVisitorSideManager(visitorRealTimeHub);
                    }
                    else {
                        return new Choice.ChoiceVisitorSideManager(visitorRealTimeHub);
                    }
                }
            };
            return ChoiceManagerFactory;
        }());
        Choice.ChoiceManagerFactory = ChoiceManagerFactory;
    })(Choice = Interactions.Choice || (Interactions.Choice = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var ChoiceResponse;
    (function (ChoiceResponse) {
        var ChoiceResponseManagerBase = (function (_super) {
            __extends(ChoiceResponseManagerBase, _super);
            function ChoiceResponseManagerBase(choices) {
                var _this = _super.call(this) || this;
                _this.collection = [];
                _this.choices = choices;
                return _this;
            }
            ChoiceResponseManagerBase.prototype.recover = function (response) {
                var formatted = Interactions.BaseManager.objectAdapter(response, Interactions.Targets.Frontend);
                this.setChoiceAsResponsed(formatted.fields.choiceId, formatted.fields.id);
                var recovered = {
                    choiceId: formatted.fields.choiceId,
                    body: formatted.fields.body,
                    name: formatted.fields.name,
                    time: formatted.fields.time,
                    category: Interactions.Categories.ChoiceResponse,
                    id: formatted.fields.id,
                    sentBy: formatted.sentBy
                };
                this.render(recovered, true);
            };
            ;
            ChoiceResponseManagerBase.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.time = Core.Helpers.getTime();
                newData.sentBy = Core.UserTypes.Visitor;
                newData.category = Interactions.Categories.ChoiceResponse;
                newData.id = data.id;
                return newData;
            };
            ;
            ChoiceResponseManagerBase.prototype.render = function (data, recoveredMessage) {
                this.collection.push(data);
                $o.speak.messages.push(data);
                if (!recoveredMessage) {
                    $o.scroll.moveChatToBottom();
                }
            };
            ;
            ChoiceResponseManagerBase.prototype.setChoiceAsResponsed = function (choiceId, responseId) {
                var choice = this.choices.search(choiceId);
                if (choice) {
                    choice.response(responseId);
                }
            };
            return ChoiceResponseManagerBase;
        }(Interactions.BaseManager));
        ChoiceResponse.ChoiceResponseManagerBase = ChoiceResponseManagerBase;
    })(ChoiceResponse = Interactions.ChoiceResponse || (Interactions.ChoiceResponse = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var ChoiceResponse;
    (function (ChoiceResponse) {
        ;
    })(ChoiceResponse = Interactions.ChoiceResponse || (Interactions.ChoiceResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var ChoiceResponse;
    (function (ChoiceResponse) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.send = function (responseInfo) {
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.startWaiting();
                }
                if ($o.core.isSignalRConnected()) {
                    if ($o.variablesVisitor.status != "Attending") {
                        $.connection.hubInterface.server.sendStatus({ tokenVisitor: $o.core.globalVariables.myToken, tokenSession: $o.core.globalVariables.room, status: "Waiting" }).done(function () {
                            $.connection.hubInterface.server.sendChoiceResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                        });
                    }
                    else {
                        $.connection.hubInterface.server.sendChoiceResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                    }
                }
                else {
                    $o.visitorStart.restartConnection(null, true);
                    var checkConnection = setInterval(function () {
                        return __awaiter(this, void 0, void 0, function () {
                            var checkStartedBotOffline;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!$o.core.globalVariables.finishedVisitorRestartConnection) return [3, 3];
                                        clearInterval(checkConnection);
                                        if (!$o.bot) return [3, 2];
                                        return [4, $o.bot.connectOverflowAsync()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        checkStartedBotOffline = setInterval(function () {
                                            return __awaiter(this, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if ($o.core.globalVariables.startedBotOffline) {
                                                        clearInterval(checkStartedBotOffline);
                                                        $.connection.hubInterface.server.sendStatus({
                                                            tokenVisitor: $o.core.globalVariables.myToken,
                                                            tokenSession: $o.core.globalVariables.room,
                                                            status: "Waiting"
                                                        }).done(function () {
                                                            setTimeout(function () {
                                                                $.connection.hubInterface.server.sendChoiceResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                                                            }, 4000);
                                                        });
                                                    }
                                                    return [2];
                                                });
                                            });
                                        }, 100);
                                        _a.label = 3;
                                    case 3: return [2];
                                }
                            });
                        });
                    }, 100);
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        ChoiceResponse.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                window['getChoiceResponseFromDashboard'] = function (parameters) {
                    var response = Interactions.BaseManager.objectAdapter(parameters, Interactions.Targets.Frontend);
                    $o.choiceResponses.receive(response);
                };
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        ChoiceResponse.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(ChoiceResponse = Interactions.ChoiceResponse || (Interactions.ChoiceResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var ChoiceResponse;
    (function (ChoiceResponse) {
        var VisitorSideManager = (function (_super) {
            __extends(VisitorSideManager, _super);
            function VisitorSideManager(hub, choices) {
                var _this = _super.call(this, choices) || this;
                _this.realTime = hub;
                return _this;
            }
            VisitorSideManager.prototype.save = function (data) {
                return __awaiter(this, void 0, void 0, function () {
                    var parsedData, result;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                parsedData = this.parseDataForSaving(data);
                                return [4, _super.prototype.store.call(this, parsedData)];
                            case 1:
                                result = _a.sent();
                                return [2, result];
                        }
                    });
                });
            };
            VisitorSideManager.prototype.clickResponseButton = function (choiceId, responseId) {
                var choice = this.choices.search(choiceId);
                if ($.connection.hub.state === $.signalR.connectionState.connected || $o.core.globalVariables.visitorsOverflow) {
                    if (choice) {
                        choice.response(responseId);
                        this.sendResponse(choice.id);
                    }
                }
            };
            VisitorSideManager.prototype.clickResponseList = function (choiceId) {
                this.sendResponse(choiceId);
            };
            VisitorSideManager.prototype.sendResponse = function (choiceId) {
                return __awaiter(this, void 0, void 0, function () {
                    var info, responseInfo, fullResponse, result;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                info = this.getResponseInfo(choiceId);
                                responseInfo = {
                                    choiceId: choiceId,
                                    body: info.caption,
                                    name: Core.Helpers.getMyName(),
                                    id: info.id
                                };
                                if (!responseInfo.choiceId) return [3, 2];
                                fullResponse = this.addFullProperties(responseInfo);
                                this.render(fullResponse, false);
                                return [4, this.save(fullResponse)];
                            case 1:
                                result = _a.sent();
                                responseInfo.body = info.body;
                                this.realTime.send(responseInfo);
                                _a.label = 2;
                            case 2: return [2];
                        }
                    });
                });
            };
            ;
            VisitorSideManager.prototype.getResponseInfo = function (id) {
                var searchOption = this.choices.search(id);
                if (searchOption) {
                    for (var _i = 0, _a = searchOption.options; _i < _a.length; _i++) {
                        var option = _a[_i];
                        if (option.id === searchOption.response()) {
                            return option;
                        }
                    }
                }
                return null;
            };
            VisitorSideManager.prototype.parseDataForSaving = function (data) {
                var record = {
                    recoverType: 1,
                    sentBy: Core.UserTypes.Visitor,
                    type: "ChoiceResponse",
                    fields: {
                        body: data.body,
                        choiceId: data.choiceId,
                        id: data.id,
                        name: data.name,
                        time: data.time
                    }
                };
                return [record];
            };
            return VisitorSideManager;
        }(ChoiceResponse.ChoiceResponseManagerBase));
        ChoiceResponse.VisitorSideManager = VisitorSideManager;
    })(ChoiceResponse = Interactions.ChoiceResponse || (Interactions.ChoiceResponse = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var ChoiceResponse;
    (function (ChoiceResponse) {
        var ChoiceResponseManagerFactory = (function () {
            function ChoiceResponseManagerFactory() {
            }
            ChoiceResponseManagerFactory.create = function (userData, choices) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentHub = new ChoiceResponse.AgentSideRealTimeConnector();
                    return new ChoiceResponse.AgentSideManager(agentHub, choices);
                }
                else {
                    var visitorHub = new ChoiceResponse.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new ChoiceResponse.VisitorSideManager(visitorHub, choices);
                    }
                    else {
                        return new ChoiceResponse.VisitorSideManager(visitorHub, choices);
                    }
                }
            };
            return ChoiceResponseManagerFactory;
        }());
        ChoiceResponse.ChoiceResponseManagerFactory = ChoiceResponseManagerFactory;
    })(ChoiceResponse = Interactions.ChoiceResponse || (Interactions.ChoiceResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Zoom;
    (function (Zoom) {
        var ZoomManagerBase = (function (_super) {
            __extends(ZoomManagerBase, _super);
            function ZoomManagerBase() {
                var _this = _super.call(this) || this;
                _this.level = 1;
                _this.type = "Zoom";
                _this.init();
                return _this;
            }
            ZoomManagerBase.prototype.create = function () {
                if (!$o.search.sendingProductToCanva) {
                    var data = this.createData();
                    var fullData = this.addFullProperties(data);
                    this.updateUI();
                    this.send(fullData);
                    this.save(fullData);
                }
            };
            ;
            ZoomManagerBase.prototype.updateUI = function () {
                var _this = this;
                $("#localCanvas,#remoteCanvas").hide(0);
                if (Core.Helpers.getCurrentInternalId().length) {
                    var classToAdd = "in", classToRemove = "out";
                    if (this.level === 2) {
                        classToAdd = "out";
                        classToRemove = "in";
                    }
                    this.object.removeClass("icon-common-zoom" + classToRemove + "-button").addClass("icon-common-zoom" + classToAdd + "-button");
                    $("#oct8ne-helper").find(".pin-shape, .note").hide();
                    if (this.level === 4) {
                        this.level = 1;
                        $o.canva.target.width = $o.canva.target.width / 4;
                        $o.canva.target.height = $o.canva.target.height / 4;
                    }
                    else {
                        this.level = this.level * 2;
                        $o.canva.target.width = $o.canva.target.width * 2;
                        $o.canva.target.height = $o.canva.target.height * 2;
                    }
                    ;
                    var img = $("#oct8ne-helper, #oct8ne-helper img");
                    $("#localCanvas,#remoteCanvas").hide(0);
                    var top_1 = ($o.canva.holder.height - $o.canva.target.height) / 2;
                    var left = this.getLeftPositionByDevice();
                    img.animate({
                        top: top_1,
                        left: left,
                        width: $o.canva.target.width, height: $o.canva.target.height
                    }, 400, function () {
                        _this.updatePins();
                        $o.pencil.drawing.updateCanvasDimensions();
                        $("#localCanvas,#remoteCanvas").show(0);
                    });
                }
            };
            ZoomManagerBase.prototype.save = function (data) {
                var parsedData = this.parseDataForSaving(data);
                _super.prototype.store.call(this, parsedData);
            };
            ZoomManagerBase.prototype.recover = function (data) {
            };
            ZoomManagerBase.prototype.send = function (data) {
                if ($o.core.isSignalRConnected()) {
                    this.realTime.send(data);
                }
            };
            ZoomManagerBase.prototype.init = function () {
                var _this = this;
                this.object = $("#zoom-tool");
                this.object.on("click", function () {
                    _this.create();
                });
            };
            ZoomManagerBase.prototype.getLeftPositionByDevice = function () {
                if (Core.Helpers.isDevice()) {
                    return ($("#center-helper-wrapper").width() - $o.canva.target.width) / 2;
                }
                else {
                    return ($o.canva.holder.width - $o.canva.target.width) / 2;
                }
            };
            ZoomManagerBase.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.productInternalID = Core.Helpers.getCurrentInternalId();
                newData.imageUrl = Core.Helpers.getCurrentImageUrl();
                newData.level = this.level;
                return newData;
            };
            ZoomManagerBase.prototype.parseDataForSaving = function (data) {
                var record = {
                    recoverType: 1,
                    sentBy: data.sentBy,
                    type: this.type,
                    fields: {
                        level: data.level,
                        imageUrl: data.imageUrl
                    }
                };
                var parsedData = [record];
                return parsedData;
            };
            ZoomManagerBase.prototype.createData = function () {
                var data = {
                    room: Core.Helpers.getTokenRoom(),
                    sentBy: Core.Helpers.getUserType()
                };
                return data;
            };
            ZoomManagerBase.prototype.updatePins = function () {
                var _this = this;
                $("#oct8ne-helper").find(".pin-shape").each(function () {
                    var newPos = {
                        left: parseInt($(_this).attr("data-x")) * $o.canva.target.object.width(),
                        top: parseInt($(_this).attr("data-y")) * $o.canva.target.object.height()
                    };
                    $(_this).css(newPos).show();
                });
            };
            return ZoomManagerBase;
        }(Interactions.BaseManager));
        Zoom.ZoomManagerBase = ZoomManagerBase;
    })(Zoom = Interactions.Zoom || (Interactions.Zoom = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var Zoom;
    (function (Zoom) {
        ;
        var Types;
        (function (Types) {
        })(Types = Zoom.Types || (Zoom.Types = {}));
    })(Zoom = Interactions.Zoom || (Interactions.Zoom = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Zoom;
    (function (Zoom) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                $.connection.hubInterface.client.changeZoom = function () {
                    $o.zoom.updateUI();
                };
            };
            VisitorSideRealTimeConnector.prototype.send = function (zoom) {
                if ($o.core.isSignalRConnected()) {
                    $.connection.hubInterface.server.sendZoom(Interactions.BaseManager.objectAdapter(zoom, Interactions.Targets.Backend));
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Zoom.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                window['getChangeZoomFromDashboard'] = function () {
                    $o.zoom.updateUI();
                };
            };
            AgentSideRealTimeConnector.prototype.send = function (choice) {
                window.parent.sendZoomFromDashboard(Interactions.BaseManager.objectAdapter(choice, Interactions.Targets.Backend));
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Zoom.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(Zoom = Interactions.Zoom || (Interactions.Zoom = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Zoom;
    (function (Zoom) {
        var ZoomVisitorSideManager = (function (_super) {
            __extends(ZoomVisitorSideManager, _super);
            function ZoomVisitorSideManager(hub) {
                var _this = _super.call(this) || this;
                _this.realTime = hub;
                return _this;
            }
            return ZoomVisitorSideManager;
        }(Zoom.ZoomManagerBase));
        Zoom.ZoomVisitorSideManager = ZoomVisitorSideManager;
    })(Zoom = Interactions.Zoom || (Interactions.Zoom = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var Zoom;
    (function (Zoom) {
        var ZoomManagerFactory = (function () {
            function ZoomManagerFactory() {
            }
            ZoomManagerFactory.create = function (userData) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentRealTimeHub = new Zoom.AgentSideRealTimeConnector();
                    return new Zoom.ZoomAgentSideManager(agentRealTimeHub);
                }
                else {
                    var visitorRealTimeHub = new Zoom.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new Zoom.ZoomVisitorSideManager(visitorRealTimeHub);
                    }
                    else {
                        return new Zoom.ZoomVisitorSideManager(visitorRealTimeHub);
                    }
                }
            };
            return ZoomManagerFactory;
        }());
        Zoom.ZoomManagerFactory = ZoomManagerFactory;
    })(Zoom = Interactions.Zoom || (Interactions.Zoom = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        var SideBubbleManagerBase = (function (_super) {
            __extends(SideBubbleManagerBase, _super);
            function SideBubbleManagerBase(wrapperId) {
                var _this = _super.call(this) || this;
                _this.type = "SideBubble";
                _this.typeView = "SideBubbleView";
                _this.sideBubbleSelector = $("#" + wrapperId);
                _this.collection = [];
                _this.currentBody = ko.observable(null);
                return _this;
            }
            SideBubbleManagerBase.prototype.updateUI = function (data) {
                var fullData = this.addFullProperties(data);
                this.render(fullData, false);
            };
            SideBubbleManagerBase.prototype.save = function (data) {
                var parsedData = this.parseDataForSaving(data);
                _super.prototype.store.call(this, parsedData);
            };
            SideBubbleManagerBase.prototype.recover = function (data) {
                var recovered = this.parseDataForRecovering(data);
                this.render(recovered, true);
            };
            SideBubbleManagerBase.prototype.send = function (bubble) {
                this.realTime.send(bubble);
            };
            SideBubbleManagerBase.prototype.show = function (id) {
                var currentBubble = ko.utils.arrayFirst($o.speak.messages(), function (current) {
                    return current.id == id;
                });
                this.currentBody(currentBubble.body);
                this.prepareUI();
                this.saveView(currentBubble);
            };
            SideBubbleManagerBase.prototype.hide = function () {
                this.prepareUIClose();
            };
            SideBubbleManagerBase.prototype.addInteractionProperties = function (data) {
                data.name = Core.Helpers.getMyName();
                data.id = Core.Helpers.generateId();
                return data;
            };
            SideBubbleManagerBase.prototype.saveView = function (data) {
                var record = {
                    recoverType: 4,
                    sentBy: data.sentBy,
                    type: this.typeView,
                    fields: {
                        id: data.id
                    }
                };
                var parsedData = [record];
                _super.prototype.store.call(this, parsedData);
            };
            SideBubbleManagerBase.prototype.render = function (data, recoveredMessage) {
                $o.speak.messages.push(data);
                setTimeout(function () {
                    $o.scroll.enableScroll();
                    $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { callbacks: false });
                }, 100);
                if (!recoveredMessage) {
                    $o.scroll.moveChatToBottom();
                }
            };
            ;
            SideBubbleManagerBase.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.category = SideBubble.Types.SideBubbleLink;
                newData.time = Core.Helpers.getTime();
                newData.sentBy = Core.UserTypes.Agent;
                newData.type = this.type;
                return newData;
            };
            SideBubbleManagerBase.prototype.prepareUI = function () { };
            ;
            SideBubbleManagerBase.prototype.prepareUIClose = function () {
                this.currentBody(null);
            };
            ;
            SideBubbleManagerBase.prototype.parseDataForSaving = function (data) {
                var record = {
                    recoverType: 1,
                    sentBy: data.sentBy,
                    type: data.type,
                    fields: {
                        body: data.body,
                        id: data.id,
                        link: data.link,
                        name: data.name,
                        time: data.time,
                        title: data.title,
                        type: data.type
                    }
                };
                var parsedData = [record];
                return parsedData;
            };
            SideBubbleManagerBase.prototype.parseDataForRecovering = function (data) {
                var formatted = Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Frontend);
                var recoveredSideBubble = {
                    body: formatted.fields.body,
                    id: formatted.fields.id,
                    name: formatted.fields.name,
                    sentBy: formatted.sentBy,
                    time: formatted.fields.time,
                    title: formatted.fields.title,
                    type: formatted.fields.type,
                    link: formatted.fields.link,
                    category: SideBubble.Types.SideBubbleLink
                };
                return recoveredSideBubble;
            };
            return SideBubbleManagerBase;
        }(Interactions.BaseManager));
        SideBubble.SideBubbleManagerBase = SideBubbleManagerBase;
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        ;
        ;
        var Types;
        (function (Types) {
            Types["SideBubbleLink"] = "SIDEBUBBLELINK";
        })(Types = SideBubble.Types || (SideBubble.Types = {}));
        SideBubble.sample = {
            body: "<p><img alt=\"\" src=\"https://static-or00.inbenta.com/aa9f50bf1ce7e3bc4e1fe68bcc4f140401de9a6791d9d46a1797b095db587334/Imagen%20aviso%20MKP%20.jpg\" style=\"box-sizing: border-box; border: 0px; vertical-align: middle; max-width: 100%; float: left; height: 24px; width: 25px;\">&nbsp;&nbsp;<span style=\"box-sizing: border-box; color: rgb(105, 105, 105);\"><strong style=\"box-sizing: border-box;\">Recuerda que</strong>:</span></p>\n\n<ul style=\"box-sizing: border-box; margin: 15px 0px; font-family: Roboto, Helvetica, arial, sans-serif; font-size: 14px; text-align: justify;\">\n\t<li style=\"box-sizing: border-box;\">Recibir\u00E1s tu pedido&nbsp;antes, si la&nbsp;<strong style=\"box-sizing: border-box;\">direcci\u00F3n de env\u00EDo es la misma que la de&nbsp;</strong><strong style=\"box-sizing: border-box;\">facturaci\u00F3n</strong>. En&nbsp;<strong style=\"box-sizing: border-box;\"><a href=\"https://ayuda.fnac.es/mi-cuenta/actualizar-mis-datos-y-direcciones/\" style=\"box-sizing: border-box; color: rgb(233, 172, 0); text-decoration-line: none; background: transparent; outline: none 0px;\" target=\"_blank\">Actualizar mis datos y direcciones</a></strong>, consulta o modifica tus direcciones para pr\u00F3ximos pedidos.</li>\n\t<li style=\"box-sizing: border-box;\">Todas las compras realizadas por&nbsp;personas residentes en los pa\u00EDses pertenecientes a la Uni\u00F3n Europea estar\u00E1n sujetas al IVA.&nbsp;</li>\n\t<li style=\"box-sizing: border-box;\">En los pedidos enviados a pa\u00EDses no pertenecientes a la Comunidad Econ\u00F3mica Europea, los&nbsp;derechos de aduana y aranceles est\u00E1n incluidos en los gastos de env\u00EDo.</li>\n\t<li style=\"box-sizing: border-box;\">Los vendedores externos, en&nbsp;<strong style=\"box-sizing: border-box;\">Fnac Marketplace,&nbsp;</strong>no realizan env\u00EDos fuera de Espa\u00F1a. Consulta c\u00F3mo contactar con el vendedor&nbsp;desde&nbsp;la p\u00E1gina de ayuda&nbsp;<strong style=\"box-sizing: border-box;\"><a href=\"https://ayuda.fnac.es/fnac-marketplace/contacta-con-el-vendedor/\" style=\"box-sizing: border-box; color: rgb(233, 172, 0); text-decoration-line: none; background: transparent; outline: none 0px;\" target=\"_blank\">Contacta con el&nbsp;Vendedor</a></strong>.</li>\n</ul>",
            title: "Recibirás tu pedido antes si la dirección de envío es la misma que la de facturación",
            link: "Más info"
        };
        SideBubble.sample2 = {
            body: "<h2>\n\t<u><strong>Plazos de expedici\u00F3n:</strong></u>\n</h2>\n\n<ul>\n\t<li>\n\t\t<strong><u>EN ALMAC\u00C9N FNAC:</u></strong>\n\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">En stock Fnac.es.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">&nbsp;El art\u00EDculo se encuentra en nuestro stock y nuestro compromiso de salida desde nuestro almac\u00E9n es de 24 horas.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">En stock, expedici\u00F3n en 48 horas.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>El art\u00EDculo se encuentra en nuestro stock y nuestro compromiso de salida desde nuestro almac\u00E9n es de 48 horas.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">En stock, expedici\u00F3n en 72 horas.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">&nbsp;El art\u00EDculo se encuentra en nuestro stock y nuestro compromiso de salida desde nuestro almac\u00E9n es de 72 horas.</span>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\t<li>\n\t\t<span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><u><strong>&#8203;PR\u00D3XIMOS LANZAMIENTOS</strong></u>:</span>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">&#8203;<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Art\u00EDculo en preventa</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>, expedici\u00F3n prevista para el\u2026</strong> No disponemos del art\u00EDculo en stock con anterioridad al lanzamiento. El proveedor nos comunica suministro de stock con anterioridad al lanzamiento. La expedici\u00F3n se realiza el d\u00EDa del lanzamiento. Generalmente son productos que puedes reservar en Fnac.es y no en las tiendas f\u00EDsicas.</span></span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Novedad</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;por llegar, no disponible por el momento</strong>. Se trata de una novedad que todav\u00EDa no est\u00E1 en nuestro stock, ni disponemos de su fecha de lanzamiento.</span>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\t<li>\n\t\t<u><strong><font face=\"Arial, Helvetica, sans-serif\"><span style=\"font-size: 12px;\">BAJO PEDIDO:</span></font></strong></u>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Expedici\u00F3n de 5 a 8 d\u00EDas.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>No disponemos de stock y se pide a proveedor. Nuestro compromiso de expedici\u00F3n es de 5 a 8 d\u00EDas, siempre que el proveedor lo pueda servir.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Bajo pedido, expedici\u00F3n aproximada de 8 a 10 d\u00EDas.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>No disponemos de stock y se pide a proveedor. Indicamos expedici\u00F3n aproximada de 8 a 10 d\u00EDas, siempre que el proveedor lo pueda servir en ese plazo.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Bajo pedido, expedici\u00F3n aproximada de 10 a 15 d\u00EDas.</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>No disponemos de stock y se pide a proveedor. Indicamos expedici\u00F3n aproximada de 10 a 15 d\u00EDas, siempre que el proveedor lo pueda servir en ese plazo.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Expedici\u00F3n en m\u00E1s de 30 d\u00EDas</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>No disponemos de stock y se pide a proveedor. No existe un compromiso de fecha de expedici\u00F3n, solo sabemos que ser\u00E1 en m\u00E1s de 30 d\u00EDas, siempre que el proveedor lo pueda servir.</span>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">Bajo pedido</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><strong>&nbsp;</strong>No disponemos de stock y se pide al proveedor. No existe compromiso de fecha de expedici\u00F3n, ni de entrega por parte del proveedor.</span>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n\t<li>\n\t\t<span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\"><u><strong>&#8203;&#8203;SIN STOCK</strong></u>:</span>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<strong><span style=\"box-sizing: border-box; font-weight: bolder; font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">No disponible</span></strong><span style=\"font-family: Arial, Helvetica, sans-serif; font-size: 12px;\">&nbsp;El art\u00EDculo en cuesti\u00F3n no est\u00E1 disponible para su compra. Generalmente lo puedes encontrar vendido por vendedores de nuestra MarketPlace.</span>\n\t\t\t</li>\n\t\t</ul>\n\t</li>\n</ul>",
            title: "Plazos de expedición",
            link: "Ver más información sobre el tema"
        };
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.onResponseReceived();
                }
                $.connection.hubInterface.client.receiveSideBubble = function (sideBubble) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                $o.delay.setGlobal(1000);
                                return [4, Interactions.BaseManager.sleep($o.delay.global)];
                            case 1:
                                _a.sent();
                                $o.chat.playVisitorSound();
                                $o.sideBubbles.updateUI(Interactions.BaseManager.objectAdapter(sideBubble, Interactions.Targets.Frontend));
                                $o.delay.reset();
                                return [2];
                        }
                    });
                }); };
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        SideBubble.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.send = function (sideBubble) {
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.startWaiting();
                }
                window.parent.sendSideBubble(Interactions.BaseManager.objectAdapter(sideBubble, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        SideBubble.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        var SideBubbleVisitorSideManagerDesktop = (function (_super) {
            __extends(SideBubbleVisitorSideManagerDesktop, _super);
            function SideBubbleVisitorSideManagerDesktop(hub, wrapperId) {
                var _this = _super.call(this, wrapperId) || this;
                _this.previousStatusIsChat = false;
                _this.realTime = hub;
                return _this;
            }
            SideBubbleVisitorSideManagerDesktop.prototype.prepareUI = function () {
                $("#tutorial-coviewer").hide(0);
                $o.storage.local.set($o.core.localStorageTypes.HIDENEWTUTORIAL, true);
                if ($o.iframes.currentIframeStatus !== $o.iframes.iframeStatus.VIEWER && $o.iframes.currentIframeStatus !== $o.iframes.iframeStatus.SEARCH) {
                    this.previousStatusIsChat = true;
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.VIEWER);
                }
            };
            SideBubbleVisitorSideManagerDesktop.prototype.prepareUIClose = function () {
                if (this.previousStatusIsChat) {
                    this.previousStatusIsChat = false;
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT);
                }
                _super.prototype.prepareUIClose.call(this);
            };
            return SideBubbleVisitorSideManagerDesktop;
        }(SideBubble.SideBubbleManagerBase));
        SideBubble.SideBubbleVisitorSideManagerDesktop = SideBubbleVisitorSideManagerDesktop;
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        var SideBubbleVisitorSideManagerMobile = (function (_super) {
            __extends(SideBubbleVisitorSideManagerMobile, _super);
            function SideBubbleVisitorSideManagerMobile(hub, wrapperId) {
                var _this = _super.call(this, wrapperId) || this;
                _this.realTime = hub;
                return _this;
            }
            return SideBubbleVisitorSideManagerMobile;
        }(SideBubble.SideBubbleManagerBase));
        SideBubble.SideBubbleVisitorSideManagerMobile = SideBubbleVisitorSideManagerMobile;
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var SideBubble;
    (function (SideBubble) {
        var SideBubbleManagerFactory = (function () {
            function SideBubbleManagerFactory() {
            }
            SideBubbleManagerFactory.create = function (userData, id) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentRealTimeHub = new SideBubble.AgentSideRealTimeConnector();
                    return new SideBubble.SideBubbleAgentSideManager(agentRealTimeHub, id);
                }
                else {
                    var visitorRealTimeHub = new SideBubble.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new SideBubble.SideBubbleVisitorSideManagerMobile(visitorRealTimeHub, id);
                    }
                    else {
                        return new SideBubble.SideBubbleVisitorSideManagerDesktop(visitorRealTimeHub, id);
                    }
                }
            };
            return SideBubbleManagerFactory;
        }());
        SideBubble.SideBubbleManagerFactory = SideBubbleManagerFactory;
    })(SideBubble = Interactions.SideBubble || (Interactions.SideBubble = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Validation;
    (function (Validation) {
        var ValidationManager = (function (_super) {
            __extends(ValidationManager, _super);
            function ValidationManager(hub) {
                var _this = _super.call(this) || this;
                _this.type = "Validation";
                _this.realTime = hub;
                return _this;
            }
            ValidationManager.prototype.updateUI = function (parameters) {
                var validation = new $o.speak.validation({
                    code: parameters.code,
                    lastMessage: parameters.inputResponse
                });
                $o.speak.messages.push(validation);
            };
            ValidationManager.prototype.recover = function (data) {
            };
            return ValidationManager;
        }(Interactions.BaseManager));
        Validation.ValidationManager = ValidationManager;
    })(Validation = Interactions.Validation || (Interactions.Validation = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var Validation;
    (function (Validation) {
        ;
    })(Validation = Interactions.Validation || (Interactions.Validation = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Validation;
    (function (Validation) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                $.connection.hubInterface.client.receiveInputValidation = function (validation) {
                    if ($o.bot && $o.bot.responseChecker) {
                        $o.bot.responseChecker.onResponseReceived();
                    }
                    $o.validations.updateUI(Interactions.BaseManager.objectAdapter(validation, Interactions.Targets.Frontend));
                };
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Validation.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
    })(Validation = Interactions.Validation || (Interactions.Validation = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var MessageRating;
    (function (MessageRating) {
        var MessageRatingManager = (function (_super) {
            __extends(MessageRatingManager, _super);
            function MessageRatingManager(hub) {
                var _this = _super.call(this) || this;
                _this.ratingMessage = "Valora esta respuesta";
                _this.realTime = hub;
                return _this;
            }
            MessageRatingManager.prototype.clickRatingButton = function (ratingId, allowComment, value) {
                var current = this.getCurrent(ratingId);
                this.highlightResult(current, value);
                if (allowComment) {
                    var commentForm = current.find(".rating-comment-form");
                    commentForm.attr("data-result", value.toString()).show();
                }
                else {
                    var ratingResponse = {
                        comment: "",
                        id: ratingId,
                        result: value
                    };
                    this.send(ratingResponse);
                }
            };
            MessageRatingManager.prototype.clickRatingCommentButton = function (ratingId) {
                var current = this.getCurrent(ratingId);
                var commentForm = current.find(".rating-comment-form");
                var comment = commentForm.find("textarea").val();
                commentForm.hide();
                var result = parseInt(commentForm.attr("data-result"));
                if (isNaN(result)) {
                    return false;
                }
                this.highlightResult(current, result);
                var ratingResponse = {
                    comment: comment.toString(),
                    id: ratingId,
                    result: result
                };
                this.send(ratingResponse);
            };
            MessageRatingManager.prototype.highlightResult = function (current, value) {
                if (value === 2) {
                    current.find(".bad-rate").addClass("active");
                    current.find(".good-rate").remove();
                }
                else {
                    current.find(".good-rate").addClass("active");
                    current.find(".bad-rate").remove();
                }
            };
            ;
            MessageRatingManager.prototype.showResponse = function (id) {
                var current = this.getCurrent(id);
                current.find(".rating-area,.rating-text").fadeOut(200, function () {
                    current.find(".message-rating-result").fadeIn(200, function () {
                        current.delay(3000).fadeOut(200);
                    });
                });
            };
            ;
            MessageRatingManager.prototype.getCurrent = function (id) {
                return $("[data-rating-id='" + id + "']");
            };
            MessageRatingManager.prototype.send = function (response) {
                this.realTime.send(response);
                this.showResponse(response.id);
            };
            MessageRatingManager.prototype.updateUI = function (data) {
                var fullData = this.addFullProperties(data);
                this.render(fullData);
            };
            MessageRatingManager.prototype.render = function (data) {
                if ($o.scroll.enableScroll) {
                    setTimeout(function () {
                        $o.scroll.enableScroll();
                        $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { callbacks: false });
                    }, 100);
                }
                $o.speak.messages.push(data);
            };
            ;
            MessageRatingManager.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.category = "MESSAGERATING";
                newData.message = this.ratingMessage;
                newData.time = Core.Helpers.getTime();
                newData.sentBy = Core.UserTypes.Visitor;
                return newData;
            };
            return MessageRatingManager;
        }(Interactions.BaseManager));
        MessageRating.MessageRatingManager = MessageRatingManager;
    })(MessageRating = Interactions.MessageRating || (Interactions.MessageRating = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var MessageRating;
    (function (MessageRating) {
        ;
        ;
    })(MessageRating = Interactions.MessageRating || (Interactions.MessageRating = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var MessageRating;
    (function (MessageRating) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                $.connection.hubInterface.client.receiveMessageRating = function (rating) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                $o.delay.setGlobal(700);
                                return [4, Interactions.BaseManager.sleep($o.delay.global)];
                            case 1:
                                _a.sent();
                                $o.messageRatings.updateUI(Interactions.BaseManager.objectAdapter(rating, Interactions.Targets.Frontend));
                                return [2];
                        }
                    });
                }); };
            };
            VisitorSideRealTimeConnector.prototype.send = function (response) {
                if ($o.core.isSignalRConnected()) {
                    var obj = Interactions.BaseManager.objectAdapter(response, Interactions.Targets.Backend);
                    var room = Core.Helpers.getTokenRoom();
                    $.connection.hubInterface.server.sendMessageRatingResponse(obj, room, $o.core.globalVariables.domainId);
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        MessageRating.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
    })(MessageRating = Interactions.MessageRating || (Interactions.MessageRating = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var DelayAction;
    (function (DelayAction) {
        var DelayManager = (function (_super) {
            __extends(DelayManager, _super);
            function DelayManager(hub) {
                var _this = _super.call(this) || this;
                _this.delayLocalStorage = "oct8ne-delay-action";
                _this.realTime = hub;
                return _this;
            }
            DelayManager.prototype.process = function (delay, connected) {
                return __awaiter(this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                if (!(delay.waitingAction == 1)) return [3, 2];
                                return [4, Interactions.BaseManager.sleep($o.delay.global + 500)];
                            case 1:
                                _a.sent();
                                $o.chat.showTypingDelayFromBot();
                                _a.label = 2;
                            case 2:
                                ;
                                return [4, this.start(delay.milliseconds / 1000)];
                            case 3:
                                _a.sent();
                                $o.chat.hideTyping();
                                this.finish(connected);
                                return [2];
                        }
                    });
                });
            };
            DelayManager.prototype.start = function (seconds) {
                return __awaiter(this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                $o.storage.local.set(this.delayLocalStorage, seconds);
                                return [4, Interactions.BaseManager.sleep($o.delay.global)];
                            case 1:
                                _a.sent();
                                this.storeRemainingTime(seconds);
                                return [4, Interactions.BaseManager.sleep(seconds * 1000)];
                            case 2:
                                _a.sent();
                                return [2];
                        }
                    });
                });
            };
            DelayManager.prototype.finish = function (connected) {
                return __awaiter(this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        this.deleteStorage();
                        oct8ne.delay.reset();
                        clearInterval(this.interval);
                        if (connected) {
                            this.realTime.send();
                        }
                        return [2];
                    });
                });
            };
            DelayManager.prototype.checkPending = function () {
                var pendingDelay = $o.storage.local.get("oct8ne-delay-action");
                if (pendingDelay) {
                    this.start(pendingDelay);
                }
            };
            DelayManager.prototype.storeRemainingTime = function (pending) {
                var _this = this;
                this.interval = setInterval(function () {
                    if (pending >= 1) {
                        pending = pending - 1;
                        _this.setStorage(pending);
                    }
                    else {
                        $o.storage.local.set(_this.delayLocalStorage, $o.core.localStorageActions.REMOVE);
                    }
                }, 1000);
            };
            DelayManager.prototype.setStorage = function (seconds) {
                $o.storage.local.set(this.delayLocalStorage, seconds);
            };
            DelayManager.prototype.tryRecover = function () {
                var pendingDelay = $o.storage.local.get(this.delayLocalStorage);
                if (pendingDelay) {
                    var recoveredDelay = {
                        milliseconds: parseInt(pendingDelay) * 1000,
                        waitingAction: 0
                    };
                    this.process(recoveredDelay, $o.core.isSignalRConnected());
                }
            };
            DelayManager.prototype.deleteStorage = function () {
                $o.storage.local.set(this.delayLocalStorage, $o.core.localStorageActions.REMOVE);
            };
            return DelayManager;
        }(Interactions.BaseManager));
        DelayAction.DelayManager = DelayManager;
    })(DelayAction = Interactions.DelayAction || (Interactions.DelayAction = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var DelayAction;
    (function (DelayAction) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.onResponseReceived();
                }
                $.connection.hubInterface.client.receiveDelay = function (delay) { return __awaiter(_this, void 0, void 0, function () {
                    var delayData;
                    return __generator(this, function (_a) {
                        delayData = Interactions.BaseManager.objectAdapter(delay, Interactions.Targets.Frontend);
                        delayData.milliseconds = parseInt(delayData.milliseconds);
                        $o.delayAction.process(delayData, true);
                        return [2];
                    });
                }); };
            };
            VisitorSideRealTimeConnector.prototype.send = function () {
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.startWaiting();
                }
                if ($o.core.isSignalRConnected()) {
                    var room = Core.Helpers.getTokenRoom();
                    $.connection.hubInterface.server.sendDelayCallback(room, $o.core.globalVariables.agentId);
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        DelayAction.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
    })(DelayAction = Interactions.DelayAction || (Interactions.DelayAction = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var Error;
    (function (Error) {
        var ErrorManager = (function (_super) {
            __extends(ErrorManager, _super);
            function ErrorManager(hub) {
                var _this = _super.call(this) || this;
                _this.realTime = hub;
                return _this;
            }
            ErrorManager.prototype.process = function (error) {
                $o.inactivity.stopProcess();
                $o.inactivity.disableChatInputUI();
                $.connection.hub.stop();
                $o.core.agentsConnected = false;
                var queryString = "?tokenSession=" + $o.core.globalVariables.room + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
                $o.visitorStart.changeStatus(queryString, "Finalized");
                $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.status, value: "Finalized" }]);
                $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.tokenSession, value: "" }, { cookie: $o.cookies.lastInteractionAFK, value: "" },]);
                $o.core.globalVariables.sessionFinalized = true;
                $("#chat-input, .chat-input-emoji").blur();
                var errorMessage = "Operation code: " + error.operationCode;
                if (error.errorCode !== -1) {
                    errorMessage += ", Error code: " + error.errorCode;
                }
                $("#error-bot-content-message").html(errorMessage);
                $("#error-bot-message").show();
                console.error("Error on Oct8ne bot conversation! " + errorMessage + ", Message: " + error.message);
                $("#refresh-page-error-bot, #minimize-by-menu").on("click", function () {
                    parent.postMessage("RESTARTFROMERROR", "*");
                });
            };
            return ErrorManager;
        }(Interactions.BaseManager));
        Error.ErrorManager = ErrorManager;
    })(Error = Interactions.Error || (Interactions.Error = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var Error;
    (function (Error) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                $.connection.hubInterface.client.receiveError = function (error) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        $o.botErrors.process(Interactions.BaseManager.objectAdapter(error, Interactions.Targets.Frontend));
                        return [2];
                    });
                }); };
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        Error.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
    })(Error = Interactions.Error || (Interactions.Error = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var CustomForm;
    (function (CustomForm) {
        var CustomFormManagerFactory = (function () {
            function CustomFormManagerFactory() {
            }
            CustomFormManagerFactory.create = function (userData) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentRealTimeHub = new CustomForm.AgentSideRealTimeConnector();
                    return new CustomForm.CustomFormAgentSideManager(agentRealTimeHub);
                }
                else {
                    var visitorRealTimeHub = new CustomForm.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new CustomForm.CustomFormVisitorSideManager(visitorRealTimeHub);
                    }
                    else {
                        return new CustomForm.CustomFormVisitorSideManager(visitorRealTimeHub);
                    }
                }
            };
            return CustomFormManagerFactory;
        }());
        CustomForm.CustomFormManagerFactory = CustomFormManagerFactory;
        ;
    })(CustomForm = Interactions.CustomForm || (Interactions.CustomForm = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var CustomForm;
    (function (CustomForm) {
        var CustomFormManagerBase = (function (_super) {
            __extends(CustomFormManagerBase, _super);
            function CustomFormManagerBase() {
                var _this = _super.call(this) || this;
                _this.type = "CustomForm";
                _this.collection = [];
                return _this;
            }
            CustomFormManagerBase.prototype.updateUI = function (data) {
                $o.chat.toogleDenyVisitorTyping(false);
                var fullData = this.addFullProperties(data);
                this.render(fullData, false);
            };
            CustomFormManagerBase.prototype.recover = function (data) {
                var formatted = Interactions.BaseManager.objectAdapter(data, Interactions.Targets.Frontend);
                var recovered = this.parseDataForRecovering(formatted);
                this.render(recovered, true);
            };
            CustomFormManagerBase.prototype.search = function (id) {
                for (var _i = 0, _a = this.collection; _i < _a.length; _i++) {
                    var form = _a[_i];
                    if (form.id === id) {
                        return form;
                    }
                }
                return null;
            };
            CustomFormManagerBase.prototype.render = function (data, recoveredMessage) {
                this.collection.push(data);
                $o.speak.messages.push(data);
                $o.chat.toogleDenyVisitorTyping(true);
                _super.prototype.scrollBallHack.call(this, recoveredMessage);
            };
            CustomFormManagerBase.prototype.addFullProperties = function (data) {
                var newData = data;
                newData.time = Core.Helpers.getTime();
                newData.sentBy = Core.UserTypes.Agent;
                newData.response = ko.observable();
                newData.category = Interactions.Categories.CustomForm;
                newData.formFields = this.parseFields(data.formFields);
                return newData;
            };
            CustomFormManagerBase.prototype.parseDataForRecovering = function (data) {
                var formFields = Interactions.BaseManager.objectAdapter(JSON.parse(data.fields.formFields), Interactions.Targets.Frontend);
                var recoveredForm = {
                    category: Interactions.Categories.CustomForm,
                    header: data.fields.header,
                    id: data.fields.id,
                    formFields: this.parseFields(formFields),
                    userCanCancel: data.fields.userCanCancel,
                    name: data.fields.name,
                    response: ko.observable(),
                    sentBy: data.sentBy,
                    time: data.fields.time,
                    type: data.fields.type
                };
                return recoveredForm;
            };
            CustomFormManagerBase.prototype.parseFields = function (data) {
                var parsedFields = [];
                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
                    var newField = data_1[_i];
                    if (newField.type == "checkbox") {
                        if (newField.defaultValue != "" && newField.defaultValue != "false" && newField.defaultValue != "False") {
                            newField.defaultValue = "checked";
                        }
                        else {
                            newField.defaultValue = "";
                        }
                    }
                    newField.type = newField.type;
                    newField.label = newField.label;
                    newField.value = ko.observable(newField.defaultValue);
                    newField.name = newField.variableName;
                    if (newField.type == "number") {
                        newField.minNumber = "";
                        newField.maxNumber = "";
                    }
                    if (newField.maxLength !== null || newField.minLength !== null) {
                        var minLength = 0;
                        if (newField.minLength !== null) {
                            minLength = newField.minLength;
                            if (newField.type == "number") {
                                var minNumber = "";
                                for (var i = 0; i < minLength; i++) {
                                    if (i == 0) {
                                        minNumber = minNumber + "1";
                                    }
                                    else {
                                        minNumber = minNumber + "0";
                                    }
                                }
                                newField.minNumber = parseInt(minNumber);
                            }
                        }
                        ;
                        var maxLength = "";
                        if (newField.maxLength !== null) {
                            maxLength = newField.maxLength;
                            if (newField.type == "number") {
                                var maxNumber = "";
                                for (var i = 0; i < maxLength; i++) {
                                    maxNumber = maxNumber + "9";
                                }
                                newField.maxNumber = parseInt(maxNumber);
                            }
                        }
                        ;
                    }
                    newField.maxLength = newField.maxLength ? newField.maxLength : "";
                    newField.minLength = newField.minLength ? newField.minLength : "";
                    newField.required = newField.required;
                    newField.selectOptions = newField.selectOptions;
                    newField.list = newField.list;
                    newField.validationCode = newField.validationCode;
                    parsedFields.push(newField);
                }
                return parsedFields;
            };
            return CustomFormManagerBase;
        }(Interactions.BaseManager));
        CustomForm.CustomFormManagerBase = CustomFormManagerBase;
    })(CustomForm = Interactions.CustomForm || (Interactions.CustomForm = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var CustomForm;
    (function (CustomForm) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                $.connection.hubInterface.client.receiveCustomForm = function (form, delay) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                if ($o.bot && $o.bot.responseChecker) {
                                    $o.bot.responseChecker.onResponseReceived();
                                }
                                if (delay) {
                                    $o.delay.setGlobal(delay);
                                }
                                return [4, Interactions.BaseManager.sleep($o.delay.global)];
                            case 1:
                                _a.sent();
                                $o.chat.playVisitorSound();
                                $o.customForms.updateUI(Interactions.BaseManager.objectAdapter(form, Interactions.Targets.Frontend));
                                $o.delay.reset();
                                return [2];
                        }
                    });
                }); };
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        CustomForm.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.send = function (choice) {
                window.top.sendChoice(Interactions.BaseManager.objectAdapter(choice, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        CustomForm.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(CustomForm = Interactions.CustomForm || (Interactions.CustomForm = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var CustomForm;
    (function (CustomForm) {
        var CustomFormVisitorSideManager = (function (_super) {
            __extends(CustomFormVisitorSideManager, _super);
            function CustomFormVisitorSideManager(hub) {
                var _this = _super.call(this) || this;
                _this.uploadedFromCustomForm = null;
                _this.realTime = hub;
                return _this;
            }
            CustomFormVisitorSideManager.prototype.disableAll = function () {
                for (var _i = 0, _a = $o.speak.messages(); _i < _a.length; _i++) {
                    var message = _a[_i];
                    if (message.category == "CUSTOM_FORM") {
                        message.response("endSession");
                    }
                }
            };
            CustomFormVisitorSideManager.prototype.upload = function (e) {
                var formId = e.target.closest("form").id;
                this.uploadedFromCustomForm = formId;
                $("#visitor-upload-button").trigger("click");
            };
            return CustomFormVisitorSideManager;
        }(CustomForm.CustomFormManagerBase));
        CustomForm.CustomFormVisitorSideManager = CustomFormVisitorSideManager;
    })(CustomForm = Interactions.CustomForm || (Interactions.CustomForm = {}));
})(Interactions || (Interactions = {}));

var Interactions;
(function (Interactions) {
    var CustomFormResponse;
    (function (CustomFormResponse) {
        var CustomFormResponseManagerFactory = (function () {
            function CustomFormResponseManagerFactory() {
            }
            CustomFormResponseManagerFactory.create = function (userData, customForms) {
                if (userData.type === Core.UserTypes.Agent) {
                    var agentHub = new CustomFormResponse.AgentSideRealTimeConnector();
                    return new CustomFormResponse.AgentSideManager(agentHub, customForms);
                }
                else {
                    var visitorHub = new CustomFormResponse.VisitorSideRealTimeConnector();
                    if (userData.device) {
                        return new CustomFormResponse.VisitorSideManager(visitorHub, customForms);
                    }
                    else {
                        return new CustomFormResponse.VisitorSideManager(visitorHub, customForms);
                    }
                }
            };
            return CustomFormResponseManagerFactory;
        }());
        CustomFormResponse.CustomFormResponseManagerFactory = CustomFormResponseManagerFactory;
        ;
    })(CustomFormResponse = Interactions.CustomFormResponse || (Interactions.CustomFormResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var Interactions;
(function (Interactions) {
    var CustomFormResponse;
    (function (CustomFormResponse) {
        var CustomFormResponseManagerBase = (function (_super) {
            __extends(CustomFormResponseManagerBase, _super);
            function CustomFormResponseManagerBase(customForms) {
                var _this = _super.call(this) || this;
                _this.type = "CustomFormResponse";
                _this.collection = [];
                _this.customForms = customForms;
                return _this;
            }
            CustomFormResponseManagerBase.prototype.recover = function (response) {
                var formatted = Interactions.BaseManager.objectAdapter(response, Interactions.Targets.Frontend);
                this.setCustomFormAsResponsed(formatted.fields.customFormId, formatted.fields.responses);
            };
            ;
            CustomFormResponseManagerBase.prototype.setCustomFormAsResponsed = function (customFormId, response) {
                var customForm = this.customForms.search(customFormId);
                if (customForm) {
                    customForm.response(response);
                    var parsedResponse = JSON.parse(response);
                    if (parsedResponse === null) {
                        return;
                    }
                    for (var _i = 0, _a = customForm.formFields; _i < _a.length; _i++) {
                        var field = _a[_i];
                        if (field !== null) {
                            var fieldName = field.name;
                            if (field.type == "checkbox") {
                                if (parsedResponse[fieldName] != "" && parsedResponse[fieldName] != "false") {
                                    field.value("checked");
                                }
                                else {
                                    field.value("");
                                }
                            }
                            else if (field.type == "date") {
                                var date = new Date(parsedResponse[fieldName]);
                                field.value(date.toISOString().substring(0, 10));
                            }
                            else {
                                if (parsedResponse) {
                                    field.value(parsedResponse[fieldName]);
                                }
                            }
                        }
                    }
                }
            };
            return CustomFormResponseManagerBase;
        }(Interactions.BaseManager));
        CustomFormResponse.CustomFormResponseManagerBase = CustomFormResponseManagerBase;
    })(CustomFormResponse = Interactions.CustomFormResponse || (Interactions.CustomFormResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var CustomFormResponse;
    (function (CustomFormResponse) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.send = function (responseInfo) {
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.startWaiting();
                }
                if ($o.core.isSignalRConnected()) {
                    if ($o.variablesVisitor.status != "Attending") {
                        $.connection.hubInterface.server.sendStatus({ tokenVisitor: $o.core.globalVariables.myToken, tokenSession: $o.core.globalVariables.room, status: "Waiting" }).done(function () {
                            $.connection.hubInterface.server.sendCustomFormResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                        });
                    }
                    else {
                        $.connection.hubInterface.server.sendCustomFormResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                    }
                }
                else {
                    $o.visitorStart.restartConnection(null, true);
                    var checkConnection = setInterval(function () {
                        return __awaiter(this, void 0, void 0, function () {
                            var checkStartedBotOffline;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!$o.core.globalVariables.finishedVisitorRestartConnection) return [3, 3];
                                        clearInterval(checkConnection);
                                        if (!$o.bot) return [3, 2];
                                        return [4, $o.bot.connectOverflowAsync()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        checkStartedBotOffline = setInterval(function () {
                                            return __awaiter(this, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if ($o.core.globalVariables.startedBotOffline) {
                                                        clearInterval(checkStartedBotOffline);
                                                        $.connection.hubInterface.server.sendStatus({
                                                            tokenVisitor: $o.core.globalVariables.myToken,
                                                            tokenSession: $o.core.globalVariables.room,
                                                            status: "Waiting"
                                                        }).done(function () {
                                                            setTimeout(function () {
                                                                $.connection.hubInterface.server.sendCustomFormResponse(Interactions.BaseManager.objectAdapter(responseInfo, Interactions.Targets.Backend), Core.Helpers.getTokenRoom());
                                                            }, 4000);
                                                        });
                                                    }
                                                    return [2];
                                                });
                                            });
                                        }, 100);
                                        _a.label = 3;
                                    case 3: return [2];
                                }
                            });
                        });
                    }, 100);
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        CustomFormResponse.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
        var AgentSideRealTimeConnector = (function (_super) {
            __extends(AgentSideRealTimeConnector, _super);
            function AgentSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            AgentSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                window['getCustomFormResponseFromDashboard'] = function (parameters) {
                    var response = Interactions.BaseManager.objectAdapter(parameters, Interactions.Targets.Frontend);
                    $o.CustomFormResponses.receive(response);
                };
            };
            return AgentSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        CustomFormResponse.AgentSideRealTimeConnector = AgentSideRealTimeConnector;
    })(CustomFormResponse = Interactions.CustomFormResponse || (Interactions.CustomFormResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var CustomFormResponse;
    (function (CustomFormResponse) {
        var VisitorSideManager = (function (_super) {
            __extends(VisitorSideManager, _super);
            function VisitorSideManager(hub, CustomForms) {
                var _this = _super.call(this, CustomForms) || this;
                _this.realTime = hub;
                return _this;
            }
            VisitorSideManager.prototype.save = function (data) {
                return __awaiter(this, void 0, void 0, function () {
                    var parsedData, result;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                parsedData = this.parseDataForSaving(data);
                                return [4, _super.prototype.store.call(this, parsedData)];
                            case 1:
                                result = _a.sent();
                                return [2, result];
                        }
                    });
                });
            };
            VisitorSideManager.prototype.clickResponseButton = function (event) {
                var formId = event.target.id;
                var formData = new FormData((document.getElementById(formId)));
                var checkbox = $("#" + formId + " input[type=checkbox]");
                checkbox.each(function (i) {
                    var cb = $(checkbox[i]);
                    formData.append(cb.attr('name'), cb.is(':checked') ? "true" : "false");
                });
                var dates = $("#" + formId + " input[type=date]");
                dates.each(function (x) {
                    var dt = $(dates[x]);
                    var value = dt.prop("value");
                    var date = new Date(value);
                    formData.set(dt.attr('name'), date.toISOString());
                });
                var object = {};
                formData.forEach(function (value, key) {
                    object[key] = value;
                });
                this.setResponsedAndSend(formId, object);
            };
            VisitorSideManager.prototype.skipResponse = function (event) {
                var formId = event.target.getAttribute("data-form-id");
                this.setResponsedAndSend(formId, null);
            };
            VisitorSideManager.prototype.setResponsedAndSend = function (formId, formData) {
                var customForm = this.customForms.search(formId);
                if (customForm) {
                    customForm.response(JSON.stringify(formData));
                    this.sendResponse(customForm);
                }
            };
            VisitorSideManager.prototype.sendResponse = function (customForm) {
                return __awaiter(this, void 0, void 0, function () {
                    var responseInfo, fullResponseInfo, result;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                responseInfo = {
                                    id: customForm.id,
                                    data: customForm.response()
                                };
                                fullResponseInfo = {
                                    id: customForm.id,
                                    data: customForm.response(),
                                    name: Core.Helpers.getMyName(),
                                    category: Interactions.Categories.CustomFormResponse,
                                    sentBy: Core.UserTypes.Agent,
                                    time: Core.Helpers.getTime()
                                };
                                return [4, this.save(fullResponseInfo)];
                            case 1:
                                result = _a.sent();
                                if (result === false) {
                                    throw ("Error saving custom form response");
                                }
                                ;
                                this.realTime.send(responseInfo);
                                return [2];
                        }
                    });
                });
            };
            ;
            VisitorSideManager.prototype.parseDataForSaving = function (data) {
                var record = {
                    recoverType: 1,
                    sentBy: Core.UserTypes.Visitor,
                    type: "CustomFormResponse",
                    fields: {
                        customFormId: data.id,
                        name: data.name,
                        time: data.time,
                        responses: data.data
                    }
                };
                return [record];
            };
            return VisitorSideManager;
        }(CustomFormResponse.CustomFormResponseManagerBase));
        CustomFormResponse.VisitorSideManager = VisitorSideManager;
    })(CustomFormResponse = Interactions.CustomFormResponse || (Interactions.CustomFormResponse = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var ProductSearchFromBot;
    (function (ProductSearchFromBot) {
        var ProductSearchManager = (function (_super) {
            __extends(ProductSearchManager, _super);
            function ProductSearchManager(hub) {
                var _this_1 = _super.call(this) || this;
                _this_1.delay = 0;
                _this_1.searchParams = null;
                _this_1.realTime = hub;
                return _this_1;
            }
            ProductSearchManager.prototype.process = function (search, delay) {
                this.delay = delay;
                this.searchParams = search;
                if (search === undefined)
                    throw 'search cannot be undefined';
                if (!search['source'] == undefined)
                    throw 'search.source cannot be empty';
                if (!search['searchType'] == undefined)
                    throw 'search.searchType cannot be empty';
                if (!search['query'] == undefined)
                    throw 'search.query cannot be empty';
                if (!search['maxProducts'])
                    throw 'search.maxProducts cannot be empty';
                if (search.source == Source.Oct8neCatalog) {
                    this.processInternalCatalogSearch(search);
                }
                else if (search.source == Source.ShopCatalog) {
                    this.processShopCatalogSearch(search);
                }
            };
            ProductSearchManager.prototype.processShopCatalogSearch = function (search) {
                var searchBaseUrl = "" + $o.platform.domain + $o.platform.prefixUrlPlatform;
                var searchUrl = "";
                if (search.searchType == SearchType.Id) {
                    searchUrl = "productinfo?productIds=" + JSON.parse(search.query).join();
                    $o.platform.manageRequests("" + searchBaseUrl + searchUrl, "BOT_SHOP_PRODUCT_ID", "processShopProductId");
                }
                else if (search.searchType == SearchType.Keyword) {
                    searchUrl = "search?search=" + search.query + "&page=1&pageSize=" + search.maxProducts + "&orderby=relevance&dir=desc";
                    $o.platform.manageRequests("" + searchBaseUrl + searchUrl, "BOT_SHOP_SEARCH", "processShopSearchResults");
                }
            };
            ProductSearchManager.prototype.processShopSearchResultsAsync = function (productSummaries) {
                return __awaiter(this, void 0, void 0, function () {
                    var hasResults, prods, ids, _i, prods_1, summary, search;
                    return __generator(this, function (_a) {
                        if (!productSummaries['results'])
                            throw 'productSummaries.results cannot be undefined';
                        hasResults = this.checkResultsCount(productSummaries.results.length);
                        if (!hasResults) {
                            this.setResultsResponseAsync(null);
                            return [2];
                        }
                        prods = productSummaries.results;
                        if (prods.length > this.searchParams.maxProducts) {
                            prods = prods.slice(0, this.searchParams.maxProducts);
                        }
                        ids = [];
                        for (_i = 0, prods_1 = prods; _i < prods_1.length; _i++) {
                            summary = prods_1[_i];
                            ids.push(summary.internalId);
                        }
                        search = {
                            maxProducts: this.searchParams.maxProducts,
                            query: JSON.stringify(ids),
                            searchType: SearchType.Id,
                            source: Source.ShopCatalog
                        };
                        this.processShopCatalogSearch(search);
                        return [2];
                    });
                });
            };
            ProductSearchManager.prototype.processShopProductIdAsync = function (products) {
                return __awaiter(this, void 0, void 0, function () {
                    var hasResults, parsedNodes;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                if (!products)
                                    throw 'products cannot be empty';
                                hasResults = this.checkResultsCount(products.length);
                                if (!hasResults) {
                                    this.setResultsResponseAsync(null);
                                    return [2];
                                }
                                return [4, Interactions.BaseManager.sleep(this.delay)];
                            case 1:
                                _a.sent();
                                $o.chat.playVisitorSound();
                                if (products.hasOwnProperty("results")) {
                                    products = products.results;
                                }
                                if ($o.utils && $o.utils.parseFullInfoFromCustomPlatform) {
                                    $o.utils.parseFullInfoFromCustomPlatform(products, $o.platform.productInfoRecover, $o.platform.productInfoChangeToImage, $o.platform.productInfoAddToList);
                                }
                                else {
                                    parsedNodes = $o.platform.parseFullInfoFromPlatform(products);
                                    if (parsedNodes) {
                                        this.showSearchResults(parsedNodes);
                                    }
                                }
                                this.delay = 0;
                                $o.delay.reset();
                                return [2];
                        }
                    });
                });
            };
            ProductSearchManager.prototype.processInternalCatalogSearch = function (search) {
                var defaultCategory = null;
                if ($o.utils && $o.utils.getStartDefaultCatalog) {
                    defaultCategory = $o.utils.getStartDefaultCatalog();
                }
                if (search.searchType == SearchType.Reference) {
                    search.query = "#" + search.query;
                }
                var _this = this;
                $.ajax({
                    type: "POST",
                    url: $o.settings.catalogServer + "Resources/ListFilteredCatalogsFullInfo",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify({ "Categories": defaultCategory, "SearchTerm": search.query, "License": $o.settings.license, "Size": search.maxProducts }),
                    dataType: "json",
                    success: function (products) {
                        var hasResults = _this.checkResultsCount(products.length);
                        if (!hasResults) {
                            _this.setResultsResponseAsync(null);
                            return;
                        }
                        for (var _i = 0, products_1 = products; _i < products_1.length; _i++) {
                            var product = products_1[_i];
                            product.URLMedia = product.Thumbnail;
                        }
                        _this.showSearchResults(products);
                    }
                });
            };
            ProductSearchManager.prototype.processInternalCatalogResultsAsync = function (products) {
                return __awaiter(this, void 0, void 0, function () {
                    var parsedNodes;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4, Interactions.BaseManager.sleep(this.delay)];
                            case 1:
                                _a.sent();
                                $o.chat.playVisitorSound();
                                if (products.hasOwnProperty("results")) {
                                    products = products.results;
                                }
                                if ($o.utils && $o.utils.parseFullInfoFromCustomPlatform) {
                                    $o.utils.parseFullInfoFromCustomPlatform(products, $o.platform.productInfoRecover, $o.platform.productInfoChangeToImage, $o.platform.productInfoAddToList);
                                }
                                else {
                                    parsedNodes = $o.platform.parseFullInfoFromPlatform(products);
                                    if (parsedNodes) {
                                        this.showSearchResults(parsedNodes);
                                    }
                                }
                                this.delay = 0;
                                $o.delay.reset();
                                return [2];
                        }
                    });
                });
            };
            ProductSearchManager.prototype.showSearchResults = function (parsedNodes) {
                var _this_1 = this;
                if (!Array.isArray(parsedNodes))
                    throw 'parsedNodes must be an array';
                var productsLength = parsedNodes.length;
                if (this.searchParams.searchType == SearchType.Keyword && (productsLength > this.searchParams.maxProducts)) {
                    parsedNodes = parsedNodes.slice(0, this.searchParams.maxProducts);
                }
                this.setResultsResponseAsync(parsedNodes);
                var firstProductId;
                parsedNodes.forEach(function (value, index) {
                    if (_this_1.searchParams.searchType != SearchType.Keyword || (_this_1.searchParams.searchType == SearchType.Keyword && index < _this_1.searchParams.maxProducts)) {
                        var parsedNode = value;
                        $o.carousel.sendProductToAnalytics("A");
                        parsedNode.SentBy = "A";
                        $o.search.productFromSearch = true;
                        $o.canva.imageFromAgent = true;
                        if (parsedNodes.length > 1) {
                            if (index == 0) {
                                $o.productsChat.sentManyProductsByAgent(parsedNode);
                            }
                        }
                        else {
                            $o.productsChat.sentProductByAgent(parsedNode);
                        }
                        $(".show-coviewer").addClass("blinking");
                        if (parsedNode.BuyURL && $o.platform) {
                            $o.platform.productBuyURL = parsedNode.BuyURL;
                        }
                        if (parsedNode.InternalId.indexOf("Oct8neCatalog") >= 0 && parsedNode.ProductUrl) {
                            parsedNode.RouteTo = parsedNode.ProductUrl;
                        }
                        if ($o.platform && $o.platform.productInfoAddToList) {
                            $o.carousel.addProductInfoToList(parsedNode, $o.carousel.lists.VIEWED);
                        }
                        $o.fullProducts.addProductToCollection(parsedNode);
                        $o.carousel.sendProductToCarousel(parsedNode, $o.carousel.lists.VIEWED, "", "recover");
                        if (index == 0) {
                            firstProductId = parsedNode.InternalId;
                        }
                    }
                });
                setTimeout(function () {
                    $o.carousel.sentProductToCanva(firstProductId, false, null);
                }, 500);
                $o.carousel.loadingProduct();
                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
            };
            ProductSearchManager.prototype.checkResultsCount = function (resultsCount) {
                return resultsCount > 0;
            };
            ProductSearchManager.prototype.setResultsResponseAsync = function (results) {
                return __awaiter(this, void 0, void 0, function () {
                    var resultsSummaryData, _i, results_1, result, fields;
                    var _this_1 = this;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                resultsSummaryData = [];
                                if (results !== null) {
                                    for (_i = 0, results_1 = results; _i < results_1.length; _i++) {
                                        result = results_1[_i];
                                        resultsSummaryData.push({
                                            InternalId: result.InternalId,
                                            Thumbnail: result.Thumbnail,
                                            Title: result.Title
                                        });
                                    }
                                    ;
                                }
                                fields = {
                                    Source: this.searchParams.source,
                                    Query: this.searchParams.query,
                                    MaxProducts: this.searchParams.maxProducts,
                                    SearchType: this.searchParams.searchType,
                                    Results: resultsSummaryData.length,
                                    ResultsData: JSON.stringify(resultsSummaryData)
                                };
                                return [4, $o.saveRecord.botProductSearch(fields)];
                            case 1:
                                _a.sent();
                                setTimeout(function () {
                                    if ($o.core.agentsConnected) {
                                        _this_1.realTime.send(resultsSummaryData.length);
                                    }
                                }, 1500);
                                return [2];
                        }
                    });
                });
            };
            return ProductSearchManager;
        }(Interactions.BaseManager));
        ProductSearchFromBot.ProductSearchManager = ProductSearchManager;
        var Source;
        (function (Source) {
            Source[Source["Oct8neCatalog"] = 1] = "Oct8neCatalog";
            Source[Source["ShopCatalog"] = 2] = "ShopCatalog";
        })(Source || (Source = {}));
        var SearchType;
        (function (SearchType) {
            SearchType[SearchType["Keyword"] = 1] = "Keyword";
            SearchType[SearchType["Id"] = 2] = "Id";
            SearchType[SearchType["Reference"] = 3] = "Reference";
        })(SearchType || (SearchType = {}));
    })(ProductSearchFromBot = Interactions.ProductSearchFromBot || (Interactions.ProductSearchFromBot = {}));
})(Interactions || (Interactions = {}));

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Interactions;
(function (Interactions) {
    var ProductSearchFromBot;
    (function (ProductSearchFromBot) {
        var VisitorSideRealTimeConnector = (function (_super) {
            __extends(VisitorSideRealTimeConnector, _super);
            function VisitorSideRealTimeConnector() {
                return _super.call(this) || this;
            }
            VisitorSideRealTimeConnector.prototype.subscribeToRealTimeEvents = function () {
                var _this = this;
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.onResponseReceived();
                }
                $.connection.hubInterface.client.receiveProductSearchFromBot = function (search, delay) { return __awaiter(_this, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        if (delay) {
                            $o.delay.setGlobal(delay);
                        }
                        $o.botProductSearch.process(Interactions.BaseManager.objectAdapter(search, Interactions.Targets.Frontend), $o.delay.global);
                        return [2];
                    });
                }); };
            };
            VisitorSideRealTimeConnector.prototype.send = function (resultsCount) {
                if ($o.bot && $o.bot.responseChecker) {
                    $o.bot.responseChecker.startWaiting();
                }
                if ($o.core.isSignalRConnected()) {
                    if ($o.variablesVisitor.status != "Attending") {
                        $.connection.hubInterface.server.sendStatus({ tokenVisitor: $o.core.globalVariables.myToken, tokenSession: $o.core.globalVariables.room, status: "Waiting" }).done(function () {
                            $.connection.hubInterface.server.sendProductSearchResultsCallback(resultsCount, Core.Helpers.getTokenRoom());
                        });
                    }
                    else {
                        $.connection.hubInterface.server.sendProductSearchResultsCallback(resultsCount, Core.Helpers.getTokenRoom());
                    }
                }
                else {
                    $o.visitorStart.restartConnection(null, true);
                    var checkConnection = setInterval(function () {
                        return __awaiter(this, void 0, void 0, function () {
                            var checkStartedBotOffline;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0:
                                        if (!$o.core.globalVariables.finishedVisitorRestartConnection) return [3, 3];
                                        clearInterval(checkConnection);
                                        if (!$o.bot) return [3, 2];
                                        return [4, $o.bot.connectOverflowAsync()];
                                    case 1:
                                        _a.sent();
                                        _a.label = 2;
                                    case 2:
                                        checkStartedBotOffline = setInterval(function () {
                                            return __awaiter(this, void 0, void 0, function () {
                                                return __generator(this, function (_a) {
                                                    if ($o.core.globalVariables.startedBotOffline) {
                                                        clearInterval(checkStartedBotOffline);
                                                        $.connection.hubInterface.server.sendStatus({
                                                            tokenVisitor: $o.core.globalVariables.myToken,
                                                            tokenSession: $o.core.globalVariables.room,
                                                            status: "Waiting"
                                                        }).done(function () {
                                                            setTimeout(function () {
                                                                $.connection.hubInterface.server.sendProductSearchResultsCallback(resultsCount, Core.Helpers.getTokenRoom());
                                                            }, 4000);
                                                        });
                                                    }
                                                    return [2];
                                                });
                                            });
                                        }, 100);
                                        _a.label = 3;
                                    case 3: return [2];
                                }
                            });
                        });
                    }, 100);
                }
            };
            return VisitorSideRealTimeConnector;
        }(Interactions.RealTimeConnector));
        ProductSearchFromBot.VisitorSideRealTimeConnector = VisitorSideRealTimeConnector;
    })(ProductSearchFromBot = Interactions.ProductSearchFromBot || (Interactions.ProductSearchFromBot = {}));
})(Interactions || (Interactions = {}));;
//EVENTOS 
$o.canva.events = function () {
    $o.canva.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.canva.UI = function () {
    $o.canva.showAlertAddToCartInAgentUI = function (title, action) {
        // $o.log("Por aqui!");
        // $("#add-to-mycart p").text(title);
        $("#add-to-mycart").delay(500).fadeIn(100).delay(3500).fadeOut(400);

        //if (action == $o.platform.iframeMagentoStatus.OPEN) {
        //    $("#info-actions-visitor").find("span").html(culture.coviewer.StartedAddToCart + "   <b> " + title + "</b><br /><a href=''>" + culture.coviewer.ViewPage + "</a>");
        //    $("#info-actions-visitor").stop().delay(300).animate({ right: 45 });
        //}
        //else if (action == $o.platform.iframeMagentoStatus.CLOSED) {
        //    $("#info-actions-visitor").effect("shake", { times: 3 }, 150, function () {
        //        $(this).find("span").fadeOut(200, function () {
        //            $(this).html(culture.coviewer.CancelledAddToCart+" <b> " + title + "</b>").fadeIn(200, function () {
        //                $(this).parent().delay(3000).animate({ right: -250 });
        //            });
        //        });
        //    });
        //} else if (action == $o.platform.iframeMagentoStatus.ADDED) {
        //    $("#info-actions-visitor").find("span").fadeOut(200, function () {
        //        $(this).html("<b>" + title + "</b>" + culture.coviewer.AddedToCart).fadeIn(200);
        //        $("#info-actions-visitor").prepend("<div class='cart-check'></div>");
        //        $("#info-actions-visitor,.cart-check").delay(1000).animate({ width: "+=32", right:"30" }, 500, function () {
        //            $("#info-actions-visitor").delay(3000).animate({ right: -250 }, function () {
        //                $(".cart-check").remove();
        //                $("#info-actions-visitor").css({ width: 205 });
        //            });
        //        });
        //    });
        //    $("#my-shopping-items").effect("pulsate", { times: 4 }, 200, function () {
        //        window.contentVM.setNodesFilter("Cart");
        //    });
        //}
    };

    $o.canva.showAlertAddToMyListInAgentUI = function (title, whoAdd) {
        $("#add-to-mylist").delay(500).fadeIn(100).delay(1500).fadeOut(400);
        //$("#info-actions-visitor").find("span").html(whoAdd + culture.coviewer.AddedToMylist + "<b>" + title + "</b>");
        //$("#info-actions-visitor").stop().delay(300).animate({ right: 45 }).delay(2000).animate({ right: -250 }, function () {
        //    $("#my-list-items").show("pulsate", { times: 4 }, 200, function () {
        //        window.contentVM.setNodesFilter("Mylist");
        //    });
        //});
    };

    $o.canva.updateUI = function (parameters, recover) {
        if ($o.core.globalVariables.userType == "A") $o.tools.undoActions = 0;
        if (parameters.Type == "V") {
            $("#video-wrapper").show();          
            var loadVideo = function () { $o.core.youtubeViewModel.load(parameters.URLMedia); };
            if ($o.core.youtubeViewModel.loaded) {
                loadVideo()
            } else {
                $o.core.youtubeViewModel.setup(function () { loadVideo() });
            }
            $o.search.sendingProductToCanva = false; 
            $o.canva.holder.helper.children("div").remove();
        } else {
            $("#video-wrapper").hide();
            $o.tools.change($o.tools.type.POINT);
            $o.zoom.level = 1;
            $("#zoom-tool").removeClass("icon-common-zoomout-button").addClass("icon-common-zoomin-button");
            $o.canva.target.object.hide();
            $o.canva.holder.helper.children("div").remove();
            $o.core.globalVariables.urlMedia = parameters.URLMedia;

            var preload = (new Image()),
                path = parameters.URLMedia;


            preload.onerror = function () {
                var thumb = viewedVM.getProduct(parameters.InternalId);
                parameters.URLMedia = thumb.Thumbnail;
                if (recover == "onError") {
                    $("#loading-product").fadeOut(100);
                    if ($o.core.globalVariables.userType == "V") $o.visitorSearch.enableSelectResult = true;
                }
                else $o.canva.updateUI(parameters, "onError");
            };

            preload.onload = function () {
                var canvaImage = this,
                    ratio = canvaImage.width / canvaImage.height,
                    height = 0, width = 0, left = 0, top = 0;

                $o.canva.holder.width = $o.canva.holder.object.width();
                $o.canva.holder.height = $o.canva.holder.object.height();
                $o.canva.target.object.css({ height: "", width: "" });
                if (canvaImage.width > $o.core.maxImageSize) {
                    //console.warn("Imagen demasiado grande - Image too big");
                    path = "/api/img/core/no-thumb-resources.png";
                };

                $o.canva.target.object.attr({ src: path });

                if ($o.canva.holder.width == 0) $o.canva.holder.width = 529;
                if ($o.canva.holder.height == 0) $o.canva.holder.height = 310;

                if (ratio < 1) {
                    //img vertical
                    height = $o.canva.holder.height;
                    width = height * ratio;
                } else {
                    //img horizontal
                    width = $o.canva.holder.width;
                    height = width / ratio;

                    if (height > $o.canva.holder.height) {
                        height = $o.canva.holder.height;
                        width = height * ratio;
                    }
                }
                left = ($o.canva.holder.width - width) / 2;
                top = ($o.canva.holder.height - height) / 2;

                $o.carousel.hideLoadingImage();
                $("#oct8ne-helper,#item-title-up").show();


                $o.canva.showImageOnCanva(left, top, width, height, parameters.InternalId);

                if ($o.canva.imageFromAgent) {
                    $("#agent-suggestions-items").show("pulsate", { times: 4 }, 200, function () {
                        window.viewedVM.setActiveTab();
                    });

                    $o.canva.imageFromAgent = false;
                }

                $o.search.sendingProductToCanva = false;
            };

            preload.src = path;

            if ($o.core.youtubeViewModel.isPlaying()) $o.core.youtubeViewModel.clear();

        }
    };

    $o.canva.showImageOnCanvaUI = function (left, top, width, height, internalId) {

        $o.canva.target.object.css({
            height: height + "px",
            width: width + "px"
        });
        $o.canva.holder.helper.css({
            height: height + "px",
            width: width + "px",
            top: top + "px",
            left: left + "px"
        });
        $o.canva.target.width = width;
        $o.canva.target.height = height;
        $o.canva.target.object.show();

        var visitorToken = (($o.core.globalVariables.userType == "V") && ($o.core.agentsConnected)) ? $o.core.globalVariables.myToken : $o.core.globalVariables.otherToken;

        $o.pin.recoverPins(visitorToken, internalId, $o.carousel.currentImage);
        if ($o.core.globalVariables.userType == "V") $o.visitorSearch.enableSelectResult = true;

        if (!$o.pencil.drawing) $o.pencil.init();

        $o.pencil.changeCanvaImage(internalId);

    };

    $o.canva.validatePosition = function (x, y, tool) {
        var validation = [];
        var img = $o.canva.holder.helper;
        var holder = $o.canva.holder.object;
        var bottom = -(img.height() - holder.height());
        var right = -(img.width() - holder.width());

        validation["left"] = x;
        validation["top"] = y;
        if (x < right) validation["left"] = right;
        if (y < bottom) validation["top"] = bottom;
        if (x > 0) validation["left"] = 0;
        if (y > 0) validation["top"] = 0;
        if (!tool) {
            if (img.width() <= holder.width()) {
                validation["left"] = parseInt(right / 2);
            }
            if (img.height() <= holder.height()) {
                validation["top"] = parseInt(bottom / 2);
            }

            if ((validation["top"] != null) || (validation["left"] != null)) {
                img.animate({ top: validation["top"], left: validation["left"] }, 200);
            }
        }
        return validation;
    };




};;
//EVENTOS  
$o.carousel.events = function () {

    $("#oct8ne-nodes").on("click", "li a", function () {
        var nodeId = $(this).attr("data-nodeid");
        if (nodeId != $o.core.globalVariables.internalId && !$o.search.sendingProductToCanva) {
            $o.search.sendingProductToCanva = true;
            $o.carousel.sentProductToCanva(nodeId);
        } else {
            $o.sideBubbles.hide();
        }
    });

    $("#prev-image").on("click", function () {
        if (!$o.search.sendingProductToCanva) {
            $o.search.sendingProductToCanva = true;
            $o.carousel.clickPrevImage();

        }
    });
    $("#next-image").on("click", function () {
        if (!$o.search.sendingProductToCanva) {
            $o.search.sendingProductToCanva = true;
            $o.carousel.clickNextImage();
        }
    });

    $("#items-order-list").on("click", "li", function () {
        if ($(this).hasClass("current")) {
            return;
        };


        if (!$o.search.sendingProductToCanva) {
            $o.carousel.goImageN($(this).index() + 1);
            $("#items-order-list li").removeClass().addClass("custom-coviewer-image-dots CVBkg5");
            $(this).removeClass().addClass("current custom-coviewer-image-dots CVBkg4");
            $o.search.sendingProductToCanva = true;
        }
    });

    $(".coviewer-wrapper").on("click", "#item-title-up", function () {
        if ($o.core.globalVariables.userType == "V") {
            $o.saveRecord.titleB(); //ojo con la redireccion! SETIMEOUT?
            var productId = $o.fullProducts.searchProduct($o.core.globalVariables.internalId);
            if (productId.InternalId.indexOf("Oct8ne") == -1 && productId.RouteTo != null && productId.RouteTo != "") {
                $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT);//normmaly we go to 'chat' status
                if ($o.utils && $o.utils.rewriteIframeStatusInTitleBtn) { //some clients wants 'viewer' status
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.VIEWER);
                }
                parent.postMessage("GOTOPRODUCTPAGE," + productId.RouteTo, "*");
            }
        } else {
            return false;
        };
    });

    $("#oct8ne-content").on("click", "#mylist-advice", function () {
        $o.platform.loginShowMyList();
        $o.saveRecord.loginB();
    });

    $o.carousel.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.carousel.UI = function () {
    $o.carousel.createCoviewerPriceLayout = function (data) {
        var normalData = data.normalPrice;
        var normalLayout = "<div id='normal-price'><div style='" + normalData.line1.inlineStyle + "'>" + normalData.line1.textTemplate + "</div>";
        if (normalData.line2.textTemplate != "") {
            normalLayout += "<div   style='" + normalData.line2.inlineStyle + "'>" + normalData.line2.textTemplate + "</div>";

        } normalLayout += "</div>";
        normalLayout = normalLayout.replace("[0]", "<span>[0]</span>");

        var saleData = data.salePrice;
        var saleLayout = "<div id='sale-price'>";
        if (saleData.saleIcon) {
            saleLayout += '<div class="offer-icon custom-coviewer-sale-icon"><div class="sale-text custom-coviewer-sale-text BkgCorp"><span>' + culture.coviewer.Sale + '</span></div><div class="BorderUpCorp"></div></div>';
        }
        saleLayout += "<div style='" + saleData.line1.inlineStyle + "'>" + saleData.line1.textTemplate + "</div>";
        if (saleData.line2.textTemplate != "") {
            saleLayout += "<div style='" + saleData.line2.inlineStyle + "'>" + saleData.line2.textTemplate + "</div>";
        };
        saleLayout = saleLayout.replace("[0]", "<span class='price-old'>[0]</span>");
        saleLayout = saleLayout.replace("[1]", "<span class='price-new'>[1]</span>");
        saleLayout += "</div>";
        $("#price-wrapper").html(normalLayout + saleLayout);
    };

    $o.carousel.updateArrowsCarousel = function (newIndex) {
        newIndex < $o.carousel.images.length ? $("#next-image").show() : $("#next-image").hide();
        newIndex > 1 ? $("#prev-image").show() : $("#prev-image").hide();
        if ($o.carousel.carouselInterface == $o.carousel.carouselInterfaces.BULLETS) {
            $("#items-order-list li").removeClass().addClass("CVBkg5 custom-coviewer-image-dots");
            $("#items-order-list li:nth-child(" + newIndex + ")").removeClass().addClass("current CVBkg4 custom-coviewer-image-dots");
        } else {
            $(".current-img").html(newIndex);
        }
    };

    $o.carousel.setCurrentNodeActiveUI = function (nodeId, noUpdateScroll) {
        if ($("#oct8ne-nodes li").length) {
            $("#oct8ne-nodes li").removeClass("active  BorderCorp");
            var node = $("#oct8ne-nodes li a[data-nodeid=" + nodeId + "]");
            if (!node.length) { return; }

            node.parent().parent().addClass("active BorderCorp").focus();
            setTimeout(function () {
                $("#oct8ne-nodes").mCustomScrollbar("scrollTo", node.parent());
            }, 300);
        }
    };

    $o.carousel.fillCanvaInfo = function (node, imageIndex) {
        //$("#show-coviewer").show();

        //DESCRIPTION ZONE

        if ($o.search.openSeeDescription) {
            $("#info-icon-button ").trigger("click");
            $o.search.openSeeDescription = false;
        }
        if (node.Description == "" || node.Description == undefined || node.Description == null) {
            $(".info-icon-button").hide();
        } else {
            $(".info-icon-button").show();
        }

        var descString = node.Description;
        var descDiv = document.getElementById("item-description");
        descDiv.innerHTML = descString;
        descDiv.innerHTML = descDiv.textContent;
        $("#item-description img , #item-description iframe ,#item-description a").remove();
        //END DESCRIPTION ZONE

        //MY LIST ZONE
        var isNodeAddedMyList = mylistVM.getProduct(node.InternalId);
        if (isNodeAddedMyList) {
            $("#add-to-mylist-tool-visitor").removeClass("icon-common-wishlist-icon custom-coviewer-icon-mylist CVTxt3").addClass("icon-common-like-button-high  custom-coviewer-icon-mylist-highlighted TxtCorp");
        } else {
            $("#add-to-mylist-tool-visitor").removeClass("icon-like-button-high custom-coviewer-icon-mylist-highlighted TxtCorp").addClass("icon-common-wishlist-icon custom-coviewer-icon-mylist CVTxt3");
        };

        // END MY LIST ZONE


        // GENERAL VARS 

        var imageOrder = imageIndex ? imageIndex : 0;
        $o.core.globalVariables.internalId = node.InternalId;
        $o.carousel.currentImage = 1;
        $o.carousel.images = {};
        $o.carousel.images = node.InternalId.indexOf("Oct8neUpload") == -1 ? node.Medias : "";

        //MANAGEMENT ARROWS
        $("#prev-image").hide();
        node.InternalId.indexOf("Oct8neUpload") == -1 ? (node.Medias.length == 1 ? $("#next-image").hide() : $("#next-image").show()) : $("#next-image").hide();


        //MANAGEMNT BULLETS
        $o.carousel.carouselInterface = node.Medias.length > 6 ? $o.carousel.carouselInterfaces.NUMBERS : $o.carousel.carouselInterfaces.BULLETS;

        if ($o.carousel.carouselInterface == $o.carousel.carouselInterfaces.BULLETS) {
            $o.carousel.createImageBullets(node.Medias);
        } else {
            node.InternalId.indexOf("Oct8neUpload") == -1 ? $(".total-img").html($o.carousel.images.length) : $(".items-order-list").hide();
            $o.carousel.createImageNumbers();
        };


        //TITULO PRODUCTO 
        var html = "<span class='main-title' title='" + node.Title + "'>" + node.Title + "</span>";
        $("#node-name, #item-title-up, #item-title").html(node.Title);
        if (node.InternalId.indexOf("Oct8neUpload") == -1 && node.InternalId.indexOf("Oct8neCatalog") == -1) {
            if ($o.core.globalVariables.userType == "V") {
                html = html + "<p class='button-view-in-page BkgCorp'><span class='icon-common-view-in-page'></span><span >" + culture.coviewer.ViewInPage + "</span></p>";
            }
            $("#item-title-up").addClass("view-in-page");
        } else {
            $("#item-title-up").removeClass("view-in-page");
        }
        $("#item-title-up").html(html);
        if (node.Title.length > 30) {
            $(".main-title").addClass("item-title-mini");
        } else {
            $(".main-title").removeClass("item-title-mini");
        }
        //END TITULO PRODUCTO

        //PRICE ZONE

        $(".view-grouped-product").remove();
        if (node.Price == "0.00" || node.Price == null) {
            if (node.InternalId.indexOf("Oct8neCatalog") >= 0) {
                $("#price-wrapper").hide();
                $("#price-wrapper-catalog").show().find("span").html(node.Price);
            } else {

                $("#price-wrapper,#price-wrapper-catalog").hide();
                if (node.InternalId.indexOf("Oct8ne") == -1) {
                    if ($o.core.globalVariables.userType == "A") {
                        $(".coviewer-tools").append('<div class="view-grouped-product" title="View product details">' + culture.coviewer.PricingDetails + '</div>');
                    }
                }
            }
        } else {
            if (node.InternalId.indexOf("Oct8neCatalog") >= 0) {
                $("#price-wrapper").hide();
                $("#price-wrapper-catalog").show().find("span").html(node.Price);
            } else {

                $("#price-wrapper>div").hide();
                if (node.PrevPrice != node.Price) { //ES PRECIO "SALE"
                    if ($o.core.globalVariables.apiVersion == "2.1") {
                        $("#sale-price").find("span.price-old").html($o.core.globalVariables.currencyVisitor + node.PrevPrice);
                        $("#sale-price").find("span.price-new").html($o.core.globalVariables.currencyVisitor + node.Price);
                    } else {
                        $("#sale-price").find("span.price-old").html(node.PrevPrice);
                        $("#sale-price").find("span.price-new").html(node.Price);
                    }
                    $("#sale-price,#sale-price div").show();
                } else { //ES PRECIO NORMAL
                    if ($o.core.globalVariables.apiVersion == "2.1") {
                        $("#normal-price span").html($o.core.globalVariables.currencyVisitor + node.Price);
                    } else {
                        $("#normal-price span").html(node.Price);
                    }

                    $("#normal-price").show();
                }

                $("#item-price-up").removeClass("grouped-price").html($o.core.globalVariables.currency + node.Price); //FALTA LA CURRENCY

                $("#price-wrapper-catalog").hide();

                if (node.InternalId.indexOf("Oct8neUpload") >= 0) { //Si es un Upload no mostra el icono de sale ni preu
                    $("#price-wrapper").hide();
                } else {
                    $("#price-wrapper,#product-page-tool").show();
                    $("#price-wrapper-catalog").hide();
                }
            }
        }

        //END PRICE ZONE

        if ($o.platform && $o.core.adapterLoaded === $o.core.adapters.PRO && $o.core.globalVariables.enterType != $o.core.enterType.CHECKOUT) $o.platform.showCartAndList(node.InternalId);


        //CATALOG BUTTON MANAGEMENT

        if (node.InternalId.indexOf("Oct8neCatalog") >= 0) {
            if ($o.platform && $o.platform.hideTotallyCartAndMyListButtons) $o.platform.hideTotallyCartAndMyListButtons();
            if (node.RouteTo) {
                $("#view-catalog-page").show().find("a").attr("href", node.RouteTo);
            } else {
                $("#view-catalog-page").hide();
            }
        } else {
            if ($o.core.globalVariables.edition == $o.core.editions.LITE && node.RouteTo && $o.platform && $o.core.globalVariables.userType == "V") {
                $("#view-catalog-page").show().find("a").attr("href", node.RouteTo);
            }
            else {
                $("#view-catalog-page").hide();
            }
        }
        //END CATALOG BUTTON MANAGEMENT

        if (node.InternalId.indexOf("Oct8neUpload") == -1) {
            $o.carousel.sendToCanva($o.carousel.images[imageOrder].FileName, $o.carousel.images[imageOrder].Id, $o.carousel.images[imageOrder].Type, "no-save");
        } else {
            $("#view-catalog-page").hide();
            if ($o.platform && $o.platform.hideTotallyCartAndMyListButtons) $o.platform.hideTotallyCartAndMyListButtons();
            $o.carousel.sendToCanva(node.URLMedia, node.URLMedia, "I", "no-save");
        }
        $o.search.sendingProductToCanva = false;
    };


    $o.carousel.loadingProduct = function () {
        $("#oct8ne-helper,#item-title-up,#product-page-tool").hide();
        $("#loading-product").fadeIn(100);
    };

    $o.carousel.loadingImage = function () {
        $("#loading-product").fadeIn(100);
    };

    $o.carousel.hideLoadingImage = function () {
        $("#loading-product").hide(0);
    };

    $o.carousel.createImageBullets = function (medias) {
        $("#items-number-list").hide();
        $("#items-order-list").empty();
        $.each(medias, function (i) {
            var li = i == 0 ? "<li class='current custom-coviewer-image-dots CVBkg4'></li>" : "<li class='CVBkg5 custom-coviewer-image-dots '></li>";
            $("#items-order-list").append(li);
        });
        var dotsLength = medias.length * 28;
        if (dotsLength > 180) dotsLength = 180;

        $("#items-order-list").css({ "margin": "12px auto", "width": dotsLength + "px" }).show();
    };

    $o.carousel.createImageNumbers = function () {
        $("#items-order-list").hide();
        $("#items-number-list").show();
        $(".current-img").html($o.carousel.currentImage);
        $(".total-img").html($o.carousel.images.length);
    };

    $o.carousel.addMediaFromUploadUI = function () {
        if ($o.core.userType == "A") {
            $("#upload-loading").remove();
        }
        else {
            if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT) $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
            if (window.location.pathname.indexOf("V3") > -1) {
                $(".upload-visitor-tool").addClass("icon-common-clip-upload").removeClass("loading-image");
            } else {
                $(".upload-visitor-tool").addClass("icon-common-upload-button").removeClass("loading-image");
            }
        }
        $(".info-icon-button").hide();
    };

    $o.carousel.addDocFromUploadUI = function () { //SUBIDA DE PDF
        if ($o.core.userType == "A") {
            $("#upload-loading").remove();
        }
        else {

            if (window.location.pathname.indexOf("V3") > -1) {
                $(".upload-visitor-tool").addClass("icon-common-clip-upload").removeClass("loading-image");
            } else {
                $(".upload-visitor-tool").addClass("icon-common-upload-button").removeClass("loading-image");
            }
        }
        $(".info-icon-button").hide();
    };
};


;
//EVENTOS 
$o.chat.events = function () {

    $(".chat-send").on("click", function () { //SOLO BOTON EN AGENTE
        if ($o.core.globalVariables.isGone) {
            return;
        }
        var text = $("#chat-input").val();
        var chatLength = $("#chat-input").val().trim().length;
        if (chatLength > 0) {
            $o.chat.pressEnterOnSearchInput(text);
        }
        $("#chat-input").val("");
        $(".emoji-wysiwyg-editor").text("");
        if ($("#go-to-bottom").is(":visible")) {
            $("#oct8ne-chat-room").mCustomScrollbar("update");
        }
        return false;
        //  $o.chat.clickSendButton();
    });

    $("#chat-input").on("keyup", function (event) { //Ojo no tocar keyup.Debe ser así para contar correctamente el chatLength
        if ($o.core.globalVariables.isGone) {
            return;
        }
        var text = $("#chat-input").val();
        var chatLength = $("#chat-input").val().trim().length;
        if (event.keyCode == 13) {
            event.preventDefault();
            if (chatLength > 0) {
                $o.chat.pressEnterOnSearchInput(text);
            }
            $("#chat-input").val("");
            if ($("#go-to-bottom").is(":visible")) {
                $("#oct8ne-chat-room").mCustomScrollbar("update");
            }
            return false;
        } else {
            $o.chat.displayIsTyping(text, chatLength, event.keyCode);
        }
    });

    $("#chat-tool-box").on("keyup", ".emoji-wysiwyg-editor", function (event) { //EVENTO SOLO PARA NUEVO VISOR INPUT PARA EMOJIS
        if ($o.core.globalVariables.isGone) {
            return;
        }
        var text = $(".emoji-wysiwyg-editor").text();
        var chatLength = $(".emoji-wysiwyg-editor").text().trim().length;

        if ($o.core.globalVariables.userType === "A" && text.indexOf("#") === 0) { //CONTROL DE FILTRO COMMON PRHASES PARA AGENTE
            $o.agentTools.managementPhrasesFromChat(event, text, chatLength);
        }
        else {
            if (event.keyCode === 13) {
                event.preventDefault();
                if (chatLength > 0) {
                    $o.chat.pressEnterOnSearchInput(text);
                }
                $(".emoji-wysiwyg-editor").text("");
                if ($("#go-to-bottom").is(":visible")) {
                    $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom");
                }
                return false;
            } else {
                $o.chat.displayIsTyping(text, chatLength, event.keyCode);
            }
        }
    });


    $("#chat-tool-box").on("paste", ".emoji-wysiwyg-editor", function (e) {
        if ($o.core.globalVariables.isGone) {
            return;
        }
        if ($o.settings.allowUploads && $o.settings.showCoviewer == "True" && !window.clipboardData) {
            //window.clipboardData-> En IE11 No podemos copiar imágenes         

            var image = e.originalEvent.clipboardData.items;
            if (image.length === 0) {               
                return;
            }
            var blob = image[0].getAsFile();
            $o.chat.isMyPastedImageFile = blob;
            if (blob !== null) {
                var reader = new FileReader();
                reader.onload = function (event) {
                    $o.chat.imagePreviewPasted(event.target.result); // data url en formato baseUrl!
                    $o.chat.myPastedImageIn64 = event.target.result;
                };
                reader.readAsDataURL(blob);
            }
        }
    });


    $("#refresh-page-button , #refresh-page-afk").on("click", function () {
        $o.chat.refreshWindow();
    });

    $("#go-to-bottom").on("click", function () {
        $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom");
    });

    $("#close-preview-pasted").on("click", function () {
        // console.log("CIERRA");
        $o.chat.closePastedPreview();
    });

     $(".oct8ne-chat-room").on("click", "a.target-parent", function (e) {
        e.preventDefault();
        parent.postMessage("GOTOPRODUCTPAGE," + $(this).attr("href"), "*");        
    });

    $("#send-pasted-image").on("click", function () {

        $(this).removeClass("icon-common-send");
        $(this).addClass("loading");


        var formDataToUpload = new FormData();
        formDataToUpload.append('token', $o.core.globalVariables.myToken);
        formDataToUpload.append('room', $o.core.globalVariables.room);
        formDataToUpload.append('files', $o.chat.isMyPastedImageFile);
        formDataToUpload.append('type', 'Coviwer');

        var callMethod = "SaveVisitorImage";
        if ($o.core.globalVariables.userType === "A") {
            callMethod = "SaveAgentImage";
        };


        $.ajax({
            type: "POST",
            url: $o.core.globalVariables.uploadUrl + "Files/" + callMethod,
            data: formDataToUpload,
            async: true,
            processData: false,
            contentType: false,
            success: function (result) {
                //  console.log(result);
                var imageToTreat = result.split(";");
                imageToTreat = imageToTreat[0];
                imageToTreat = imageToTreat.slice(19, -1); //RARO!
                //  console.log(imageToTreat);

                if (typeof imageToTreat === 'string') {
                    var data = imageToTreat.split(",");
                    if (data[2] == "UPLOAD") {
                        var fileUrl = data[0];
                        var isImage = $o.forms.imageValidator(fileUrl);

                        if (isImage) { //Image goes to coviewer
                            var random = Math.floor((Math.random() * 1000000) + 1);
                            var internalId = "Oct8neUpload-" + random;
                            var product = $o.carousel.getProductFromUpload(internalId, fileUrl, $o.core.globalVariables.userType);
                            $o.carousel.addMediaFromUploadUI();
                            $o.carousel.sendProductToCarousel(product, $o.carousel.lists.VIEWED, $o.carousel.actions.VIEWINCANVA);
                        }
                    }
                }
                $o.chat.closePastedPreview();
            }
        });

    });


    $o.chat.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.chat.UI = function () {
    $o.chat.showJustLookingMessage = function () {
        $("#just-looking-option").show();
        $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGOPTION, true);
    };

    $o.chat.hideJustLookingMessage = function () {
        $("#welcome-just-looking").parent().remove();
        $("#just-looking-option").hide();
        $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGOPTION, false);
        $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGBUTTON, $o.core.localStorageActions.REMOVE);
    };

    $o.chat.addAlertChat = function () { };

    $o.chat.typing = function (parameters) {

        if (parameters.Body.Original === "false") {
            $(".is-typing-layer").hide();
        } else if (parameters.Body.Original === "true") {
            $(".is-typing-layer").find('p').text("···").css({ 'font-size': '', 'padding': '' });
            $(".is-typing-layer").show();
            clearTimeout($o.chat.typingTimer);
            $o.chat.typingTimer = setTimeout(function () {
                $(".is-typing-layer").hide();
            }, $o.chat.stopTypingInterval);
        } else {
            $(".is-typing-layer").find('p').text(parameters.Body.Original + '...').css({ 'font-size': '9px', 'padding': '5px 10px', 'font-style': 'italic' });
            $(".is-typing-layer").show();
            clearTimeout($o.chat.typingTimer);
            $o.chat.typingTimer = setTimeout(function () {
                $(".is-typing-layer").hide();
            }, $o.chat.stopTypingInterval);
        }
    };
    
    $o.chat.hideTyping = function () {    
        $(".is-typing-layer").hide();
    };

    $o.chat.showTypingDelayFromBot = function () {      
        $(".is-typing-layer").find('p').text("···").css({ 'font-size': '', 'padding': '' });
        $(".is-typing-layer").show();
    };

    //Function cuando MINIMIZED
    $o.chat.addAlertProduct = function (parameters) {
        if ($o.iframes.currentIframeStatus !== $o.iframes.iframeStatus.SEARCH && $o.iframes.currentIframeStatus !== $o.iframes.iframeStatus.VIEWER) {
            if ($o.iframes.currentIframeStatus === $o.iframes.iframeStatus.MINIMIZED) {
                $o.chat.sendAlert(culture.coviewer.TakeALook + "<br/><b>" + parameters.Title + "</b>");
            }
            var product = parseInt($o.variablesVisitor.pendingProducts);
            $o.chat.alertProduct = product ? product + 1 : 1;
            $("#pending-products").text($o.chat.alertProduct).show();
            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.pendingProducts, value: $o.chat.alertProduct }]);
        }
    };

    $o.chat.playVisitorSound = function () {

        if ($o.variablesVisitor.soundNotificationEnabled == 'True') {
            var controlSound = $o.storage.local.get($o.core.localStorageTypes.SOUND) ? $o.storage.local.get($o.core.localStorageTypes.SOUND) : "true";
            if (controlSound == "true") {

                var playPromise = $("#visitor-sound")[0].play();
                if (playPromise) {
                    playPromise.catch(
                        // function () { $("#visitor-sound")[0].play(); }
                    );
                }

            }
        };
    };

    $o.chat.showRatingsAreaInForm = function () {
        $(".rating-area-form").show();
    };

    $o.chat.closePastedPreview = function () {
        $("#preview-pasted").hide();
        $("#pasted-image").css("background", "none");
        $("#send-pasted-image").addClass("icon-common-send");
        $("#send-pasted-image").removeClass("loading");
    };

    $o.chat.dataURItoBlob = function (data) {
        var binStr = atob(data).split(',')[1],
            len = binStr.length,
            arr = new Uint8Array(len);

        for (var i = 0; i < len; i++) {
            arr[i] = binStr.charCodeAt(i);
        }
        return new Blob(arr);
    };

    $o.chat.toogleDenyVisitorTyping = function (status) {
        if ($o.core.globalVariables.userType === "V") {
            $o.chat.canVisitorType = !status;
            if (status === true) {                
                $(".emoji-wysiwyg-editor").html("").hide(0);
               // $("#chat-input").val("").show().css({ "cursor": "not-allowed", "opacity": "1", "background": "#fbfbfb" }).attr("readonly", "readonly");
                $(".emoji-picker-icon").hide();
            } else {
                $(".emoji-wysiwyg-editor").show(0).attr("readonly", "false");
               // $("#chat-input").hide();
                $(".emoji-picker-icon").show();       
            }
        }
    };
};
;
//EVENTOS 
$o.drag.events = function () {
    $o.drag.object = $("#point-tool");
    $o.drag.object.click(function () {
        $o.tools.change($o.tools.type.POINT);
    });

    $o.canva.holder.helper.draggable()
        .on("dragstart", function (event, ui) {
            $o.canva.holder.helper.removeClass().addClass("dragging");
            $o.drag.enablePointing = false;
            startX = ui.position.left;
            startY = ui.position.top;
        })
        .on("dragstop", function (event, ui) {
            if ($o.zoom.level == 1) {
                $o.canva.holder.helper.animate({ top: startY, left: startX }, 200);
            }
            else {
                var dragPosition = $o.canva.validatePosition(ui.position.left, ui.position.top);
                $o.canva.holder.helper.removeClass();

                var drag = {
                    Coords: {
                        PosX: dragPosition['left'],
                        PosY: dragPosition['top']
                    },
                    SizeImage: {
                        Width: $o.canva.holder.helper.width(),
                        Height: $o.canva.holder.helper.height()
                    },
                    SizeCoviewer: {
                        Width: $("#oct8ne-holder").width(),
                        Height: $("#oct8ne-holder").height()
                    },
                    Room: $o.core.globalVariables.room,
                    SentBy: $o.core.userType,
                    ProductInternalID: $o.core.globalVariables.internalId,
                    ImageUrl: $o.core.globalVariables.urlMedia,
                    Type: "D",
                    ZoomLevel: $o.zoom.level
                };

                if ($o.core.isSignalRConnected()) { $o.hubsOut.sendDrag(drag); }
                if ($o.tools.context == $o.tools.type.POINT) {
                    $o.canva.holder.helper.removeClass().addClass("pointing");
                } if ($o.tools.context == $o.tools.type.PIN) {
                    $o.canva.holder.helper.removeClass().addClass("adding-pin");
                }
            }


        });
    $o.drag.UI();
    var startX, startY, stop;
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.drag.UI = function () {
    $o.drag.addPointUI = function (parameters, recover) {
        var pointPosition = {
            left: parameters.Coords.PosX * $o.canva.target.object.width(),
            top: parameters.Coords.PosY * $o.canva.target.object.height() + 15
        };
        var createPoint = function () {
            var colorClass = (parameters.SentBy == "A") ? "agent-point" : "visitor-point";
            $o.canva.holder.helper.append("<div data-x=" + parameters.Coords.PosX + " data-y=" + parameters.Coords.PosY + " style=\"left:" + pointPosition.left + "px; top:" + pointPosition.top + "px \" class='point " + colorClass + "' id='point" + parameters.MarkId + "'></div>");
            var currentPin = $("#point" + parameters.MarkId);
            currentPin
                .css({ width: '0', height: '0' })
                .show()
                .animate({ width: '50px', height: '50px', left: "-=25px", top: "-=25px" }, { duration: 350, queue: true })
                .animate({ width: '0', height: '0', left: "+=25px", top: "+=25px" }, { duration: 350, queue: true })
                .queue(function () {
                    $(this).dequeue();
                    $(this).remove();
                });
        };

        if ((parameters.SentBy != $o.core.globalVariables.userType)) {
            var otherCursorPosition = {
                left: pointPosition.left + parseInt($o.canva.holder.helper.position().left),
                top: pointPosition.top + parseInt($o.canva.holder.helper.position().top)
            };
            $(".other-cursor")
                .css({ opacity: 1 })
                .stop().animate({ top: otherCursorPosition.top, left: otherCursorPosition.left }, 1200, "easeOutExpo", function () {
                    createPoint();
                    var newPos = $o.tools.randomCursorPosition();
                    $(".other-cursor").delay(1000).animate({ top: newPos.top, left: newPos.left }, 1200, "easeOutQuad");
                });
        } else {
            createPoint(parameters, recover);
        }
    };
};;
//EVENTOS 
$o.filters.events = function () {

    $(".filter-panel-wrapper").on("click", ".filter-title", function () { //PASAR A KO!
        $(this).next().slideToggle();
        $(this).find("span").toggleClass("plus-sign");
    });



//    //FILTER VISITOR
//    $("#filter-button").on("click", function () {
//        if (!$o.search.isSearching) {
//            if ($(this).hasClass("opened")) {
//                $(this).removeClass("opened CVBkg5").addClass("CVBkg2");
//            } else {
//                $(this).removeClass("CVBkg2").addClass("opened CVBkg5");
//            };
//            $("#sort-button").removeClass("opened CVBkg5").addClass("CVBkg2");
//            $("#filters-panel").css("overflow", "hidden");
//            $("#filters-panel").slideToggle(300, function () { $("#filters-panel").css("overflow", "auto"); });
//            $("#sort-results-panel").hide();
//        }
//    });

   
    //$(".filter-panel-wrapper").on("click", ".filter-options li", function () { //PASAR A KO!
       
    //    if ($(this).prev().attr("checked") !== "checked") {
    //        $(this).prev().attr("checked", true);
    //    } else {
    //        $(this).prev().attr("checked", false);
    //    }
    // });

    //$(".filter-panel-wrapper").on("change", ".filter-options input", function () { //PASAR A KO!
    //    $(this).next().trigger("click");
    //});

    

//    $("#filters-panel").on("click", "li", function () { //Escoge el filtro y realiza la búsqueda.
        
//        $o.search.resetSearch();
//        var filterValue = $(this).attr("data-param");
//        var filterParam = $(this).parent().parent().attr("data-param");

//        var filter = $o.filters.appliedFilters + "&" + encodeURIComponent(filterParam) + "=" + encodeURIComponent(filterValue);
//        $o.search.doSearch($o.search.searchTerm, filter, false, "true");
//        $("#filters-panel").slideToggle();
//        $o.filters.appliedFilters = filter;
//        var filterNum = $o.filters.appliedFilters.split("&").length - 1;
//        $("#filter-button").removeClass("opened CVBkg5").addClass("CVBkg2");
//        $("#filter-button p").disableSelection().text(filterNum).show();
//    });

    //    $("#filters-panel").on("click", "#filters-applied div p", function () { //Borra el filtro selecionado y realiza la búsqueda con los filtros activos
//        var param = $(this).parent().attr("data-param");
//        $(this).parent().remove();
//        var filterArray = $o.filters.appliedFilters.split("&");
//        for (var i = 0; i < filterArray.length; i++) {
//            if (!filterArray[i].search(param)) {
//                var index = filterArray.indexOf(filterArray[i]);
//                filterArray.splice(index, 1);
//            }
//        }
//        var filterNum = filterArray.length - 1;
//        if (filterNum == 0) {
//            $("#filter-button p").text("").hide();
//            $("#filter-button").removeClass("opened CVBkg5").addClass("CVBkg2");
//        } else {
//            $("#filter-button p").disableSelection().text(filterNum).show();
//        }
//        var filterNew = filterArray.join("&");
//        $o.search.resetSearch();
//        $o.search.doSearch($o.search.searchTerm, filterNew, false, "true");
//        $("#filters-panel").slideToggle();
//        $o.filters.appliedFilters = filterNew;
//    });

//    //FILTER AGENT SEARCH
//    $(".header-content").on("click", "#filter-button-agent" , function () {
//      //  $("#filters-panel-agent").css("overflow", "hidden");
//       // $("#filters-panel-agent").slideToggle(300, function () { $("#filters-panel-agent").css("overflow", "auto"); });
//        if ($("#filters-panel-agent").is(":visible")) {
//            $("#filters-panel-agent").hide();
//        } else {
//            $("#filters-panel-agent").show();
//        }
//        $("#sort-results-panel-agent").hide();      
//    });

//    $("#filters-panel-agent").on("click", "p", function () {
//        $(this).next().slideToggle();
//    });

//    $("#filters-panel-agent").on("click", "li", function () {
//        $o.search.resetSearch();
//        var filterValue = $(this).attr("data-param");
//        var filterParam = $(this).parent().parent().attr("data-param");
//        var filter = $o.filters.appliedFiltersAgentSearch + "&" + filterParam + "=" + filterValue;
//        $o.search.doSearch($o.search.searchTerm, filter);
//        $("#filters-panel-agent").slideToggle();
//        $o.filters.appliedFiltersAgentSearch = filter;
//    });



//    $("#filters-panel-agent").on("click", "#filters-applied-agent div p", function () { //Borra el filtro selecionado y realiza la búsqueda con los filtros activos
//        var param = $(this).parent().attr("data-param");
//        $(this).parent().remove();
//        var filterArray = $o.filters.appliedFiltersAgentSearch.split("&");
//        for (var i = 0; i < filterArray.length; i++) {
//            if (!filterArray[i].search(param)) {
//                var index = filterArray.indexOf(filterArray[i]);
//                filterArray.splice(index, 1);
//            }
//        }
//        var filterNew = filterArray.join("&");
//        $o.search.resetSearch();
//        $o.search.doSearch($o.search.searchTerm, filterNew);
//        $("#filters-panel-agent").slideToggle();
//        $o.filters.appliedFiltersAgentSearch = filterNew;
//    });

//    //FILTER AGENT VISITOR LAST-SEARCH

//    //$(".header-content").on("click", "#current-visitor-searches" ,function () {
//    //    $(this).css("color", "#545454");
//    //    $("#previous-visitor-searches").css("color", "#ffffff"); //OJO SETTINGS
//    //    if ($(".empty-search-visitor").is(":visible")) return;
//    //    lastSearchVM.setActive();
//    //    if (".overview:empty") $(".no-visitor-results-search").show();
//    //});

//    //$(".header-content").on("click","#previous-visitor-searches" ,function () {
//    //    $(this).css("color", "#545454");
//    //    $("#current-visitor-searches").css("color", "#ffffff");  //OJO SETTINGS
//    //    if ($(".empty-search-visitor").is(":visible")) return;
//    //    previousSearchVM.setActive();
//    //    if (".overview:empty") $(".no-visitor-results-search").show();
//    //});



    //SORT SECTION
    $(".sort-choice").click(function () {
        $(this).next().toggle(0);
    });


    $(".sort-filter li").click(function () {

        if ($("#search-term").val().length) {
            var trigger = $(this),
                dir = trigger.children().removeClass("CVTxt3").attr("class"),// == "asc" ? "desc" : "asc",
                sortBy = trigger.attr("id").replace("sort-by-", "");
            var splitOrderBy = trigger.text().split(" ");
            $(".sorted-by").text(splitOrderBy[splitOrderBy.length - 1].toLowerCase());
            $(".sorted-dir").text(dir);
            $("#sort-button").removeClass("opened");
            var dirNew = dir == "asc" ? "desc" : "asc";
            trigger.children().removeClass().addClass(dirNew + " CVTxt3");
            //trigger.siblings().children().removeClass();
            $o.search.resetSearch();
            $o.search.sortedBy = sortBy;
            $o.search.direction = dir;
            $o.search.doSearch($o.search.searchTerm, $o.filters.appliedFilters, false, "true");
            $("#sort-results-panel").hide();
            $("#sort-results-panel-agent").hide();
            sortBy = sortBy.substr(0, 6);
            $(".sort-choice a").text("Sorted by " + sortBy.charAt(0).toUpperCase() + sortBy.slice(1));
        }
    });

    //SORT DE VISITOR (DEPRECATED SOLO En VIEJO VISOR??)
    $("#sort-button").on("click", function () {
        if (!$o.search.isSearching) {
            if ($(this).hasClass("opened")) {
                $(this).removeClass("opened CVBkg5").addClass("CVBkg2");
            } else {
                $(this).removeClass("CVBkg2").addClass("opened CVBkg5");
            };
            $("#filter-button").removeClass("opened CVBkg5").addClass("CVBkg2");
            $("#sort-results-panel").css("overflow", "hidden");
            $("#sort-results-panel").slideToggle(300, function () { $("#sort-results-panel").css("overflow", "auto"); });
            $("#filters-panel").hide();
        }
    });

    //SORT DE AGENTE
        $(".header-content").on("click", "#sort-button-agent" , function () {
      //  $("#sort-results-panel-agent").css("overflow", "hidden");
      //  $("#sort-results-panel-agent").slideToggle(300, function () { $("#sort-results-panel-agent").css("overflow", "auto"); });
        if ($("#sort-results-panel-agent").is(":visible")) {
            $("#sort-results-panel-agent").hide();
        } else {
            $("#sort-results-panel-agent").show();
        }
        $("#filters-panel-agent").hide();
    });

//    $o.filters.UI();
//};

////FUNCIONES QUE MODIFICAN EL DOM 
//$o.filters.UI = function () {

//    $o.filters.createFiltersVisitor = function (data) {
//        //$o.log(data);
//        $("#filters-panel").empty();
//        var availableFilters = data.available;
//        var appliedFilters = data.applied;
//        if (appliedFilters.length > 0) {
//            $("#filters-panel").append("<div id='filters-applied' class='filters-applied'></div>");

//            $.each(appliedFilters, function (i) {  //Pinta los filtros aplicados
//                var appliedFilter = appliedFilters[i];
//                var filterWrapper = "<div data-paramLabel='" + appliedFilter.paramLabel + "' data-param='" + appliedFilter.param + "'>";
//                filterWrapper += "<span class='CHBkg2 CVTxt4' >" + appliedFilter.paramLabel + "</span><p class='CVBkg1' data-value='" + appliedFilter.value + "'>" + appliedFilter.valueLabel + "</p>";
//                $("#filters-applied").append(filterWrapper);
//            });
//        };
//        return availableFilters;
//    };

//  $o.filters.createFiltersAgentWithIdVisitor = function (data) {
//        var appliedFilters = data.applied;
//        var availableFilters = data.available;
//        if (appliedFilters.length > 0) {
//            var filterNames = " (";
//            $.each(appliedFilters, function (i) {  //Pinta los filtros aplicados
//                var appliedFilter = appliedFilters[i];
//                filterNames = filterNames + appliedFilter.valueLabel;
//                if (i != appliedFilters.length - 1) {
//                    filterNames += ", ";
//                } else { filterNames += ")"; }
//            });

//            window.contentVM.filtersApplied(filterNames);
//        }
//        return availableFilters;
//    };

//    $o.filters.createFiltersAgent = function (data) {
//        $("#filters-panel-agent").empty();
//        var availableFilters = data.available;
//        var appliedFilters = data.applied;
//        if (appliedFilters.length > 0) {
//            $("#filters-panel-agent").append("<div id='filters-applied-agent' class='filters-applied-agent'></div>");
//            $.each(appliedFilters, function (i) {  //Pinta los filtros aplicados
//                var appliedFilter = appliedFilters[i];
//                var filterWrapper = "<div data-paramLabel='" + appliedFilter.paramLabel + "' data-param='" + appliedFilter.param + "'>";
//                filterWrapper += "<span>" + appliedFilter.paramLabel + "</span><p data-value=" + appliedFilter.value + ">" + appliedFilter.valueLabel + "</p>";
//                $("#filters-applied-agent").append(filterWrapper);
//            });
//        }
//        return availableFilters;
//    };

    //$o.filters.printFilters = function (data, idCapa, availableFilters) {
    //    $.each(availableFilters, function (i) { //Pinta los filtros disponibles
    //        var filter = availableFilters[i];
    //        var filterWrapper = "<div data-paramLabel='" + filter.paramLabel + "' data-param='" + filter.param + "'>";
    //        filterWrapper += "<p  class='CVBkg2 CVTxt4'>" + filter.paramLabel + "</p>";
    //        filterWrapper += "<ul>";
    //        $.each(filter.options, function (x) {
    //            filterWrapper += '<li class="CVBkg5 CVTxt3" data-param="' + filter.options[x].value + '">' + filter.options[x].valueLabel + ' (' + filter.options[x].count + ')</li>';
    //        });
    //        filterWrapper += "</ul>";
    //        filterWrapper = filterWrapper.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    //        if ($o.core.userType == "V") {
    //            $("#filters-panel").append(filterWrapper);
    //        }
          
    //        if ($o.core.userType != "A" || idCapa != "filters-panel-visitor-searches") { //JEIEM OJOOOO
    //            $("#filters-panel-agent").append(filterWrapper);
    //        }
    //    });
    //};

};;
//EVENTOS 
$o.forms.events = function () {
    /*VOICE FORMS DESDE AGENT TOOLS*/
    $("#agent-number").css("opacity", "0.5").attr("readonly", "readonly");

    $("input[name='call-invite']").change();

    $("#call-back-invitation").click(function () {
        $("#agent-number").css("opacity", "0.5").attr("readonly", "readonly");
    });

    $("#contact-invitation").click(function () {
        $("#agent-number").css("opacity", "1").removeAttr("readonly");
    });

    $("#invitation-send").click(function () { //FORMULARIO RADIO BUTTON EN VOZ ---  DEPRECATED ??
        if ($("#call-back-invitation").is(":checked")) {
            $o.forms.sendForm($o.forms.type.CALLBACK);
        };
        if ($("#contact-invitation").is(":checked")) {
            if ($("#agent-number").val() == 0) {
                alert(culture.coviewer.NumberBeforeSend);
            } else {
                var phoneNum = $("#agent-number").val();
                $o.forms.sendForm($o.forms.type.SENDCONTACT, phoneNum);
            }
        };
        $("#voice-tool-box").hide();
        $("#chat-tool-box").show();
        $("#chat-tool").addClass("active");
        $("#voice-tool").removeClass("active");
    });

    /*SKYPE DESDE AGENT TOOLS*/
    $("#skype-invitation").click(function () {
        var user = $o.core.globalVariables.mySkype;
        var link = "skype:" + user + "?call";
        if (!user) {
            alert(culture.coviewer.ConfigureSkype);
        } else {
            $o.forms.sendForm($o.forms.type.SKYPE, link);
            $("#voice-tool-box").hide();
            $("#chat-tool-box").show();
            $("#chat-tool").addClass("active");
            $("#voice-tool").removeClass("active");
        }
    });

    /*ASK SS FOR VISITOR DESDE AGENT TOOLS*/
    $("#allow-visitor-ss-only").click(function () {
        $o.forms.sendForm($o.forms.type.ASKFORSS);
        $("#voice-tool-box").hide();
        $("#chat-tool-box").show();
        $("#chat-tool").addClass("active");
        $("#voice-tool").removeClass("active");
    });



    /*UPLOAD DESDE AGENT TOOLS*/

    $("#upload-agent-file-path").change(function () {
        var ext = $("#upload-agent-file-path").val().split('.').pop().toLowerCase();
        if (ext != "") {
            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg', 'bmp', 'otf', 'pdf', 'xlsx', 'xls', 'doc', 'docx']) != -1) {

                $("#upload-token-agent").val($o.core.globalVariables.myToken);
                $("#upload-token-room").val($o.core.globalVariables.room);

                var posit = parseInt($("#oct8ne-nodes ul").css("width").replace("px", ""));
                $("#oct8ne-nodes ul").css("width", posit + 125 + 'px').append("<li id='upload-loading'>");

                if (navigator.appName.indexOf("Internet Explorer") != -1) { //yeah, he's using IE
                    $("#upload-agent-form").submit();
                } else if ((this.files[0].size / 1024 / 1024) < 10) {
                    if ((this.files[0].size / 1024 / 1024) != 0) {
                        $("#upload-agent-form").submit();
                    } else {
                        alert(culture.coviewer.EmptyUploadFile);
                    }
                } else {
                    alert(culture.coviewer.LargerUploadFile);
                }
            } else {
                alert(culture.coviewer.IncorrectExtensionUpload);
            };

            $(".upload-message").text(culture.coviewer.ImageUploaded);
            setTimeout(function () {
                $(".upload-message").text("");
            }, 4000);

            setTimeout(function () {
                $("#upload-tool").removeClass("active");
                $("#chat-tool").addClass("active");
                $("#tools-container").children().fadeOut(0);
                $("#chat-tool-box").fadeIn(0);
            }, 1000);
        }
    });

    /*ENVIAR FORMULARIOS DESDE AGENT TOOLS*/
    $("#get-info-doc").click(function () {
        $o.forms.sendForm($o.forms.type.DOCUMENT, "");
        backToChatState();
    });

    $("#get-send-email").click(function () {
        $o.forms.sendForm($o.forms.type.SENDSESSION, "");
        backToChatState();
    });

    $("#get-request-phone").click(function () {
        $o.forms.sendForm($o.forms.type.CALLBACK);
        backToChatState();
    });

    $("#get-stars-valoration").click(function () {
        $o.forms.sendForm($o.forms.type.STARSVALORATION);
        backToChatState();
    });

    $("#get-valoration").click(function () {
        $o.forms.sendForm($o.forms.type.VALORATION);
        backToChatState();
    });


    $(".get-custom-form-js").on("click", function () {
        var subtype = $(this).attr("attr-data");
        $o.forms.sendForm(subtype);
        backToChatState();
    });

    function backToChatState() {
        $("#form-tool-box").hide();
        $("#chat-tool-box").show();
        $("#chat-tool").addClass("active");
        $("#form-tool").removeClass("active");
    };

    $("#oct8ne-communications").on("click", ".download-doc", function () {
        var link = $(this).attr("data-link");
        link = link + "&token=" + $o.core.globalVariables.myToken + "&room=" + $o.core.globalVariables.room + "&who=" + $o.core.globalVariables.userType;
        window.location.href = link;
    });


    //FUNCIONES DE VISITOR
    $("#oct8ne-communications").on("click", "input", function () {
        $(this).focus();
    });

    /*RESPONDE  AL BOTON JUST LOOKING DE VISITANTE*/
    $("#oct8ne-communications").on("click", "#welcome-just-looking", function () {
        $o.chat.showJustLookingMessage();
        $o.saveRecord.justLookingB();
    });

    /*RELLENA EL VOICE FORM DESDE VISITANTE*/
    $("#oct8ne-communications").on("click", ".sending-phone", function () { //DEPRECATED CUANDO BORREMOS EL VISOR VIEJO
        var phone = $(this).prev().val();
        var canPass = $o.settings.privacyPolicy.length ? false : true;
        if ($o.settings.privacyPolicy.length) {
            var accept = $(this).prev().prev().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        };

        if (phone == "") {
            alert(culture.coviewer.EnterPhoneNumber);
        } else {
            if (canPass) {
                var response = [phone];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), response);
            };
        };
    });

    $("#oct8ne-communications").on("click", ".sending-phone-new", function () { //EVENTO NUEVO VISOR
        var phone = $(this).parent().parent().prev().find("input").val();
        var canPass = $o.settings.privacyPolicy.length ? false : true;
        $(this).parent().parent().prev().find("input").removeClass("data-contact-error");

        if ($o.settings.privacyPolicy.length) {
            var accept = $(this).parent().parent().next().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        };

        if (phone == "") {
            //  alert(culture.coviewer.EnterPhoneNumber);
            $(this).parent().parent().prev().find("input").addClass("data-contact-error");
        } else {
            if (canPass) {

                var response = [phone];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), response);
            };
        };
    });

    /*RESPUESTAS DE SKYPE*/
    $("#oct8ne-communications").on("click", "#skype-decline", function () {
        var response = ["decline"];
        $o.forms.sendFormResponse($(this).attr("data-form-id"), response);
    });

    $("#oct8ne-communications").on("click", "#skype-accept", function () {
        var response = ["accept"];
        $o.forms.sendFormResponse($(this).attr("data-form-id"), response);
    });

    /*ALLOW SCREEN SHARING LADO VISITOR*/

    $("#oct8ne-communications").on("click", "#allow-visitor-ss", function () {
        var formId = $(this).attr("data-form-id");
        conferenceVM.installExtensionFlow(generateConferenceId(), formId);
    });

    $(".oct8ne-chat-room").on("click", ".install-advice-button", function () {
        var link = $("#crhome-extension-link a").attr("href");
        window.open(link);
        $(".install-advice").hide();
        $(".refresh-advice").show();
    });

    $(".oct8ne-chat-room").on("click", ".refresh-advice-button", function () {
        if ($o.core.userType == "V") {
            parent.postMessage("REFRESHPAGE", "*");
        }
    });

    $(".oct8ne-chat-room").on("click", ".valoration-area span", function () {
        $(".error-valoration").hide();
        if ($(this).hasClass("active")) {
            $(this).removeClass("active");
        } else {
            $(this).addClass("active").siblings().removeClass("active");
        }
     });

    $(".oct8ne-chat-room").on("click", "#send-valoration", function () {
        $(".error-valoration").hide();
        var value = $(".valoration-area span.active").attr("data-form-id");
        if (!value) {
            $(".error-valoration").show();
        } else {
            value = value.split("-")[0];
            var formId = $(this).attr("data-form-id");
            var comment = $(".comment-valoration").val();
            var  response = [value, comment];
            $o.forms.sendFormResponse(formId, response);

            //MARCA LA SESSION
            var domain = $("#domain-id").val();
            var idAgent = $o.core.globalVariables.agentId;
            var tokenSession = $(this).attr("data-form-room");
            var agentName = $o.core.globalVariables.agentName;
            value = value === "bad" ? false : true;

            $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, value, comment, agentName, $o.visitorRatings.TypeRatingGoodBad);
            $o.visitorRatings.agentRated = true;
        }
    });

    $(".oct8ne-chat-room").on("click", "#send-valoration-stars", function () {
        $(".error-valoration").hide();
        var input = $("#rating-area-stars input");

        var value = "";
        var i;
        for (i = 0; i < input.length; i++) {
            if (input[i].checked) {
                value = input[i].value;
            }
        }
        if (!value) {
            $(".error-valoration").show();
        } else {
            var formId = $(this).attr("data-form-id");
            var comment = $(".comment-valoration").val();
            var response = [value, comment];
            $o.forms.sendFormResponse(formId, response);

            var domain = $("#domain-id").val();
            var idAgent = $o.core.globalVariables.agentId;
            var tokenSession =$(this).attr("data-form-room");
            var agentName = $o.core.globalVariables.agentName;
            $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, value, comment, agentName, $o.visitorRatings.TypeRatingStars);
            $o.visitorRatings.agentRated = true;

        }
    });


    /*VALIDAR Y RESPONDER FORMULARIO*/
    $("#oct8ne-communications").on("click", ".submit-contact-form", function () { //DEPRECATED CUANDO BORREMOS EL VISOR VIEJO
        var cName = $(this).parent().parent().prev().prev().prev();
        var cNameValid = false;
        var cEmail = $(this).parent().parent().prev();
        var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
        var canPass = $o.settings.privacyPolicy.length ? false : true;

        if (cName.val() != "") { cNameValid = true; cName.removeClass("data-contact-error"); };



        if ($o.settings.privacyPolicy.length) {
            var accept = $(this).parent().parent().prev().prev().prev().prev().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        };

        if (regex.test(cEmail.val()) && cNameValid) {

            if (canPass) {
                var data = [cName.val(), cEmail.val()];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), data);

                var user = {
                    Email: data[1],
                    FirstName: data[0],
                    Origin: "Chat form",
                    EnterPage: $o.core.globalVariables.sendEmailBaseUrl || $o.core.globalVariables.baseUrl
                };

                var queryString = "?domainId=" + $o.core.globalVariables.domainId + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId + "&tokenSession=" + $o.core.globalVariables.room;
                $.post("/Visitor/DataVisitor" + queryString, user);
                //REVISAR
                if ($o.core.isSignalRConnected()) $o.hubsOut.sendDataVisitorToDashboard($o.core.globalVariables.myToken, user);
            };
        } else {
            cEmail.addClass("data-contact-error");
            if (!cNameValid) cName.addClass("data-contact-error");
            if (regex.test(cEmail.val())) cEmail.removeClass("data-contact-error");
        }
    });


    $("#oct8ne-communications").on("click", ".submit-contact-form-new", function () { //EVENTO NUEVO VISOR 

        var cEmail = $(this).parent().parent().prev().find("input.customers-email"),
            cName = $(this).parent().parent().prev().find("input.customers-name"),
            cNameValid = false;
        canPass = $o.settings.privacyPolicy.length ? false : true,
            regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;

        if (cName.val() != "") { cNameValid = true; cName.removeClass("data-contact-error"); };

        if ($o.settings.privacyPolicy.length) { //FALTA CHEKEAR
            var accept = $(this).parent().parent().next().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        };


        if (regex.test(cEmail.val()) && cNameValid) {
            cEmail.removeClass("data-contact-error");
            if (canPass) {
                var data = [cName.val(), cEmail.val()];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), data);

                var user = {
                    Email: data[1],
                    FirstName: data[0],
                    Origin: "Chat form",
                    EnterPage: $o.core.globalVariables.sendEmailBaseUrl || $o.core.globalVariables.baseUrl
                };

                var queryString = "?domainId=" + $o.core.globalVariables.domainId + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId + "&tokenSession=" + $o.core.globalVariables.room;
                $.post("/Visitor/DataVisitor" + queryString, user);
                //REVISAR
                if ($o.core.isSignalRConnected()) $o.hubsOut.sendDataVisitorToDashboard($o.core.globalVariables.myToken, user);
            };

        } else {
            cEmail.addClass("data-contact-error");
            if (!cNameValid) cName.addClass("data-contact-error");
            if (regex.test(cEmail.val())) cEmail.removeClass("data-contact-error");
        }
    });


    $("#oct8ne-communications").on("click", ".submit-send-session", function () { //DEPRECATED CUANDO BORREMOS EL VISOR VIEJO 
        var email = $(this).prev().val(),
            canPass = $o.settings.privacyPolicy.length ? false : true,
            regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;

        if ($o.settings.privacyPolicy.length) {
            var accept = $(this).prev().prev().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        }
        if (regex.test(email)) {
            $(this).prev().removeClass("data-contact-error");
            if (email && canPass === true) {
                $o.visitorSearch.getRecordsMailInfo(email);
                var data = [email];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), data);
            }
        } else {
            $(this).prev().addClass("data-contact-error");
        }
    });

    $("#oct8ne-communications").on("click", ".submit-send-session-new", function () { //EVENTO NUEVO VISOR
        var email = $(this).parent().parent().prev().find("input").val(),
            canPass = $o.settings.privacyPolicy.length ? false : true,
            regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;


        if ($o.settings.privacyPolicy.length) { //FALTA CHEKEAR

            var accept = $(this).parent().parent().next().find("input");
            if (!accept.is(":checked")) {
                accept.parent().addClass("data-contact-error");
            } else {
                canPass = true;
                accept.parent().removeClass("data-contact-error");
            }
        };

        if (regex.test(email)) {
            $(this).parent().parent().prev().find("input").removeClass("data-contact-error");
            if (email && canPass === true) {
                $o.visitorSearch.getRecordsMailInfo(email);
                var data = [email];
                $o.forms.sendFormResponse($(this).attr("data-form-id"), data);
            }
        } else {
            $(this).parent().parent().prev().find("input").addClass("data-contact-error");
        }
    });

    /*UPLOAD DE VISITANTE*/
    $("#upload-visitor-tool").on("change", "#upload-visitor-file-path", function (e) {
        e.preventDefault();
        $("#upload-token-visitor").val($o.core.globalVariables.myToken);
        $("#upload-token-room").val($o.core.globalVariables.room);

        var ext = $("#upload-visitor-file-path").val().split('.').pop().toLowerCase();
        if (ext != "") {
            if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg', 'bmp', 'otf', 'pdf', 'xlsx', 'xls', 'doc', 'docx']) != -1) {

                var posit = parseInt($("#oct8ne-nodes ul").css("width").replace("px", ""));
                $("#oct8ne-nodes ul").css("width", posit + 125 + 'px').append("<li id='upload-loading'>");

                if ($("#mylist-advice").is(":visible")) {
                    $("#mylist-advice").hide();
                }

                if (navigator.appName.indexOf("Internet Explorer") != -1) { //yeah, he's using IE
                    if ($o.core.userType == "V") { $(".upload-visitor-tool").removeClass("icon-common-upload-button , icon-common-clip-upload").addClass("loading-image"); }
                    $("#upload-visitor-form").submit();
                } else if ((this.files[0].size / 1024 / 1024) < 10) {
                    if ((this.files[0].size / 1024 / 1024) != 0) {
                        if ($o.core.userType == "V") { $(".upload-visitor-tool").removeClass("icon-common-upload-button , icon-common-clip-upload").addClass("loading-image"); }
                        $("#upload-visitor-form").submit();
                    } else {
                        alert(culture.coviewer.EmptyUploadFile);
                    }
                } else {
                    alert(culture.coviewer.LargerUploadFile);
                }

            } else {
                alert(culture.coviewer.IncorrectExtensionUpload);
            }

            $("#upload-tool").removeClass();
        }
    });

    /*BOTON RECONECTAR SESION DESDE VISITOR*/
    $("#oct8ne-communications").on("click", ".submit-reconnect-session", function (e) {
        $o.visitorSearch.actionWhenClosingIframe();

        //if (($o.variablesVisitor.nowInteractionAFK - $o.variablesVisitor.lastInteractionAFK) < $o.variablesVisitor.referenceTimeAFK) {
        //    $("#chat-input").attr("readonly", false).focus();
        //    $("#chat-input").removeClass("chat-input-disabled");

        //    if ($(".emoji-wysiwyg-editor").is(":visible")) {
        //        $(".chat-input-emoji").removeClass("chat-input-disabled"); //Nuevo Visor
        //        $(".emoji-wysiwyg-editor").attr("contenteditable", true).focus();   //NUevo visor
        //    }
        //    $o.canned.sendCannedResponse($(this).attr("data-form-id"), ["responsed"]);
        //    //$o.visitorSearch.changeToWaitingStatus();
        //    $o.variablesVisitor.status = "";
        //    $o.core.globalVariables.room = "";
        //    var queryString = "statusVisitor=" + $o.variablesVisitor.status
        //        + "&tokenVisitor=" + $o.variablesVisitor.tokenVisitor
        //        + "&tokenSession=" + $o.core.globalVariables.room
        //        + "&domainId=" + $o.variablesVisitor.domain + "&sessionSummaryId=" + $o.variablesVisitor.sessionSummaryId;
        //    $.post("Visitor/AgentsConnected?" + queryString, { domainId: $o.variablesVisitor.domain, deptId: $o.visitorStart.assignedDepartment.Id, isReconnect: true }, function (agentsConnected) {
        //        $o.core.agentsConnected = true;
        //        $o.core.hasBeenWaiting = false;
        //        $o.visitorSearch.enableSelectResult = false;
        //        $o.chat.startedChangeToWaiting = false;
        //        if (agentsConnected == "True") {
        //            if (!$o.core.isSignalRConnected()) {
        //                $.connection.hub.start().done(function () {
        //                    $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.connection, value: $.connection.hub.id }]);
        //                    $o.visitorStart.visitorStart($o.visitorStart.enterTypeForStart);
        //                });
        //            }
        //        } else {
        //            $o.core.globalVariables.agentsConnected = false;
        //            $o.core.agentsConnected = false;
        //            $o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
        //            $o.inactivity.disableChatInputUI();
        //            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [
        //                { cookie: $o.cookies.sessionWithoutAgent, value: true }
        //            ]);
        //        }
        //    });
        //}
    });

    $("#oct8ne-communications").on("click", ".busy-js , .overbooking-js ,.no-agents-js", function () {
        $("#email-us-form").show();
        $("#chat-wrapper").hide();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "form");
        $o.canned.sendCannedResponse($(this).attr("data-form-id"), ["responsed"]);
        $o.forms.closeSession(); //CERRAR SESION AUNQUE SE VEA EL FORMULARIO DE CONTACTO

    });


    /*FORMULARIO ENVIADO DESDE END SESSION DE AGENTE*/
    $("#oct8ne-communications").on("click", ".submit-send-session-recover", function () {
        var email = $(this).prev().val();
        var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
        if (regex.test(email)) {
            if (email) {
                //$o.forms.sessionToEmailForm(email, true);
                $o.visitorSearch.getRecordsMailInfo(email);
            }
            //  $(".message-email").html(culture.coviewer.EmailSummary);
            $(this).parent().parent().html("<p class='CHTxt4'>" + culture.coviewer.EmailSummary + "</p>");
            $(this).prev().hide();
            $(this).hide();
        } else {
            $(this).prev().addClass("data-contact-error");
        }
    });

    /*Formulario Para buscar un pedido*/
    $("#oct8ne-communications").on("click", "#sending-search-order", function () {
        var orderOptions = $o.forms.orderStatusOptions();
        var inputDataId = $(this).attr("data-form-id");

        orderOptions.OrderId = $("input[data-form-id="+inputDataId+"]").val();
        $o.platform.orders.getDetailsFromVisitor(orderOptions);
        var data = [orderOptions.OrderId];
        $o.forms.sendFormResponse($(this).attr("data-form-id"), data);
    });

    $o.forms.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.forms.UI = function () {
    $o.forms.removeFormCheckout = function () {
        $(".from-checkout").parent().parent().remove();
    };

    $o.forms.updateScroll = function (value) {
        $("#oct8ne-chat-room").scrollTop(value);
    };
};;
//EVENTOS 
//$o.note.events = function() {
//    $o.note.object.click(function () {
//        $o.tools.change($o.tools.type.NOTE);
//    });

//    $o.canva.holder.helper
//        .on("click", ".note", function (e) {
//            $(this).find(".note-message").toggle("slide");
//            e.stopPropagation();
//        })
//        .on("click", ".note textarea", function (e) {
//            $(this).find(".note-message").toggle("slide");
//            e.stopPropagation();
//        })
//        .on("click", ".send-note", function (e) {
//            var sendButton = $(this);
//            $o.note.currentNoteInfo.Body = $(this).prev().val();

//            if ($o.core.agentsConnected && $o.note.currentNoteInfo.Body) {
//                $o.hubsOut.sendNote($o.note.currentNoteInfo);
//            }

//            $o.hubsOut.addInteraction($o.note.currentNoteInfo);
//            $o.note.currentNoteInfo = "";

//            sendButton.parent().hide("slide");
//            sendButton.prev().attr("readonly", "readonly");
//            sendButton.remove();
//            e.stopPropagation();
//        })
//        .on("click", ".close-note", function (e) {
//            var noteWrapper = $(this).parent();
//            noteWrapper.hide("slide");
//            if (!noteWrapper.find("textarea").val().length) {
//                noteWrapper.parent().remove();
//            }
//            e.stopPropagation();
//        });
//    $o.note.UI();
//};

////FUNCIONES QUE MODIFICAN EL DOM 
//$o.note.UI = function () {

//    $o.note.createNoteUI = function (parameters, recover, pinPosition) {
//        if (!recover) $o.hubsOut.addInteraction(parameters);
//        var colorClass = (parameters.SentBy == "A") ? "icon-agent-notes" : "icon-notes";
//        $o.canva.holder.helper.append("<div data-zoom=" + parameters.Coords.Zoom + " data-x=" + parameters.Coords.PosX + " data-y=" + parameters.Coords.PosY + " style=\"left:" + pinPosition.left + "px; top:" + pinPosition.top + "px \" class='note " + colorClass + "' id='note" + parameters.MarkId + "'></div>");
//        var currentNote = $("#note" + parameters.MarkId);

//        currentNote.append("<div class='note-message'><textarea>" + parameters.Body + "</textarea><div class='close-note'>" + culture.coviewer.Close + "</div></div>");

//        if ((currentNote.offset().left - $("#oct8ne-holder").offset().left) > 250) {
//            currentNote.find(".note-message").css("margin-left", "-155px");
//        }
//        if ((currentNote.offset().top - $("#oct8ne-holder").offset().top) > 130) {
//            currentNote.find(".note-message").css("margin-top", "-127px");
//        }

//        if (parameters.Body != "") {
//            currentNote.find("textarea").attr("readonly", "readonly");
//        } else {
//            currentNote.find("textarea").after("<div class='send-note'>" + culture.coviewer.Send + "</div>");
//        }
//    };

//    $o.note.mouseNoteUI = function (parameters, recover, pinPosition) {
//        var otherCursorPosition = {
//            left: pinPosition.left + parseInt($o.canva.holder.helper.position().left),
//            top: pinPosition.top + parseInt($o.canva.holder.helper.position().top+20)
//        };
//        var sender = $o.core.globalVariables.userType == "V" ? "agent" : "visitor";
//        $(".other-cursor")
//           .css({ opacity: 1, top: "311px", left: "212px" })
//            .addClass(sender + "-note").
//            stop().animate({ top: otherCursorPosition.top, left: otherCursorPosition.left }, 1800, "easeOutExpo", function () {
//                $o.note.createNoteUI(parameters, recover, pinPosition);
//                var newPos = $o.tools.randomCursorPosition();
//                $(".other-cursor").delay(5000).animate({ top: newPos.top, left: newPos.left }, 1200, "easeOutQuad", function () {
//                    $(this).removeClass(sender + "-note").css({ opacity: .5 });
//                });
//            });
//    };
//};;
//EVENTOS 
$o.pin.events = function () {
    $o.pin.object.click(function () {
        $o.tools.change($o.tools.type.PIN);
    });
    $o.pin.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.pin.UI = function () {
    $o.pin.mousePinUI = function (parameters, pinPosition) {
        var currentImage = $o.carousel.currentImage,
            currentItem = $o.core.globalVariables.internalId;


        $(".other-cursor")
                    .stop()
                    .css({ opacity: 1, top: "311px", left: "212px" })
                    .addClass("agent-pin")
                    .animate({ top: pinPosition.top + parseInt($o.canva.holder.helper.position().top), left: pinPosition.left + parseInt($o.canva.holder.helper.position().left) }, 1500, "easeOutExpo", function () {
                     
                        var newPos = $o.tools.randomCursorPosition();
            if (currentImage == $o.carousel.currentImage && currentItem == $o.core.globalVariables.internalId) {
                $o.pin.addPin(parameters, pinPosition);
                $(".other-cursor").delay(1000).animate({ top: newPos.top, left: newPos.left }, 1000, "easeOutQuad", function() {
                    $(this).removeClass("agent-pin").css({ opacity: .5 });
                });
            } else {
                $(".other-cursor").delay(2000).css({ top: newPos.top, left: newPos.left }).removeClass("agent-pin").css({ opacity: .5 });
            }
        });
    };

    $o.pin.addPinUI = function (parameters, pinPosition) {
        $o.canva.holder.helper.append("<div data-x=" + parameters.Coords.PosX + " data-y=" + parameters.Coords.PosY + " id=" + parameters.Id + " style=\"left:" + pinPosition.left + "px; top:" + pinPosition.top + "px \" class='TxtCorp icon-common-pin-icon pin-shape'></div>");
    };
};;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.scroll = {
        init: function () {
            //controlamos visibility para actualizar chat
            function getHiddenProp() {
                var prefixes = ['webkit', 'moz', 'ms', 'o'];
                if ('hidden' in document) return 'hidden';
                for (var i = 0; i < prefixes.length; i++) {
                    if ((prefixes[i] + 'Hidden') in document)
                        return prefixes[i] + 'Hidden';
                }
                return null;
            }

            var visProp = getHiddenProp();

            if (visProp) {
                var evtname = visProp.replace(/[H|h]idden/, '') + 'visibilitychange';
                document.addEventListener(evtname, visChange);
            }

            function visChange() {
                if (!isHidden()) {
                    if ($o.core.agentsConnected) {

                        //  $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { timeout: 500 });


                    };
                }
            }

            function isHidden() {
                var prop = getHiddenProp();
                if (!prop) return false;
                return document[prop];
            }

            //final visibility

            if (mCustomScrollbar) {


                $("#oct8ne-nodes").mCustomScrollbar({
                    updateOnContentResize: true,
                    axis: "x",
                    theme: "dark-thin",
                    scrollInertia: 200,
                    scrollbarPosition: "inside",
                    autoHideScrollbar: true,
                    scrollButtons: {
                        enable: true,
                        scrollAmount: "auto"
                    },
                    mouseWheel: { preventDefault: true },
                    advanced: { updateOnSelectorChange: "ul li" },
                    alwaysShowScrollbar: 2
                });

                $("#results-search").mCustomScrollbar({
                    updateOnContentResize: true,
                    axis: "y",
                    scrollInertia: 200,
                    autoHideScrollbar: true,
                    scrollbarPosition: "inside",
                    scrollButtons: {
                        enable: true,
                        scrollAmount: "auto"
                    },
                    theme: "dark-thin",
                    mouseWheel: { preventDefault: true },
                    callbacks: {
                        onTotalScroll: function () {  //REVISAR  onUpdate en vez de onTotalScroll
                            if ($o.scroll.enableSearch) {
                                setTimeout(function () {
                                    $o.scroll.enableSearch = true;
                                }, 500);

                                if ($o.search.searchMode == $o.search.searchModes.RESULTS) {
                                    $o.search.itsANewSearch = false;
                                    $o.search.doSearch($o.search.searchTerm, $o.core.userType == "V" ? $o.filters.appliedFilters : $o.filters.appliedFilters);
                                } else {
                                    $o.search.itsANewSearch = false;
                                }
                            }
                        }
                    },
                    alwaysShowScrollbar: 2
                });

                $("#oct8ne-chat-room").mCustomScrollbar({
                    updateOnContentResize: true,
                    alwaysTriggerOffsets: false,
                    axis: "y",
                    scrollInertia: 300,
                    autoHideScrollbar: true,
                    scrollbarPosition: "inside",
                    //scrollButtons: {
                    //    enable: true,
                    //    scrollAmount: "auto"
                    //},
                    theme: "dark-thin",
                    mouseWheel: { preventDefault: true },
                    callbacks: {
                        onUpdate: function () {
                            if (!$o.chat.noUpdateScroll) {
                                $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { callbacks: false });
                            }
                            //else {
                            //    $o.chat.noUpdateScroll = false;
                            //}
                        },
                        //onTotalScroll: function () {
                        //    console.log("on total");
                        //    $("#oct8ne-chat-room").mCustomScrollbar("scrollTo", "bottom", { callbacks: false });
                        //},
                        onScroll: function () {
                            var chatHeight = $("#oct8ne-chat-room .mCSB_container").height();
                            if ((chatHeight + this.mcs.top) > 550) {
                                $o.scroll.disableScroll();
                            } else {
                                $o.scroll.enableScroll();
                            }
                        }
                    },
                    alwaysShowScrollbar: 2
                });
            } else {
                document.getElementById("server-overload").style.display = 'block';
            }
        },


        disableScroll: function () { //Muestra Boton y descativa scroll temporalmente
            $("#go-to-bottom").fadeIn(500);
            $o.chat.noUpdateScroll = true;

        },

        enableScroll: function () { //Esconde boton y activa scroll again
            $("#go-to-bottom").fadeOut(300);
            $("#warning-chat").text("").hide();
            $o.chat.noUpdateScroll = false;
            $o.chat.alertMessageInChat = null;
        },

        moveScroll: function (target, value) {//DEPRECATED
            $("#" + target).scrollTop(value);
        },

        moveChatToBottom: function () { //Only in Mobile cuz we are removed customscrollbar plugin and we need to force the scroll to bottom
            return; //In desktop, nothing happens
        },

        enableSearch: true
    };
})(window);;
//EVENTOS 
$o.search.events = function () {
    $("#search-term").on("keyup", function (e) {
        if ((e.keyCode === $.ui.keyCode.ENTER) && ($(this).val().length) && (!$o.search.isSearching)) {
            if ($(this).val() === "No previous searches") return; //Problema con el knockout; hay que capar la búsqueda de "No previous searches".

            $("#no-results-search,#no-products-related").hide();
            $(".preload-image,.results .loading,.results .loading-products").remove();
            var searchInput = $(this).val().replace("&", "%26");

            $o.search.searchTerm = searchInput;

            $("#filter-button p").text("");
            $o.search.resetSearch();
            $o.search.doSearch(searchInput, $o.filters.appliedFilters, false, "true");
            if ($("#results-search").not(":visible")) {
                $("#results-search").show();
            }
            if ($o.core.globalVariables.userType === "A") {
                $("#info-catalog").trigger("click");
                $(".empty-search-agent").hide();
            }
        } else {
            if (e.keyCode === $.ui.keyCode.ENTER && $o.core.globalVariables.apiVersion == "2.5" && !$o.search.isSearching) {
                $("#no-results-search,#no-products-related").hide();
                $(".preload-image,.results .loading,.results .loading-products").remove();
                $o.search.searchTerm = "";
                $o.search.resetSearch();
                $o.search.doSearch($o.search.searchTerm, $o.filters.appliedFilters, false, "true");
                if ($("#results-search").not(":visible")) {
                    $("#results-search").show();
                }
                if ($o.core.globalVariables.userType === "A") {
                    $("#info-catalog").trigger("click");
                    $(".empty-search-agent").hide();
                }
            }
        }
    });

    $("#search-action").on("click", function () {
        if (($("#visitor-last-search").hasClass("active") || $("#info-catalog").hasClass("active"))||($o.core.userType==="V")) {
            if ($("#search-term").val().length && !$o.search.isSearching) {
                if ($("#search-term").val() === "No previous searches") return; //Problema con el knockout; hay que capar la búsqueda de "No previous searches".

                $("#no-results-search,#no-products-related").hide();
                $(".preload-image,.results .loading,.results .loading-products").remove();
                var searchInput = $("#search-term").val().replace("&", "%26");

                $o.search.searchTerm = searchInput;

                $("#filter-button p").text("");
                $o.search.resetSearch();
                $o.search.doSearch(searchInput, $o.filters.appliedFilters, false, "true");
                if ($("#results-search").not(":visible")) {
                    $("#results-search").show();
                }
                if ($o.core.globalVariables.userType === "A") {
                    $("#info-catalog").trigger("click");
                    $(".empty-search-agent").hide();
                }
            } else {
                if ($o.core.globalVariables.apiVersion == "2.5" && !$o.search.isSearching) {
                    $("#no-results-search,#no-products-related").hide();
                    $(".preload-image,.results .loading,.results .loading-products").remove();
                    $o.search.searchTerm = "";
                    $o.search.resetSearch();
                    $o.search.doSearch($o.search.searchTerm, $o.filters.appliedFilters, false, "true");
                    if ($("#results-search").not(":visible")) {
                        $("#results-search").show();
                    }
                    if ($o.core.globalVariables.userType === "A") {
                        $("#info-catalog").trigger("click");
                        $(".empty-search-agent").hide();
                    }
                }
            };
        }
        else {
            var currentCategory = $("#filter-catalog-id").attr("data-filter-id");
            window.agentCatalogVM.getCatalog(currentCategory);
            $o.catalog.totalItems = 0;
        }           
    });

    //$(".results")
    //     .on("mouseenter", "li", function () {
    //         $(this).find(".product-info").show();
    //     })
    //     .on("mouseleave", "li", function () {
    //         $(this).find(".product-info").hide();
    //     });

    $("#more-info-item").on("click", function (e) {
        var info = $(this);
        if ($o.search.openSeeDescription) {   //cierra
            info.animate({ "bottom": "0" }, 150);
        } else {//abre
            var newHeight = $("#item-description").height() + 30;
            info.animate({ "bottom": newHeight }, 300);
        }
        $o.search.openSeeDescription = $o.search.openSeeDescription ? false : true;
    });


    $o.search.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.search.UI = function () {

    $o.search.createSearchPriceLayout = function (data) {
        var normalData = data.normalPrice;
        var normalLayout = "<div class='normal-price custom-search-product-price CVTxt3'><div style='" + normalData.line1.inlineStyle + "'>" + normalData.line1.textTemplate + "</div>";
        if (normalData.line2.textTemplate !== "") {
            normalLayout += "<div style='" + normalData.line2.inlineStyle + "'>" + normalData.line2.textTemplate + "</div>";

        } normalLayout += "</div>";
        normalLayout = normalLayout.replace("[0]", "<span>[0]</span>");
        // $o.carousel.priceLayouts.coviewer.normal = normalLayout;
        // $("#search-normal-price").html(normalLayout);
        $o.carousel.searchPriceLayouts.normal = normalLayout;

        var saleData = data.salePrice;
        var saleLayout = "<div class='sale-price custom-search-product-price-offer CVTxt3'>";
        saleLayout += "<div style='" + saleData.line1.inlineStyle + "'>" + saleData.line1.textTemplate + "</div>";
        if (saleData.line2.textTemplate !== "") {
            saleLayout += "<div style='" + saleData.line2.inlineStyle + "'>" + saleData.line2.textTemplate + "</div>";
        };

        saleLayout = saleLayout.replace("[0]", "<span>[0]</span>");
        saleLayout = saleLayout.replace("[1]", "<span>[1]</span>");

        saleLayout += "</div>";
        $o.carousel.searchPriceLayouts.sale = saleLayout;

    };

    $o.search.setDefaultSortChoiceUI = function () {
        $(".sort-choice a").text(culture.coviewer.SortedByRelevance);
    };

    $o.search.setSearchLayoutUI = function () {
        $(".my-list-items").hide();
        $(".my-search-items").show();
        $("#acces-to-mylist").text(culture.coviewer.AccessMyList);
    };

    $o.search.loadingSearchUI = function () {
        var targetDiv = $o.core.globalVariables.userType === "V" ? $(".results-wrapper") : $("#results-search .overview");
        targetDiv.append("<div class='loading custom-search-loading CVTxt4'><p class='custom-search-loading-text'>" + culture.coviewer.LoadingInteractions + "</p></div>").find(".loading").fadeIn(100);
    };

    $o.search.loadingMoreProductsUI = function () {
        var targetDiv = $o.core.globalVariables.userType === "V" ? $(".results") : $("#results-search .overview");
        targetDiv.append("<div class='loading-products custom-search-loading-products  CVBkg5 CVTxt4'>" + culture.coviewer.LoadingMoreProducts + "</div>").fadeIn(100);
    };

    $o.search.removeLoadingProductsUI = function () {
        if ($(".loading-products").length) $("#results-search").mCustomScrollbar("scrollTo", "-=50", { scrollInertia: 800, scrollEasing: "easeOut" });
        $(".preload-image,.results-wrapper .loading,.results .loading-products , .overview .loading").remove();

    };

    $o.search.setTotalItemsUI = function (totalItems) {
        $(".results>ul").css({ "height": (totalItems * 130) / 2 + "px !important" });
    };

    $o.search.clickFirstProductUI = function () {
        //$o.log("busca el primero");
        $(".product:first-child").trigger("click");
    };

    $o.search.hideNoProducts = function () {
        $("#no-results-search, #no-products-related").hide();
    };

    $o.search.showNoProducts = function () {
        $("#no-results-search").show();
        if (!$o.search.searchTerm || $o.search.searchTerm == "''") {
            $("#no-results-search span").html('""');
            } else {
           
            $("#no-results-search span").html('"' + $o.search.searchTerm.replace("%26", "&") + '"');
            }
        
    };

    $o.search.showNoProductsInCatalog = function () {
        $("#no-results-search").show();
        $("#no-results-search span").html('"' + culture.coviewer.EmptyCatalog + '"');

    };

    $o.search.showNoProductsInAgentCatalog = function () {
        $("#no-results-catalog").show();
        // $("#no-results-catalog span").html('"' + culture.coviewer.EmptyCatalog + '"');
    };


    $o.search.addNodeToMyListUI = function () {
        $("#add-to-mylist-tool-visitor").removeClass("icon-common-wishlist-icon custom-coviewer-icon-mylist CVTxt3").addClass("icon-common-like-button-high custom-coviewer-icon-mylist-highlighted TxtCorp");
        $("#add-to-mylist").delay(500).fadeIn(100).delay(1500).fadeOut(400);
    };

    $o.search.addNodeToCartUI = function () {
        $("#add-to-mycart").delay(500).fadeIn(100).delay(1500).fadeOut(400);
    };

    $o.search.updateTyniScrollUI = function () {
        //$o.scroll.updateTinyScroll("results-search","relative");
    };
};;
//EVENTOS 
$o.tools.events = function () {
    $o.tools.object = $("#oct8ne-tools");
    $("#coviewer-tools-box li").on("click", function () { //DEPRECATED
        if ($(this).attr("id") != "undo-tool") $(this).addClass("current-tool").siblings().removeClass();
    });

    $("#undo-tool").click(function () {
         $o.tools.undoPin();
    });
    $o.tools.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.tools.UI = function () {
    $o.tools.addClassAddingPin = function () {
        $o.canva.holder.helper.css({ opacity: 1 }).addClass("adding-pin");
    };
    
    $o.tools.addClassPointing = function() { //DEPRECATED
        $o.canva.holder.helper.addClass("pointing");
        $("#point-tool").addClass("current-tool").siblings().removeClass();
        $("#coviewer-tools-box li").addClass("current-tool").siblings().removeClass();
    };

    $o.tools.addClassAddingNote = function () { //DEPRECATED
        $o.canva.holder.helper.css({ opacity: 1 }).addClass("adding-note");
    };
};;
window.oct8ne = window.$o = window.oct8ne || {};

(function () {
    oct8ne.iframes = {
        init: function () {
            $o.iframes.currentIframeStatus = $("#iframe-status").val();
            $o.variablesVisitor.statusBeforeMin = $("#status-before-min").val();
            //$o.log("iframe " + $o.iframes.currentIframeStatus);
            if ($o.iframes.currentIframeStatus === $o.iframes.iframeStatus.PINCODE) {
                $("#all-wrapper").hide();
            } else {
                $o.visitorStart.showAllWrapperUI();
            }
            $o.iframes.changeStatusIframe($o.iframes.currentIframeStatus, true);

            $(".chat-menu").on("click", function (e) {
                e.stopPropagation();
                $(".chat-menu-options").toggle();
                if ($(".send-summary-feedback").is(":visible")) {
                    $(".chat-menu-options ul").show(0);
                    $(".send-summary-feedback").hide(0);
                }
            });

            $(".close-summary-form").on("click", function () {
                $("#summary-form").hide();
                $("#email-adress-summary").val();
            });

            $(".close-summary-finalized-form").on("click", function () {
                $("#summary-finalized-form").hide();
                $("#email-adress-summary").val();
                $o.saveRecord.closeViewerBySurveyB();
                $o.visitorSearch.actionWhenClosingIframe();
            });

            $("#all-wrapper").on("click", function () {
                // console.log("allwraper");
                if ($(".chat-menu-options").is(":visible")) $(".chat-menu-options").hide();
            });

            $(".show-coviewer, .chat-header #pending-products").on("click", function (e) {
                e.stopPropagation();
                if ($o.iframes.enableChangeStatus) {
                    $o.iframes.enableChangeStatus = false;
                    var newStatus = "";
                    if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT) {
                        if (!$o.core.agentsConnected && $o.platform) {                           
                            $o.platform.addPlatformLogin();//Actualiza el Cart del visitor
                        };
                        newStatus = ($o.core.globalVariables.showSearch != "True" || $o.core.globalVariables.edition == $o.core.editions.FREE) ? $o.iframes.iframeStatus.VIEWER : $o.iframes.iframeStatus.SEARCH;
                        $("#pending-products").hide();
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.pendingProducts, value: "" }]);

                    } else {
                        newStatus = $o.iframes.iframeStatus.CHAT;
                    }
                    $o.iframes.changeStatusIframe(newStatus);
                    setTimeout(function () { $o.iframes.enableChangeStatus = true; }, 100);
                }
            });

            $(".minimize-chat , #minimize-chat-no-agent, .minimize-chat-header").on("click", function () { /*Antes era minimize-coviewer*/
                $(".chat-menu-options,.summary-form ,.block-modal").hide();
                $o.iframes.previousIframeStatus = $o.iframes.currentIframeStatus == $o.iframes.iframeStatus.MINIMIZED ? $o.iframes.iframeStatus.CHAT : $o.iframes.currentIframeStatus;
                if ($o.core.globalVariables.agentsConnected == "True") {
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.MINIMIZED);
                }
                else {
                    $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CLOSE);
                }
                $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.statusBeforeMin, value: $o.iframes.previousIframeStatus }]);
            });


            //$(".maximize-chat-header , #warning-visitor").on("click", function () {  /*Antes era maximize-coviewer - DEPRECATED*/
            //    var statusBeforeMin = $o.variablesVisitor.statusBeforeMin;
            //    if (statusBeforeMin) {

            //        if (statusBeforeMin == $o.iframes.iframeStatus.SEARCH) {
            //            $("#pending-products").hide();
            //            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.pendingProducts, value: "" }]);
            //        }
            //        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.statusBeforeMin, value: "" }]);
            //    };

            //    $o.iframes.currentIframeStatus = $o.iframes.previousIframeStatus || statusBeforeMin;

            //    $o.iframes.changeStatusIframe($o.iframes.currentIframeStatus);
            //    $("#coviewer-minimized , #coviewer-minimized-no-agent").hide(0, function () { $("#all-wrapper").show(0); });

            //});


            //$(".maximize-chat-header-new").on("click", function () {  /*Evento EXCLUSIVO PARA NUEVO VISOR - DEPRECATED*/
            //    var statusBeforeMin = $o.variablesVisitor.statusBeforeMin;
            //    if (statusBeforeMin) {

            //        if (statusBeforeMin == $o.iframes.iframeStatus.SEARCH) {
            //            $("#pending-products").hide();
            //            $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.pendingProducts, value: "" }]);
            //        }
            //        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.deleteCookies, [{ cookie: $o.cookies.statusBeforeMin, value: "" }]);
            //    };

            //    $o.iframes.currentIframeStatus = $o.iframes.previousIframeStatus || statusBeforeMin;
            //    $o.iframes.changeStatusIframe($o.iframes.currentIframeStatus);

            //    //$("#coviewer-minimized , #coviewer-minimized-no-agent").hide(0, function () {
            //    //    $("#coviewer-wrapper , #chat-wrapper, #bottom-menu").show(0);
            //    //});
            //});

            $("#pincode-wrapper span").on("click", function () {
                $o.inactivity.stopProcess();
                parent.postMessage("CLOSEIFRAME", "*");
            });
        },

        openCoviewerFromPin: function (agent) {
            var result = {
                Agent: agent
            };
            var queryString = "?tokenSession=" + $o.core.globalVariables.room;
            $.post("Visitor/AgentAssignedFromPhonePin" + queryString, { agentId: agent.Id });

            $("#pincode-wrapper").hide(0);
            $o.iframes.changeStatusIframe($o.iframes.iframeStatus.SEARCH);
            $o.visitorStart.showAllWrapperUI();
            $("#search-wrapper,#chat-wrapper").show(0);
            $o.visitorSearch.enableSelectResult = true;
            //parent.postMessage("SENDANALYTICSEVENT,Attended Session, " + agent.Name, "*");
            $o.visitorSearch.assignedAgentName = agent.Name;
            $o.visitorStart.agentsConnectedChangesUI(result);
            $o.visitorStart.changeHeaderChatToChatting();


            $o.visitorSearch.sendJustLookingChatMessage(culture.coviewer.WelcomeMessagePhone);
        },

        showToken: function (token) {
            var pinCode = token.slice(28, 32);
            $("#pincode-wrapper").show().find("#pin").text(pinCode).show(0);
        },

        changeStatusIframe: function (newStatus, isOpening, clickOnPage) {
            if (newStatus == $o.iframes.iframeStatus.SEARCH && ($o.core.globalVariables.showSearch != "True" || $o.core.globalVariables.edition == $o.core.editions.FREE)) { newStatus = $o.iframes.iframeStatus.VIEWER; };
            $o.iframes.currentIframeStatus = newStatus;

            //si es minimized toggleamos a true

            if ($o.chat.alerts !== null && $o.chat.alerts.hasOwnProperty("toggle")) {
                $o.chat.alerts.toggle(newStatus === $o.iframes.iframeStatus.MINIMIZED);
            };            
            switch (newStatus) {
                case $o.iframes.iframeStatus.CLOSE:
                    var tokenVisitor = $o.variablesVisitor.tokenVisitor;
                    $.post("Visitor/CloseSession", { tokenVisitor: tokenVisitor }, function (data) {
                        $o.inactivity.stopProcess();
                        parent.postMessage("CLOSEIFRAME", "*");
                    });
                    break;
                case $o.iframes.iframeStatus.SEARCH:                    
                    if ($o.core.globalVariables.enterType == $o.core.enterType.PINCODE) {
                        parent.postMessage("REMOVELAYBORDER", "*");
                    }
                    if ($("#all-wrapper").is(":hidden")) {
                       // $("#coviewer-minimized , #coviewer-minimized-no-agent").hide(0);
                        $("#all-wrapper").show(0);
                    }
                    $(".show-coviewer").addClass("js-reverse");
                    $o.visitorSearch.enableSelectResult = true;
                    if (!isOpening) $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.coviewerStatus, value: $o.iframes.iframeStatus.SEARCH }]);
                    $("#search-wrapper, #coviewer-wrapper").delay(10).show(0);
                    break;
                case $o.iframes.iframeStatus.VIEWER:
                    if ($o.core.globalVariables.enterType == $o.core.enterType.PINCODE) {
                        parent.postMessage("REMOVELAYBORDER", "*");
                    }
                    $(".show-coviewer").addClass("js-reverse");
                    $("#search-wrapper").hide();
                    if (!isOpening) $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.coviewerStatus, value: $o.iframes.iframeStatus.VIEWER }]);
                    $("#coviewer-wrapper").delay(10).show(0);
                    break;
                case $o.iframes.iframeStatus.CHAT:
                    $(".show-coviewer").removeClass("js-reverse");
                    $("#search-wrapper,#coviewer-wrapper").hide();
                    if (!isOpening) $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.coviewerStatus, value: $o.iframes.iframeStatus.CHAT }]);
                    break;
                case $o.iframes.iframeStatus.MINIMIZED:
                   // $("#all-wrapper").hide(0);

                   // saveStatusIframeInCookie(isOpening, $o.iframes.iframeStatus.MINIMIZED);
                    if (isOpening) {
                        parent.postMessage("HIDEWRAPPER", "*");

                        // $("#coviewer-wrapper , #chat-wrapper, #email-us-form").hide(0);
                    }
                    //if ($o.core.agentsConnected) {
                    //    $("#coviewer-minimized").show(0);
                    //} else {
                    //    $("#coviewer-minimized-no-agent").show(0);
                    //}
                    if (!isOpening) {
                        $o.variablesVisitor.sendCookiesToApi($o.variablesVisitor.nameFunction.saveCookies, [{ cookie: $o.cookies.coviewerStatus, value: $o.iframes.iframeStatus.MINIMIZED }]);
                    }
                    break;
                case $o.iframes.iframeStatus.PINCODE:
                    $("#all-wrapper").hide(0);
                    $("#pincode-wrapper").show(0);
                    parent.postMessage("COVIEWERLOADED", "*");
                    break;
            }

            var viewChange = {
                View: newStatus,
                Room: $o.core.globalVariables.room,
                SentBy: $o.core.userType,
                Type: "CV"
            };
            if (viewChange.Room && $o.core.isSignalRConnected()) $o.hubsOut.sendViewChange(viewChange);
            if (clickOnPage) {
                $o.saveRecord.pageClick();
            } else if (!isOpening) {
                $o.saveRecord.statusViewer(newStatus);
            } //state
        },
        iframeStatus: {
            CLOSE: "CLOSE",
            CHAT: "CHAT",
            VIEWER: "VIEWER",
            SEARCH: "SEARCH",
            MINIMIZED: "MINIMIZED",
            PINCODE: "PINCODE"
        },
        currentIframeStatus: "",
        previousIframeStatus: "",
        enableChangeStatus: true
    };
})(window);;
//EVENTOS 
$o.inactivity.events = function () {
    $o.inactivity.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.inactivity.UI = function () {
    $o.inactivity.disableChatInputUI = function () {
        $o.chat.toogleDenyVisitorTyping(true)
    };

    $o.inactivity.messageTypesUI = function (messageType) { //DEPRECATED??
     //   var queryString = "?tokenSession=" + $o.core.globalVariables.room;
        if (messageType == 1) {
            $o.canned.sendCanned($o.canned.type.AGENTSDISCONNECT);
            $("#chat-input").addClass("chat-input-disabled");
            $("#chat-input").attr("readonly", true).blur();
            $(".chat-input-emoji").addClass("chat-input-disabled").attr("contenteditable", false).blur();  //NUevo visor
            $o.core.agentsConnected = false;
            $.connection.hub.stop();
            //$o.visitorStart.changeStatus(queryString, "Searching");
        } else if (messageType == 2) {
                $.connection.hubInterface.server.sendStatus({ tokenVisitor: $o.core.globalVariables.myToken,  tokenSession: $o.core.globalVariables.room,status: "Waiting" });
            $o.canned.sendCanned($o.canned.type.TRANSFERFROMLOGOUT);
        } else {
            $o.canned.sendCanned($o.canned.type.NOMOREAGENTS);
            $("#chat-input").addClass("chat-input-disabled");
            $("#chat-input").attr("readonly", true).blur();
            $(".chat-input-emoji").addClass("chat-input-disabled").attr("contenteditable", false).blur();  //NUevo visor
            $o.core.agentsConnected = false;
            $.connection.hub.stop();
            //$o.visitorStart.changeStatus(queryString, "Searching");
        }
    };
};;
$o.visitorRatings.events = function () {


    $("#send-survey").on("click", function () {
        $o.visitorRatings.saveRatings();
    });

    $("#close-survey").on("click", function () {
        $o.saveRecord.closeViewerBySurveyB();
        $o.visitorSearch.actionWhenClosingIframe();
    });

    $("#visitor-survey")
        .on("click", ".answer-options span", function () {
            var self = $(this),
                index = self.index();
            self.parent().find("span").removeClass("icon-common-like-button-high").addClass("icon-common-wishlist-icon");

            self.parent().find("rating-value").val(index + 1);

            self.parent().find("span:lt(" + (index + 1) + ")")
                .removeClass("icon-common-wishlist-icon")
                .addClass("icon-common-like-button-high");
        })
        .on("click", ".answer-bool input[type=radio]", function () {
        });

    $("#rating-area span").click(function (e) { //CONTROLA THUMBS
        e.stopPropagation();
        if ($(this).hasClass("active")) { //ACTIVO

            if ($o.visitorRatings.agentRated) { //RATEADO
                $(this).removeClass("active");
                $o.visitorRatings.agentRated = false;
                var domain = $("#domain-id").val();
                var idAgent = $o.core.globalVariables.agentId;
                var tokenSession = $o.core.globalVariables.room;
                $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, "DELETE", "","", $o.visitorRatings.TypeRatingGoodBad);

            } else { //NO RATEADO
                $(this).removeClass("active");
                $("#comment-agent").toggle();
            }
        } else { //NO ACTIU 
            $(this).addClass("active").siblings().removeClass("active");
            if ($("#comment-agent").is(":hidden")) $("#comment-agent").toggle();
        }
    });

    

    //Si se clica fuera de la ventana de comentario sobre el agente, se esconde
    $(document).mouseup(function (e) {
        var container = $(".comment-agent");

        if (!container.is(e.target) && container.has(e.target).length === 0) {
            container.hide();
        } else {
            var container_stars = $(".rating-stars");

            if (!container_stars.is(e.target) && container_stars.has(e.target).length === 0) {
                container_stars.hide();
            }
        }


    });

    $("#skip-rating , #save-rating").click(function (e) { // ENVIA POST
        e.stopPropagation();
        var comment = $("#comment-agent textarea").val();
        var value = $("#rating-area span.active").attr("id");
        var domain = $("#domain-id").val();

        var idAgent = $o.core.globalVariables.agentId;
        var tokenSession = $o.core.globalVariables.room;
        value = value == "bad" ? false : true;
        var agentName = $o.core.globalVariables.agentName;
        $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, value, comment, agentName, $o.visitorRatings.TypeRatingGoodBad);
        $("#comment-agent").toggle();
        $o.visitorRatings.agentRated = true;
        $("#comment-agent textarea").val("");

    });

    $("#comment-agent").click(function (e) {
        e.stopPropagation();
    });

    $("#rating-area-menu-stars span").click(function (e) { //CONTROLA THUMBS
        e.stopPropagation();
        if ($(this).hasClass("active-star")) { //ACTIVO

            if ($o.visitorRatings.agentRated) { //RATEADO
                $(this).removeClass("active-star");
                $o.visitorRatings.agentRated = false;
                var domain = $("#domain-id").val();
                var idAgent = $o.core.globalVariables.agentId;
                var tokenSession = $o.core.globalVariables.room;
                $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, "DELETE", "","", $o.visitorRatings.TypeRatingStars);

            } else { //NO RATEADO
                $(this).removeClass("active-star");
                $("#rating-stars").toggle();
            }
        } else { //NO ACTIU 
            $(this).addClass("active-star").siblings().removeClass("active-star");
            if ($("#rating-stars").is(":hidden")) {
                $("#rating-stars").toggle();
            }
        }
    });

    $("#skip-rating-stars , #save-rating-stars").click(function (e) { // ENVIA POST
        e.stopPropagation();
        var comment = $("#rating-stars textarea").val();
        var input = $("#rating-area-stars input");
        
        var value = "";
        var i;
        for (i = 0; i < input.length; i++) {
            if (input[i].checked) {
                value = input[i].value;
            }
        }
        if (!value) {
            $("#rating-stars").toggle();
            $("#rating-area-menu-stars span").removeClass("active-star");
            return;
        }
        var domain = $("#domain-id").val();

        var idAgent = $o.core.globalVariables.agentId;
        var tokenSession = $o.core.globalVariables.room;
        var agentName = $o.core.globalVariables.agentName;
        $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, value, comment, agentName, $o.visitorRatings.TypeRatingStars);
        $("#rating-stars").toggle();
        $o.visitorRatings.agentRated = true;
        $("#rating-stars textarea").val("");

    });

    $("#rating-stars").click(function (e) {
        e.stopPropagation();
    });



    //RATING AREA EN FORM SUMMARY


    $("#rating-area-form span").click(function () { // ENVIA POST
        if ($(this).hasClass("active")) { //ACTIVO
            if ($o.visitorRatings.agentRated) { //RATEADO
                $(this).removeClass("active");
                $o.visitorRatings.agentRated = false;
                //var domain = $("#domain-id").val();
                //var idAgent = $o.core.globalVariables.agentId;
                //var tokenSession = $o.core.globalVariables.room;
                //$o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, "DELETE", "");

            } else { //NO RATEADO
                $(this).removeClass("active");
            }
        } else { //NO ACTIU 
            $(this).addClass("active").siblings().removeClass("active");
        }
    });

    $("#save-rating-form").click(function () { // ENVIA POST
        var value = $("#rating-area-form span.active").attr("id");
        if (!value) return;
        var comment = $("#rating-area-form textarea").val();
        var domain = $("#domain-id").val();
        var idAgent = $o.core.globalVariables.agentId;
        var tokenSession = $o.core.globalVariables.room;
        var agentName = $o.core.globalVariables.agentName;

        value = value === "bad" ? false : true;
        $o.visitorRatings.saveRateAgent(domain, tokenSession, idAgent, value, comment, agentName, $o.visitorRatings.TypeRatingGoodBad);
        $o.visitorRatings.agentRated = true;
        $("#rating-area-form textarea").val("");
        $("#rating-area-form").remove();
        $("#rating-area-success").show();
    });

    $o.visitorRatings.UI();
};


$o.visitorRatings.UI = function () {

    $o.visitorRatings.printRatings = function (result) {
        if (result.length) {
            $("#visitor-survey").show();
            var layout = "<ul>";
            $.each(result, function (i) {

                layout += "<li data-questionid='" + result[i].Id + "' data-type=" + result[i].Type + ">";
                layout += "<p class='question'>" + (i + 1) + ". " + result[i].Question + "</p>";

                if (result[i].Type == 1) {
                    layout += "<div class='answer-bool' data-answerid=" + result[i].Id + "><input type='radio' class='survey-radio-yes' value='Yes' name='response-" + result[i].Id + "'>" + culture.coviewer.RatingSummaryYes + "<input type='radio' class='survey-radio-no' value='No' name='response-" + result[i].Id + "' >" + culture.coviewer.RatingSummaryNo + "</div>";
                }
                else if (result[i].Type == 2) {

                    layout += "<div class='rating-points answer' data-answerid=" + result[i].Id + "><input type='hidden' class='rating-value'>" +
                        "<p class='answer-options'><span class='icon-common-wishlist-icon glyph'></span>" +
                        "<span class='icon-common-wishlist-icon glyph'></span>" +
                        "<span class='icon-common-wishlist-icon glyph'></span>" +
                        "<span class='icon-common-wishlist-icon glyph'></span>" +
                        "<span class='icon-common-wishlist-icon glyph'></span>" +
                        "</div>";
                }
                else if (result[i].Type == 3) {
                    layout += "<div class='answer-text' data-answerid=" + result[i].Id + "><textarea data-answerid=" + result[i].Id + " placeholder='" + culture.coviewer.RatingSummaryPlaceHolder + "'></textarea></div>";
                }
                layout += "</li>";
            });
            if (($o.settings.showRatingAgent == "True") && (!$o.visitorRatings.agentRated)) {

                layout += "<li  data-agent='true' data-questionid='0' data-type='1'><p class='answer-bool'>" + culture.coviewer.RatingSummaryAgent + "</p><div class='answer-bool answer-agents'><input type='radio' class='survey-radio-yes' name='response-agents' value='true'>" + culture.coviewer.RatingSummaryGood + "<input type='radio' class='survey-radio-no' name='response-agents' value='false'>" + culture.coviewer.RatingSummaryBad + "</div></li>";
            }
            $("#survey-form").append(layout);
        } else {
            $o.visitorSearch.actionWhenClosingIframe();
        }
    };


    $o.visitorRatings.saveRatings = function () {
        var answers = [];
        $("#survey-form li").each(function () {
            var answerValue = "";
            var typeResponse = 2;
            if ($(this).attr("data-type") == 1) {
                answerValue = $(this).find('input[type=radio]:checked').val();
            }
            if ($(this).attr("data-type") == 2) {
                answerValue = $(this).find("span.icon-common-like-button-high").length;
            }
            if ($(this).attr("data-type") == 3) {
                answerValue = $(this).find("textarea").val();
            }


            if ($(this).attr("data-agent") == 'true') {
                answerValue = $(this).find('input[type=radio]:checked').val();
                typeResponse = 1;
            }

            var answer = {
                RatingQuestionId: $(this).attr("data-questionid"),
                Response: answerValue,
                TypeResponse: typeResponse
            };

            answers.push(answer);

        });

        $.post("/Ratings/SaveResponseSessionRating", { tokenSession: $o.core.globalVariables.room, tokenAgent: $o.core.globalVariables.otherToken, jsonResult: JSON.stringify(answers) }, function (result) {
            $o.visitorSearch.actionWhenClosingIframe();
        });
    };

};;
//EVENTOS 
$o.visitorSearch.events = function () {

    $(".results")
        .on("click", "li", function (e) {//To send product to coviewer.
            if (!e.isPropagationStopped()) {

                var nodeId = $(this).attr("data-nodeid");
                if (($o.visitorSearch.enableSelectResult) && (nodeId !== $o.core.globalVariables.internalId) && (!$o.search.sendingProductToCanva)) {
                    $o.search.sendingProductToCanva = true;
                    $o.carousel.sendIdToCarousel(nodeId, $o.carousel.lists.VIEWED, $o.carousel.actions.VIEWINCANVA);
                }
            }
        })
        //To hide more actions.
        .on("mouseleave", ".more-actions-menu", function () {
            $(this).hide().css({ 'top': 3 });
        });


    //Reset input box
    $("#search-term").on("mousedown", function () {
        //   $o.log($(this).is(':focus'));
        if (!$(this).is(':focus') && ($(this).val() !== "")) $(this).attr("placeholder", culture.coviewer.SearchAgain).val("").focus();
    });

    // Button to start experience  (YES and "ask us anything")
    //$("#go-button, #just-looking-engage").on("click", function () {
    //    $o.visitorSearch.changeToWaitingStatus();
    //});

    //Button for just looking.
    $("#just-looking-button").click(function () {
        $("#engage-chat, .question-panel").hide();
        $("#just-looking-wrapper,.sort-panel").show();
        $o.visitorSearch.sendJustLookingChatMessage();
        $("#search-banner").show();
        //$o.saveRecord.justLookingB();
    });

    //Boton no agents "keep searching"
    $("#keep-searching").on("click", function () {
        $(".bridge-no-agents").hide();
        $(".sort-panel").show();
        $("#no-agent-header").html(culture.coviewer.MylistTip + "<span>" + culture.coviewer.Email + "</span>.");
    });

    //Boton no agents "Email Us"
    $("#email-us").on("click", function () {
        $(".bridge-no-agents").hide();
        $(".sort-panel , #email-us-form").show();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "form");
    });

    $("#close-coviewer").on("click", function () {
        $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGOPTION, $o.core.localStorageActions.REMOVE);
        $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CLOSE);
    });

    //Boton overbooking agents "Email Us"  (Revisar operativa)
    $("#email-us-overbooking").on("click", function () {
        $(".bridge-overbooking").hide();
        $(".sort-panel,#email-us-form").show();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "form");
    });

    $("#email-us-product").on("focus", function () {
        if ($o.core.globalVariables.internalId) {
            var product = viewedVM.getProduct($o.core.globalVariables.internalId);
            if (product.Title.length) $(this).val(product.Title + " (" + product.InternalId + ")");
        }
    });

    //Send email us button
    $("#send-email-us").on("click", function () {
        $("#email-us-form-message").hide();

        //validacion
        var canPass = true;
        var canPassMail = true;
        var regexMail = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
        var regexPhone = /^(\(?\+?[0-9]*\)?)?[0-9_\- \(\)]*$/;
        var nameInput = $("#email-us-name"),
            commentsInput = $("#email-us-comments"),
            emailInput = $("#email-us-email"),
            zipInput = $("#email-us-zip"),
            phoneInput = $("#email-us-phone"),
            productInput = $("#email-us-product"),
            knowUsInput = $("#email-us-know-us"),
            errorClass = "data-contact-error",
            checkboxPolicy = $("#checkbox-conditions-contact");

        //Comprobación campo nombre: no puede estar vacío
        if (nameInput.val().length <= 0) {
            nameInput.addClass(errorClass);
            canPass = false;
        } else {
            nameInput.removeClass(errorClass);
        }

        //Comprobación campo mail: no puede estar vacío y debe cumplir con el regex de mail
        if (emailInput.val().length <= 0) {
            emailInput.addClass(errorClass);
            canPass = false;
            canPassMail = false;
        }
        else if (!regexMail.test(emailInput.val().trim())) {
            emailInput.addClass(errorClass);
            canPass = false;
            canPassMail = false;
        }
        else {
            emailInput.removeClass(errorClass);
            phoneInput.removeClass(errorClass);
        }

        //Comprobación campo comentarios: no puede estar vacío
        if (commentsInput.val().length <= 0) {
            commentsInput.addClass(errorClass);
            canPass = false;
        }
        else commentsInput.removeClass(errorClass);

        //Comprobación campo teléfono: sólo validamos si tiene la clase 'mandatory'. Entonces queremos que no esté vacío y que cumpla con el regex de teléfono
        if (phoneInput.length && phoneInput.hasClass("mandatory")) {
            if (phoneInput.val().length <= 0) {
                phoneInput.addClass(errorClass);
                canPass = false;
            }
            else if (!regexPhone.test(phoneInput.val().trim())) {
                phoneInput.addClass(errorClass);
                canPass = false;
            }
            else phoneInput.removeClass(errorClass);
        }

        //Comprobación campo teléfono: si tiene la clase 'optional-combined'. Validamos (que no este vacío y regex) pero lo combinamos con el campo Mail. Tiene que tener alguno de los 2 campos para que 'canPass' sea true.
        if (phoneInput.length && phoneInput.hasClass("optional-combined") && !canPassMail) {
            if (phoneInput.val().length <= 0) {
                phoneInput.addClass(errorClass);
                canPass = false;
            }
            else if (!regexPhone.test(phoneInput.val().trim())) {
                phoneInput.addClass(errorClass);
                canPass = false;
            }
            else {
                phoneInput.removeClass(errorClass);
                emailInput.removeClass(errorClass);
                canPass = true;
            }
        }


        //Comprobación campo Protección de Datos: debe estar marcado si es que existe en el formulario
        if (checkboxPolicy.length) {
            if (!checkboxPolicy.is(":checked")) {
                canPass = false;
                $(".form-wrapper .checkbox-conditions-wrapper").addClass("not-accepted");
            } else {
                $(".form-wrapper .checkbox-conditions-wrapper").removeClass("not-accepted");
            }
        }
        
        if ($o.utils && $o.utils.customContactFormValidation) {
            canPass = $o.utils.customContactFormValidation(canPass);
        }
        
        if (canPass) {
            $("#email-us-form-loading").show(); // Deberia ser el loading! TODO: Rehacer loading feedback y mensajes. 
            $("#send-email-us").hide();
            var userData = {
                name: nameInput.val(),
                email: emailInput.val(),
                comments: commentsInput.val(),
                phone: phoneInput.val(),
                zip: zipInput.val(),
                product: productInput.val(),
                knowUs: knowUsInput.val()
            };
            $o.visitorSearch.getViewedProductsForEmail(userData);
            parent.postMessage("SENDANALYTICSEVENT,GAContactFormSent", "*");

        }
    });

    // Fold and Unfold coviewer.
    $(".coview-switch img").click(function () {
        var layout = "";
        if (($o.iframes.currentIframeStatus === $o.iframes.iframeStatus.V) || ($o.iframes.currentIframeStatus === $o.iframes.iframeStatus.CLOSE)) {
            $(this).attr("src", "/api/img/core/right-arrow.png");
            layout = $o.iframes.iframeStatus.S;
        }
        else {
            $(this).attr("src", "/api/img/core/left-arrow.png");
            layout = $o.iframes.chatShown ? $o.iframes.iframeStatus.CLOSE : $o.iframes.iframeStatus.V;
        };
        $o.iframes.toggleIframeParts(layout);
    });


    // CLOSE OCT8NE SYSTEM.
    $(".close-iframe-visitor-js").click(function () { //CERRAR VISOR         
        $(".chat-menu-options").hide();   
        if ($o.core.globalVariables.internalId && $o.settings.showSendSummary === "True") {
            $(".chat-menu-options").hide();
            $("#summary-finalized-form").show();
            //TODO: HACER QUE SOLO SEA UN POST
            $o.saveRecord.closeByMenuB();
            $o.saveRecord.showSummary();
            $o.iframes.changeStatusIframe($o.iframes.iframeStatus.CHAT);
        } else {
            $o.saveRecord.closeByMenuB();
            $o.visitorSearch.actionWhenClosingIframe();
        }
    });


    $(".send-summary").on("click", function () { //BOTON MOSTRAR GET SUMMARY ANTIGUO VISOR!
        $o.saveRecord.getSummaryB();
        $(".chat-menu-options").hide();
        $("#summary-form").show();
        $o.saveRecord.showSummary();
    });

    $(".send-summary-button").on("click", function () { //ENVIA MAIL (GET SUMMARY)
        var email = $o.settings.privacyPolicy.length ? $(this).prev().prev() : $(this).prev();
        var emailAdress = email.val();
        var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
        var canPass = false;

        if (!regex.test(emailAdress)) {
            email.addClass("data-contact-error");
        } else {
            canPass = true;
            email.removeClass("data-contact-error");
        }

        if ($o.settings.privacyPolicy.length) {
            var checkboxPolicy = $(this).prev().find(".checkbox-conditions-summary");
            if (!checkboxPolicy.is(":checked")) {
                canPass = false;
                $(this).prev().addClass("not-accepted");
            } else {
                if (canPass) canPass = true;
                $(this).prev().removeClass("not-accepted");
            }
        }

        if (canPass) {
            $o.visitorSearch.getRecordsMailInfo(emailAdress);
            $("#summary-form p , #summary-finalized-form>p ").delay(400).show(0).html(culture.coviewer.SummarySent);
            $(".email-adress-summary,.send-summary-button,.checkbox-conditions-summary-wrapper").hide(0);
            $(".close-summary-finalized-form").css("margin", "0 57px 0 0");
            $o.saveRecord.sendSummary(emailAdress); //EMAIL
            $o.canned.sendCanned($o.canned.type.SENDSESSION, culture.coviewer.SummarySentTo + " " + emailAdress);
        }
    });

    $(".summary-button").on("click", function () { //EVENTO SOLO NUEVO VISOR!
        var form;        
        if ($o.core.globalVariables.agentsConnected=="True") {
             form = $("#send-summary-menu-chat");
        } else {
             form = $("#send-summary-menu-form");
        }

        var email = form.find(".summary-input");
        var emailAdress = email.val();
        var regex = /^[a-zA-Z0-9._-]+([+][a-zA-Z0-9._-]+){0,1}[@][a-zA-Z0-9._-]+[.][a-zA-Z]{2,6}$/;
        var canPass = false;

        if (!regex.test(emailAdress)) {
            email.addClass("data-contact-error");
        } else {
            canPass = true;
            email.removeClass("data-contact-error");
        }

        if ($o.settings.privacyPolicy.length) {            
            var checkboxPolicy = form.find(".checkbox-conditions-wrapper");
            var checkboxPolicyCheck = checkboxPolicy.find("input");

            if (!checkboxPolicyCheck.is(":checked")) {
                canPass = false;
                checkboxPolicy.addClass("not-accepted");
            } else {
                if (canPass) canPass = true;
                checkboxPolicy.removeClass("not-accepted");
            }
        }

        if (canPass) {
            //  console.log("Mostrar capa!")
            $o.visitorSearch.getRecordsMailInfo(emailAdress);
            $o.saveRecord.sendSummary(emailAdress); //EMAIL
            $o.canned.sendCanned($o.canned.type.SENDSESSION, culture.coviewer.SummarySentTo + " " + emailAdress);
            $(".chat-menu-options ul").hide(0);
            $(".send-summary-feedback").show(0);
        }
    });

    $(".feedback-ok").on("click", function () {  //EVENTO SOLO NUEVO VISOR!
        $(".send-summary-feedback , .chat-menu-options").hide(0);
        $(".chat-menu-options ul").show(0);
    });

    $("#sound-option").on("click", function () { //EL CONTROL SE REALIZA MEDIANTE SESSION STORAGE. SI NO ESTA HABILITADO,SUENA SIEMPRE; no se puede cambiar a OFF!
        var controlSound = $("#sound-option span").attr("class");

        if (controlSound === "icon-common-volume-on HTxt1") {
            $o.storage.local.set($o.core.localStorageTypes.SOUND, "false");
            $("#sound-option span").removeClass().addClass("icon-common-volume-off HTxt1");
            //Cambiar a off
        } else {
            //Cambiar a on
            $o.storage.local.set($o.core.localStorageTypes.SOUND, "true");
            $("#sound-option span").removeClass().addClass("icon-common-volume-on HTxt1");
        };
    });

    $("#back-to-oct8ne").on("click", function () {
        $("#summary-finalized-form").hide();
    });

    // Minimize all coviewer and chat and results.
    $(".results-info img").click(function () {
        $o.iframes.toggleIframeParts($o.iframes.iframeStatus.M);
        $o.iframes.iframeCentered = false;
    });
    // Switch between results search and mylist.
    $("#acces-to-mylist").click(function () {
        $o.visitorSearch.switchResultsMyList();
    });

    $(".powered-by-oct8ne").on("click", function () { //No hay evento en Mobil. No se muestra la capa en Mobil.
        $("#block-modal").show();
    });

    $("#close-legend , #oct8ne-version .icon-common-close-button").on("click", function () {
        $("#block-modal").hide();
    });

    $(".close-new-tutorial").on("click", function () {  //EVENTOS NUEVO VISOR
        $("#tutorial-coviewer").fadeOut(800);
        $o.storage.local.set($o.core.localStorageTypes.HIDENEWTUTORIAL, true);

        //GUARDAR SESSION STORAGE
    });

    $(".powered-by-oct8ne-new").on("click", function () { //EVENTOS NUEVO VISOR
        $("#block-modal").show().animate({
            top: "0px",
            height: "495px",
            opacity: "1"
        });

        $("#oct8ne-version").delay(500).fadeIn(100);

    });

    $("#close-legend-new").on("click", function () {
        $("#block-modal").animate({
            top: "395px",
            height: "1px",
            opacity: "0"
        }).hide(0);

        $("#oct8ne-version").hide();
    });

    $o.visitorSearch.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.visitorSearch.UI = function () {
    $o.visitorSearch.otherAgentAfterWaitingUI = function (data) {
        $("#just-looking-wrapper,#engage-chat, .question-panel").hide();
        $("#yes-chat,.sort-panel").show();
        $(".agent-avatar-image, .other-cursor img").css({ "background": "url('" + data.Avatar + "') center center / cover" });
        $("#yes-chat #welcome-message").html($o.visitorSearch.assignedAgentName + culture.coviewer.AgentBusy + data.Name);
        $(".name-agent").html($o.visitorSearch.assignedAgentName);

        if ($o.utils && $o.utils.rewriteProfileAgent) { $o.utils.rewriteProfileAgent(); }
    };

    $o.visitorSearch.changeStatusOverbookingToWaitingUI = function (visitor) {
        $o.visitorStart.avatarAgent = visitor.Agent.Avatar;
        $(".agent-avatar-image, .other-cursor  .avatar-agent").css({ "background": "url('" + visitor.Agent.Avatar + "') center center / cover" });
        $(".name-agent").html(visitor.Agent.Name);

        if ($o.utils && $o.utils.rewriteProfileAgent) { $o.utils.rewriteProfileAgent(); }
    };

    $o.visitorSearch.reciveFormUI = function () {
        $("#yes-chat, .sort-panel").hide();
        $("#busy-agent, .bridge-no-agents").show();
    };

    $o.visitorSearch.reciveSendToMyListUI = function () {
        $("#my-list-items").show("pulsate", { times: 5 }, 200, function () {
            mylistVM.setActiveTab();
        });
    };
    $o.visitorSearch.hideSearchBannerUI = function () { //DEPRECATED ??
        $("#search-banner,#results-scrollbar,#speed-search").hide();
        $("#minimized-viewer-message,#all-wrapper").show();
    };

    $o.visitorSearch.sendJustLookingChatMessageUI = function (message, justLookingButton) {
        if (!$o.visitorSearch.showedJustLookingMessage) {
            if (message !== null) {
                $o.visitorSearch.showedJustLookingMessage = true;
                if (justLookingButton) {
                    $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGBUTTON, true);
                } else {
                    $o.storage.local.set($o.core.localStorageTypes.JUSTLOOKINGBUTTON, $o.core.localStorageActions.REMOVE);
                };

                $o.canned.sendCanned($o.canned.type.WELCOME, message);
            }
        }
    };

    $o.visitorSearch.sendGdprMessageUI = function (message) {
        if (!$o.visitorSearch.showedGdprMessage) {
            if (message !== null) {
                $o.visitorSearch.showedGdprMessage = true;
                $o.canned.sendGdpr(message);
            }
        }
    };

    $o.visitorSearch.sendVipChatMessageUI = function (message) {
        if (message !== null) {
            $o.canned.sendCanned($o.canned.type.VIPMESSAGE, message);
        }
    };
    $o.visitorSearch.changeToWaitingStatusUI = function () {

    };
    $o.visitorSearch.showSearchTutorial = function () {
        $("#tutorial-search").show();
    };
    $o.visitorSearch.showCoviewerTutorial = function () {
        var hideTutorial = $o.storage.local.get($o.core.localStorageTypes.HIDENEWTUTORIAL);
        if ((window.location.pathname.indexOf("V3") > -1) && hideTutorial) {
            return;
        } else {
            $("#tutorial-coviewer").show();
            if (!$o.core.agentsConnected) {
                $("#instructions-upload").remove();
            };
        };
    };


    $o.visitorSearch.hideCoviewerTutorial = function () {
        $("#tutorial-coviewer,#tutorial-search").remove();

    };
    $o.visitorSearch.hideSearchTutorial = function () {
        $("#tutorial-coviewer,#tutorial-search").remove();
    };
};;
//EVENTOS 
$o.visitorStart.events = function () {
    $o.visitorStart.UI();
};

//FUNCIONES QUE MODIFICAN EL DOM 
$o.visitorStart.UI = function () {
    $o.visitorStart.showChatWrapperUI = function () {
        $("#chat-wrapper").show();
        $(".email-us-form").hide();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "chat");
    };

    $o.visitorStart.showAllWrapperUI = function () {
        $("#all-wrapper").show(0);
        $o.visitorStart.finishLoading();
        parent.postMessage("COVIEWERLOADED", "*");
    };

    $o.visitorStart.agentsConnectedChangesUI = function (result) {
        $(".connecting-agent").hide();
        $("#chat-input").attr("readonly", false);
        $o.core.globalVariables.otherName = $o.visitorSearch.assignedAgentName;
        $o.core.globalVariables.otherToken = result.Agent.Token;
        $o.visitorStart.avatarAgent = result.Agent.Avatar;

        $(".name-agent").html($o.visitorSearch.assignedAgentName);
        $(".agent-avatar-image, .other-cursor  .avatar-agent").css({ "background": "url('" + result.Agent.Avatar + "') center center / cover" });
        if ($o.utils && $o.utils.rewriteProfileAgent) { $o.utils.rewriteProfileAgent(); }

        if ($o.settings.showRatingAgent) $o.visitorStart.printRatedAgent(result.Agent.AgentRated, result.Agent.AgentRateType);
        //$("#coviewer-visitor").after("<input type='hidden' id='other-token' value='" + result.Agent.Token + "' />");
        // $(".sort-panel, #instructions-upload").show();
    };

    $o.visitorStart.agentsDisconnectedChangesUI = function () {
        $o.visitorSearch.enableSelectResult = true;
        $(".sort-panel , #email-us-form").show();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "form");
    };

    $o.visitorStart.displayFormCuzNoAgentsConnected = function () {
        $("#chat-wrapper").hide();
        $(".email-us-form").show();
        $o.storage.local.set($o.core.localStorageTypes.LASTDISPLAY, "form");
        if ($.connection.hub.state != $.signalR.connectionState.disconnected) $.connection.hub.stop();
    };


    $o.visitorStart.enterByCheckoutUI = function () { };

    $o.visitorStart.changeAgentUI = function (result) {
        $o.core.globalVariables.otherToken = result.Visitor.Agent.Token;
        $o.core.globalVariables.agentId = result.Visitor.Agent.AgentId;
        $o.core.globalVariables.otherName = result.Visitor.Agent.Name;

        $o.visitorStart.avatarAgent = result.Visitor.Agent.Avatar;
        $o.visitorStart.assignedDepartment.Name = result.NewDepartment;

        if ($o.core.globalVariables.enabledDepartments == "True") {
            $(".after-join-agent .message-agent").text(result.NewDepartment);
        }

        $(".name-agent").html(result.Visitor.Agent.Name);
        $(".agent-avatar-image, .other-cursor  .avatar-agent").css({ "background": "url('" + result.Visitor.Agent.Avatar + "') center center / cover" });
        if ($o.utils && $o.utils.rewriteProfileAgent) { $o.utils.rewriteProfileAgent(); }

        $o.visitorStart.printRatedAgent(result.Visitor.Agent.AgentRated);
        //se debe bindear con nuevos parametros de capabilities TODO:ARAMIS
        $o.visitorStart.reBindingCallCapabilities(result.Visitor);

    };

    $o.visitorStart.printRatedAgent = function (agentRated, rateType) {
        if (rateType === $o.visitorRatings.TypeRatingGoodBad) {
            if (agentRated != null) {
                var rated = agentRated ? "good" : "bad";
                $("#" + rated).addClass("active");
                $o.visitorRatings.agentRated = true;
            } else {
                $("#rating-area > span").removeClass("active");
                $o.visitorRatings.agentRated = false;
            }
        } else if (rateType === $o.visitorRatings.TypeRatingStars) {
            if (agentRated != null) {
                var index = (agentRated - 5) * -1;
                var input = $("#rating-area-stars input");
                input[index].checked = true;
                $("#rating-area-menu-stars > span").addClass("active-star");
                $o.visitorRatings.agentRated = true;
            } else {
                $("#rating-area-menu-stars > span").removeClass("active-star");
                $o.visitorRatings.agentRated = false;
            }
        }
    };

    $o.visitorStart.changeHeaderChatToChatting = function () {
        if ($o.core.globalVariables.enabledDepartments == "True" && $o.visitorStart.assignedDepartment.Name != "") $(".after-join-agent .message-agent").text($o.visitorStart.assignedDepartment.Name);
        $(".before-join-agent").hide();
        $(".after-join-agent").show();
        if ($o.core.globalVariables.conferenceProvider) $o.chat.showRatingsAreaInForm(); //Debe salir aunque no tenga "https" pero si Provider. Se hace aqui cuando tiene agente asignado.
    };

    $o.visitorStart.changeHeaderChatToAvailable = function () {
        $(".after-join-agent").hide();
        $(".before-join-agent").show();
    };

    $o.visitorStart.collpaseChatComunications = function () {
        var height = "158px";
        if (window.location.pathname.indexOf("V3") > -1) {
            height = "203px";
        }

        $(".oct8ne-communications, .chat-scrollbar, .oct8ne-chat-room, .chat-scrollbar.scrollbar").css({ "height": height, "margin-top": "190px" });
        $(".oct8ne-communications .real-background").css({ "height": height });
        if ($("#search-wrapper").length) $("#oct8ne-conference-body , #oct8ne-conference-toolbar , #oct8ne-conference-info").removeClass("bigger");
    };

    $o.visitorStart.expandChatComunications = function () {
        var height = "348px";
        if (window.location.pathname.indexOf("V3") > -1) {
            height = "393px";
        }

        $(".oct8ne-communications, .chat-scrollbar, .oct8ne-chat-room, .chat-scrollbar.scrollbar , .oct8ne-communications .real-background").css({ "height": height, "margin-top": "0px" });
        if ($("#search-wrapper").length) $("#oct8ne-conference-body , #oct8ne-conference-toolbar , #oct8ne-conference-info").addClass("bigger");
        if ($o.iframes.currentIframeStatus == $o.iframes.iframeStatus.CHAT) {
            $(".chat-header .show-coviewer").trigger("click");
        }
        if ($("#tutorial-coviewer").is(":visible")) {
            $("#tutorial-coviewer").hide();
        }

    };

    $o.visitorStart.resetChatComunications = function () {
        if ($("#on-hold-lay").is(":visible")) {
            return;
        }

        var height = "348px";
        if (window.location.pathname.indexOf("V3") > -1) {
            height = "393px";
        }
        $(".oct8ne-communications, .chat-scrollbar, .oct8ne-chat-room, .chat-scrollbar.scrollbar , .oct8ne-communications .real-background").css({ "height": height, "margin-top": "0px" });
    };

    $o.visitorStart.showAccessFormWrapperUI = function (askDepts, askInfo) {
        $("#access-form-wrapper").show();

        if (!askDepts) { $("#departments-wrapper").hide(); }
        if (!askInfo) { $("#info-wrapper").hide(); }
        if (askDepts && askInfo) $("#departments-wrapper .title-section").hide();
    };

    $o.visitorStart.displaySoundVisitorUI = function () {
        var soundEnabledIconClass = $o.variablesVisitor.enabledSoundVisitor == "true" ? "icon-common-volume-on HTxt1" : "icon-common-volume-off HTxt1";
        $("#sound-option span").removeClass().addClass(soundEnabledIconClass);
    };

    $o.visitorStart.videoInitFromEmbed = function () {
        $(".btn-start-video.init-call").trigger("click");
    };

    $o.visitorStart.reBindingCallCapabilities = function (visitorNewParams) { //Por si viene de BOT!! Hay que des-sobreescribirlas

        if ($o.core.globalVariables.conferenceProvider) {
            var session = {
                "visitor": {
                    'hasAudioDevices': $o.core.globalVariables.visitorHasAudioDevices, //&& visitorNewParams.VisitorCanStartConference,
                    'hasVideoDevices': $o.core.globalVariables.visitorHasVideoDevices, //&& visitorNewParams.VisitorCanStartConference,
                    'isWebRtcSupported': $o.core.globalVariables.visitorIsWebRtcSupported
                },
                "agent": {
                    'hasAudioDevices': visitorNewParams.Agent.AgentHasAudioDevices && (visitorNewParams.Agent.AllowAudioConference || visitorNewParams.Agent.AllowMobileAudioConference) ? true : false,
                    'hasVideoDevices': visitorNewParams.Agent.AgentHasVideoDevices && (visitorNewParams.Agent.AllowVideoConference || visitorNewParams.Agent.AllowMobileVideoConference) ? true : false,
                    'isWebRtcSupported': visitorNewParams.Agent.AgentIsWebRtcSupported
                }
            };
            //para asegurar que está en entornos SSL y tiene el conferenceVM cargado
            if (window.conferenceVM) {
                if (!visitorNewParams.VisitorCanStartConference) {
                    window.conferenceVM.hideStartCallButtons(true);
                }
                window.conferenceVM.updateSessionInfo(session); //Una vez sabemos las capabilities de agente, updateamos info del conferenceVM en Visitor
                // window.conferenceVM.resumeCallIfNeeded(); //TODO:ARAMIS Rellamada Conferencia si hay una establecida
            }
        }
    };

    //PARCHE PARA EXEL. QUIEREN EMBED PARA QUE LLAME INICIALMENTE
    //if ($o.enterData.initVideoCall === "true") {
    //    setTimeout(function () { //SETIMEOUT PARA ASEGURAR QUE EL TRIGGER CLIC FUNCIONA
    //        $(".btn-start-video.init-call").trigger("click");
    //    }, 500); 
    //}

};;
